{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/adminC-dashboard/adminC-dashboard.component.html","./src/app/components/adminC-dashboard/adminC-personal-profile/adminC-personal-profile.component.html","./src/app/components/adminC-dashboard/available-appointment-listing/available-appointment-listing.component.html","./src/app/components/adminC-dashboard/clinic-profile-info/clinic-profile-info.component.html","./src/app/components/adminC-dashboard/doctor-form/doctor-form.component.html","./src/app/components/adminC-dashboard/doctor-listing/doctor-listing.component.html","./src/app/components/adminC-dashboard/new-available-appointment-page/new-available-appointment-page.component.html","./src/app/components/adminC-dashboard/nurse-form/nurse-form.component.html","./src/app/components/adminC-dashboard/nurse-listing/nurse-listing.component.html","./src/app/components/adminC-dashboard/ordination-form/ordination-form.component.html","./src/app/components/adminC-dashboard/ordination-listing/ordination-listing.component.html","./src/app/components/adminC-dashboard/type-of-examination-form/type-of-examination-form.component.html","./src/app/components/adminC-dashboard/type-of-examination-listing/type-of-examination-listing.component.html","./src/app/components/adminC-dashboard/vacation-requests/vacation-requests.component.html","./src/app/components/adminCC-dashboard/admin-personal-profile/admin-personal-profile.component.html","./src/app/components/adminCC-dashboard/admin-profile.component.html","./src/app/components/adminCC-dashboard/clinic-admin-form/clinic-admin-form.component.html","./src/app/components/adminCC-dashboard/clinic-administrators-listing/clinic-administrators-listing.component.html","./src/app/components/adminCC-dashboard/clinic-form/clinic-form.component.html","./src/app/components/adminCC-dashboard/clinic-listing/clinic-listing.component.html","./src/app/components/adminCC-dashboard/diagnosis-form/diagnosis-form.component.html","./src/app/components/adminCC-dashboard/diagnosis-listing/diagnosis-listing.component.html","./src/app/components/adminCC-dashboard/medication-form/medication-form.component.html","./src/app/components/adminCC-dashboard/medication-listing/medication-listing.component.html","./src/app/components/adminCC-dashboard/registration-listing/registration-listing.component.html","./src/app/components/change-password/change-password.component.html","./src/app/components/doctor-home/doctor-calendar/doctor-calendar.component.html","./src/app/components/doctor-home/doctor-home/doctor-home.component.html","./src/app/components/doctor-home/doctor-my-profile/doctor-my-profile.component.html","./src/app/components/doctor-home/doctor-profile/doctor-profile.component.html","./src/app/components/doctor-home/new-appointment-page/new-appointment-page.component.html","./src/app/components/doctor-home/new-vacation-request/new-vacation-request.component.html","./src/app/components/doctor-home/patient-listing/patient-listing.component.html","./src/app/components/header/header.component.html","./src/app/components/helperComponents/dialog/dialog.component.html","./src/app/components/login/login.component.html","./src/app/components/nurse-home/nurse-calendar/nurse-calendar.component.html","./src/app/components/nurse-home/nurse-home.component.html","./src/app/components/nurse-home/nurse-patient-listing/nurse-patient-listing.component.html","./src/app/components/nurse-home/nurse-profile/nurse-personal-profile/nurse-personal-profile.component.html","./src/app/components/nurse-home/nurse-profile/nurse-profile.component.html","./src/app/components/nurse-home/prescription-listing/prescription-listing.component.html","./src/app/components/patient-home/patient-clinic-listing/patient-clinic-listing.component.html","./src/app/components/patient-home/patient-home.component.html","./src/app/components/patient-home/patient-pending-appointments-listing/patient-pending-appointments-listing.component.html","./src/app/components/patient-profile/medical-record/medical-record.component.html","./src/app/components/patient-profile/patient-personal-profile/patient-personal-profile.component.html","./src/app/components/patient-profile/patient-profile.component.html","./src/app/components/registration/registration.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/adminC-dashboard/adminC-dashboard.component.css","./src/app/components/adminC-dashboard/adminC-dashboard.component.ts","./src/app/components/adminC-dashboard/adminC-personal-profile/adminC-personal-profile.component.css","./src/app/components/adminC-dashboard/adminC-personal-profile/adminC-personal-profile.component.ts","./src/app/components/adminC-dashboard/available-appointment-listing/available-appointment-listing.component.css","./src/app/components/adminC-dashboard/available-appointment-listing/available-appointment-listing.component.ts","./src/app/components/adminC-dashboard/clinic-profile-info/clinic-profile-info.component.css","./src/app/components/adminC-dashboard/clinic-profile-info/clinic-profile-info.component.ts","./src/app/components/adminC-dashboard/doctor-form/doctor-form.component.css","./src/app/components/adminC-dashboard/doctor-form/doctor-form.component.ts","./src/app/components/adminC-dashboard/doctor-listing/doctor-listing.component.css","./src/app/components/adminC-dashboard/doctor-listing/doctor-listing.component.ts","./src/app/components/adminC-dashboard/new-available-appointment-page/new-available-appointment-page.component.css","./src/app/components/adminC-dashboard/new-available-appointment-page/new-available-appointment-page.component.ts","./src/app/components/adminC-dashboard/nurse-form/nurse-form.component.css","./src/app/components/adminC-dashboard/nurse-form/nurse-form.component.ts","./src/app/components/adminC-dashboard/nurse-listing/nurse-listing.component.css","./src/app/components/adminC-dashboard/nurse-listing/nurse-listing.component.ts","./src/app/components/adminC-dashboard/ordination-form/ordination-form.component.css","./src/app/components/adminC-dashboard/ordination-form/ordination-form.component.ts","./src/app/components/adminC-dashboard/ordination-listing/ordination-listing.component.css","./src/app/components/adminC-dashboard/ordination-listing/ordination-listing.component.ts","./src/app/components/adminC-dashboard/type-of-examination-form/type-of-examination-form.component.css","./src/app/components/adminC-dashboard/type-of-examination-form/type-of-examination-form.component.ts","./src/app/components/adminC-dashboard/type-of-examination-listing/type-of-examination-listing.component.css","./src/app/components/adminC-dashboard/type-of-examination-listing/type-of-examination-listing.component.ts","./src/app/components/adminC-dashboard/vacation-requests/vacation-requests.component.css","./src/app/components/adminC-dashboard/vacation-requests/vacation-requests.component.ts","./src/app/components/adminCC-dashboard/admin-personal-profile/admin-personal-profile.component.css","./src/app/components/adminCC-dashboard/admin-personal-profile/admin-personal-profile.component.ts","./src/app/components/adminCC-dashboard/admin-profile.component.css","./src/app/components/adminCC-dashboard/admin-profile.component.ts","./src/app/components/adminCC-dashboard/clinic-admin-form/clinic-admin-form.component.css","./src/app/components/adminCC-dashboard/clinic-admin-form/clinic-admin-form.component.ts","./src/app/components/adminCC-dashboard/clinic-administrators-listing/clinic-administrators-listing.component.css","./src/app/components/adminCC-dashboard/clinic-administrators-listing/clinic-administrators-listing.component.ts","./src/app/components/adminCC-dashboard/clinic-form/clinic-form.component.css","./src/app/components/adminCC-dashboard/clinic-form/clinic-form.component.ts","./src/app/components/adminCC-dashboard/clinic-listing/clinic-listing.component.css","./src/app/components/adminCC-dashboard/clinic-listing/clinic-listing.component.ts","./src/app/components/adminCC-dashboard/diagnosis-form/diagnosis-form.component.css","./src/app/components/adminCC-dashboard/diagnosis-form/diagnosis-form.component.ts","./src/app/components/adminCC-dashboard/diagnosis-listing/diagnosis-listing.component.css","./src/app/components/adminCC-dashboard/diagnosis-listing/diagnosis-listing.component.ts","./src/app/components/adminCC-dashboard/medication-form/medication-form.component.css","./src/app/components/adminCC-dashboard/medication-form/medication-form.component.ts","./src/app/components/adminCC-dashboard/medication-listing/medication-listing.component.css","./src/app/components/adminCC-dashboard/medication-listing/medication-listing.component.ts","./src/app/components/adminCC-dashboard/registration-listing/registration-listing.component.css","./src/app/components/adminCC-dashboard/registration-listing/registration-listing.component.ts","./src/app/components/change-password/change-password.component.css","./src/app/components/change-password/change-password.component.ts","./src/app/components/doctor-home/doctor-calendar/doctor-calendar.component.ts","./src/app/components/doctor-home/doctor-home/doctor-home.component.css","./src/app/components/doctor-home/doctor-home/doctor-home.component.ts","./src/app/components/doctor-home/doctor-my-profile/doctor-my-profile.component.css","./src/app/components/doctor-home/doctor-my-profile/doctor-my-profile.component.ts","./src/app/components/doctor-home/doctor-profile/doctor-profile.component.css","./src/app/components/doctor-home/doctor-profile/doctor-profile.component.ts","./src/app/components/doctor-home/new-appointment-page/new-appointment-page.component.css","./src/app/components/doctor-home/new-appointment-page/new-appointment-page.component.ts","./src/app/components/doctor-home/new-vacation-request/new-vacation-request.component.css","./src/app/components/doctor-home/new-vacation-request/new-vacation-request.component.ts","./src/app/components/doctor-home/patient-listing/patient-listing.component.css","./src/app/components/doctor-home/patient-listing/patient-listing.component.ts","./src/app/components/header/header.component.css","./src/app/components/header/header.component.ts","./src/app/components/helperComponents/dialog/dialog.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.ts","./src/app/components/nurse-home/nurse-calendar/nurse-calendar.component.css","./src/app/components/nurse-home/nurse-calendar/nurse-calendar.component.ts","./src/app/components/nurse-home/nurse-home.component.css","./src/app/components/nurse-home/nurse-home.component.ts","./src/app/components/nurse-home/nurse-patient-listing/nurse-patient-listing.component.css","./src/app/components/nurse-home/nurse-patient-listing/nurse-patient-listing.component.ts","./src/app/components/nurse-home/nurse-profile/nurse-personal-profile/nurse-personal-profile.component.css","./src/app/components/nurse-home/nurse-profile/nurse-personal-profile/nurse-personal-profile.component.ts","./src/app/components/nurse-home/nurse-profile/nurse-profile.component.css","./src/app/components/nurse-home/nurse-profile/nurse-profile.component.ts","./src/app/components/nurse-home/prescription-listing/prescription-listing.component.css","./src/app/components/nurse-home/prescription-listing/prescription-listing.component.ts","./src/app/components/patient-home/patient-clinic-listing/patient-clinic-listing.component.css","./src/app/components/patient-home/patient-clinic-listing/patient-clinic-listing.component.ts","./src/app/components/patient-home/patient-home.component.css","./src/app/components/patient-home/patient-home.component.ts","./src/app/components/patient-home/patient-pending-appointments-listing/patient-pending-appointments-listing.component.css","./src/app/components/patient-home/patient-pending-appointments-listing/patient-pending-appointments-listing.component.ts","./src/app/components/patient-profile/medical-record/medical-record.component.css","./src/app/components/patient-profile/medical-record/medical-record.component.ts","./src/app/components/patient-profile/patient-personal-profile/patient-personal-profile.component.css","./src/app/components/patient-profile/patient-personal-profile/patient-personal-profile.component.ts","./src/app/components/patient-profile/patient-profile.component.css","./src/app/components/patient-profile/patient-profile.component.ts","./src/app/components/registration/must-match.validator.ts","./src/app/components/registration/registration.component.css","./src/app/components/registration/registration.component.ts","./src/app/guards/auth-guard.service.ts","./src/app/guards/change-password-deactivate.service.ts","./src/app/services/appointment.service.ts","./src/app/services/clinic-admin.service.ts","./src/app/services/clinic-center-admin.service.ts","./src/app/services/clinic.service.ts","./src/app/services/clinical-center.service.ts","./src/app/services/dialog.service.ts","./src/app/services/doctor.service.ts","./src/app/services/nurse.service.ts","./src/app/services/patient.service.ts","./src/app/services/user.service.ts","./src/app/services/vacation.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-header></app-header>\\r\\n\\r\\n<div class=\\\"container\\\" style=\\\"padding-top: 4em;\\\">\\r\\n\\t<router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<ng-http-loader spinner=\\\"sk-spinner-pulse\\\"></ng-http-loader>\\r\\n\";","export default \"<div class='row'>\\r\\n    <ul class=\\\"nav nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./profile']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n          aria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" href=\\\"\\\" (click)=\\\"showClinicInfo()\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Clinic info</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./doctors']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Doctors</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./nurse_listing']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Nurses</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./ordinations']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Ordinations</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./available_appointments']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Available appointments</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./types_of_examination']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Types of examination</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-requests\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Appointment requests</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./vacation_requests']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n          aria-selected=\\\"true\\\">Vacation requests</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <div class=\\\"tab-content\\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n  style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h3 class=\\\"display-8\\\">Personal page</h3>\\r\\n    <p class=\\\"lead\\\">Here you can see, or change your personal information.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<form *ngIf='form' [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <fieldset [disabled]=\\\"change\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.name.errors }\\\"\\r\\n          id=\\\"Name\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.name.errors.required\\\">Name is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Surname</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.surname.errors }\\\"\\r\\n          id=\\\"Surname\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.surname.errors.required\\\">Surname is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Email\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">E-mail</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.email.errors }\\\"\\r\\n            id=\\\"Email\\\" formControlName=\\\"email\\\" style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && form.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.email.errors.required\\\">E-mail is required</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Address\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Address</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.address.errors }\\\"\\r\\n          id=\\\"Address\\\" formControlName=\\\"address\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.address.errors.required\\\">Address is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"City\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">City</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.city.errors }\\\"\\r\\n          id=\\\"City\\\" formControlName=\\\"city\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.city.errors.required\\\">City is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"State\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">State</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.state.errors }\\\"\\r\\n          id=\\\"State\\\" formControlName=\\\"state\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.state.errors.required\\\">State is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"PhoneNumber\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Phone number</label>\\r\\n      <div class=\\\"col-sm-10  col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.phoneNumber.errors }\\\" id=\\\"PhoneNumber\\\"\\r\\n          formControlName=\\\"phoneNumber\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"JMBG\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">UPIN</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.upin.errors }\\\"\\r\\n            id=\\\"JMBG\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && form.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n            <div *ngIf=\\\"form.controls.upin.errors.minlength\\\">UPIN is exactly 13 characters long</div>\\r\\n            <div *ngIf=\\\"form.controls.upin.errors.maxlength\\\">UPIN is exactly 13 characters long</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n    <!-- <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Password</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n\\r\\n  <div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf='!change'>Submit changes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='!change'\\r\\n      (click)='cancelChanges()'>Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n<div>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" *ngIf='change' (click)='enableChangeInfo()'>Change\\r\\n    information</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='change' (click)='showChangePasswordForm()'>Change\\r\\n    password</button>\\r\\n</div>\\r\\n\\r\\n<br><br>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Available appointments</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see, add or delete available appointments.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of appointmentHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addNewAppointment()\\\">Add</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let appointment of appointments'>\\r\\n            <td> {{appointment.doctors[0].name + \\\" \\\" + appointment.doctors[0].surname}} </td>\\r\\n            <td> {{appointment.ordination.name}} </td>\\r\\n            <td> {{appointment.ordination.number}} </td>\\r\\n            <td> {{appointment.typeOfExamination.name}} </td>\\r\\n            <td> {{appointment.formatedDateAndTime}} </td>\\r\\n            <td> {{appointment.duration / 1000 / 60}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\r\\n                            (click)=\\\"deleteAppointment(appointment)\\\">Delete</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n  style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h3 class=\\\"display-8\\\">Clinic info</h3>\\r\\n    <p class=\\\"lead\\\">Here you can see, or change clinic information.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<form *ngIf='clinicForm' [formGroup]=\\\"clinicForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <fieldset [disabled]=\\\"formDisabled\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && clinicForm.controls.name.errors }\\\" id=\\\"Name\\\" formControlName=\\\"name\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && clinicForm.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"clinicForm.controls.name.errors.required\\\">Name is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Address\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Address</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && clinicForm.controls.address.errors }\\\" id=\\\"Address\\\"\\r\\n          formControlName=\\\"address\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && clinicForm.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"clinicForm.controls.address.errors.required\\\">Address is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"City\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">City</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && clinicForm.controls.city.errors }\\\" id=\\\"City\\\" formControlName=\\\"city\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && clinicForm.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"clinicForm.controls.city.errors.required\\\">City is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"State\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">State</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && clinicForm.controls.state.errors }\\\" id=\\\"State\\\" formControlName=\\\"state\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && clinicForm.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"clinicForm.controls.state.errors.required\\\">State is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Description\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Description</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && clinicForm.controls.description.errors }\\\" id=\\\"Description\\\"\\r\\n          formControlName=\\\"description\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && clinicForm.controls.description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"clinicForm.controls.description.errors.required\\\">Description is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n\\r\\n  <div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf='!formDisabled'>Submit changes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='!formDisabled'\\r\\n      (click)='cancelChanges()'>Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" *ngIf='formDisabled' (click)='enableChangeInfo()'>Change\\r\\n  information</button>\\r\\n<br><br>\";","export default \"  \\r\\n<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-10\\\"\\r\\nstyle=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n<div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n  <h3 class=\\\"display-8\\\">Add doctor</h3>\\r\\n  <p class=\\\"lead\\\">Here you can add a doctor.</p>\\r\\n</div>\\r\\n</div>\\r\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorShiftStart\\\">Email:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"email\\\" formControlName=\\\"email\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.email.errors }\\\" class=\\\"form-control\\\" id=\\\"doctorEmail\\\"\\r\\n    aria-describedby=\\\"doctorEmail\\\" placeholder=\\\"example@kcv.rs\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">Email is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.email.errors.email\\\">Email must be a valid Email address</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorName\\\">Name:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.name.errors }\\\"\\r\\n    class=\\\"form-control\\\" id=\\\"doctorName\\\" aria-describedby=\\\"doctorName\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.name.errors.required\\\">Name is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorSurname\\\">Surname:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"surname\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.surname.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"doctorSurname\\\" aria-describedby=\\\"doctorSurname\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.surname.errors.required\\\">Surname is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorAddress\\\">Address:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"address\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.address.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"doctorAddress\\\" aria-describedby=\\\"doctorAddress\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.address.errors.required\\\">Address is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorCity\\\">City:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"city\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.city.errors }\\\"\\r\\n    class=\\\"form-control\\\" id=\\\"doctorCity\\\" aria-describedby=\\\"doctorCity\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.city.errors.required\\\">City is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorState\\\">State:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"state\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.state.errors }\\\" class=\\\"form-control\\\" id=\\\"doctorState\\\"\\r\\n    aria-describedby=\\\"doctorState\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.state.errors.required\\\">State is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorPhone\\\">Phone number:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"phoneNumber\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.phoneNumber.errors }\\\" class=\\\"form-control\\\" id=\\\"doctorPhone\\\"\\r\\n    aria-describedby=\\\"doctorPhone\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorShiftStart\\\">Shift start:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"shiftStart\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.shiftStart.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"doctorShiftStart\\\" aria-describedby=\\\"shiftSHelp\\\" placeholder=\\\"ex. 07:00\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.shiftStart.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftStart.errors.required\\\">Shift is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftStart.errors.minlength\\\">Shift is exactly 5 characters long</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftStart.errors.maxlength\\\">Shift is exactly 5 characters long</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorShiftEnd\\\">Shift end:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"shiftEnd\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.shiftEnd.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"doctorShiftEnd\\\" placeholder=\\\"ex. 15:00\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.shiftEnd.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftEnd.errors.required\\\">Shift is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftEnd.errors.minlength\\\">Shift is exactly 5 characters long</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftEnd.errors.maxlength\\\">Shift is exactly 5 characters long</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"doctorUpin\\\">UPIN:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"upin\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.upin.errors }\\\"\\r\\n    class=\\\"form-control\\\" id=\\\"doctorUpin\\\" aria-describedby=\\\"doctorUpin\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.upin.errors.minlength\\\">UPIN is exactly 13 characters long</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.upin.errors.maxlength\\\">UPIN is exactly 13 characters long</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\r\\n</form>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n      <h3 class=\\\"display-8\\\">Doctors</h3>\\r\\n      <p class=\\\"lead\\\">Here you can see a list of clinic doctors.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<p>\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n        Search doctors\\r\\n    </button>\\r\\n</p>\\r\\n<div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n            <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.name.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Surname: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.surname.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-primary \\\">Search</button>\\r\\n            </form>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n  <thead>\\r\\n      <tr>\\r\\n          <th scope=\\\"col\\\" *ngFor='let param of doctorsHeaders'>{{param}}</th>\\r\\n          <th scope=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addNewDoctor()\\\">Add</button>\\r\\n          </th>\\r\\n      </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n      <tr *ngFor='let doctor of doctors'>\\r\\n          <td> {{doctor.name}} </td>\\r\\n          <td> {{doctor.surname}} </td>\\r\\n          <td> {{doctor.phoneNumber}} </td>\\r\\n          <td> {{doctor.shiftStart}} </td>\\r\\n          <td> {{doctor.shiftEnd}} </td>\\r\\n          <td> {{doctor.numberOfStars}} </td>\\r\\n          <td> {{doctor.numberOfReviews}} </td>\\r\\n          <td>\\r\\n              <div class=\\\"dropdown\\\">\\r\\n                  <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                      data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                      Options\\r\\n                  </button>\\r\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                      <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteDoctor(doctor)\\\">Delete</a>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\" style=\\\"margin-top:0.5em; padding-top: 0.5em;\\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">New available Appointment</h3>\\r\\n        <p class=\\\"lead\\\">Insert informations about new available appointment.</p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<form *ngIf='form' [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"dateAndTime\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Date and time</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <div class=\\\"col-lg-10 col-sm-10 col-md-10\\\">\\r\\n                <input type=\\\"datetime\\\" formControlName=\\\"dateAndTime\\\" [owlDateTime]=\\\"dt2\\\" class=\\\"form-control\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.dateAndTime.errors }\\\" id=\\\"dateAndTime\\\"\\r\\n                    style=\\\"border: 0;\\\">\\r\\n                <div *ngIf=\\\"submitted && form.controls.dateAndTime.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"form.controls.dateAndTime.errors.required\\\">Date and time is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <span class=\\\"m-1 float-right col-lg-1 col-sm-2 col-md-2\\\" [owlDateTimeTrigger]=\\\"dt2\\\"> <i\\r\\n                    class=\\\"fa fa-calendar\\\"></i> </span>\\r\\n            <owl-date-time [showSecondsTimer]=\\\"true\\\" #dt2></owl-date-time>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"duration\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Duration</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <select formControlName=\\\"duration\\\" class=\\\"m-1 form-control\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.duration.errors }\\\" id=\\\"duration\\\"\\r\\n                style=\\\"border: 0; width: 100%;\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option value=\\\"10\\\">10 minutes</option>\\r\\n                <option value=\\\"20\\\">20 minutes</option>\\r\\n                <option value=\\\"30\\\">30 minutes</option>\\r\\n                <option value=\\\"40\\\">40 minutes</option>\\r\\n                <option value=\\\"50\\\">50 minutes</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && form.controls.duration.errors\\\" class=\\\"invalid-feedback ml-3\\\">\\r\\n                <div *ngIf=\\\"form.controls.duration.errors.required\\\">Duration is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"typeOfExamination\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Type of\\r\\n            examination</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <select formControlName=\\\"typeOfExamination\\\" class=\\\"m-1 form-control\\\"\\r\\n                (change)=\\\"setPriceFromTypeOfExamination()\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.typeOfExamination.errors }\\\" id=\\\"typeOfExamination\\\"\\r\\n                style=\\\"border: 0; width: 100%;\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let type of typesOfExamination\\\" [value]=\\\"type.id\\\">{{type.name}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && form.controls.typeOfExamination.errors\\\" class=\\\"invalid-feedback ml-3\\\">\\r\\n                <div *ngIf=\\\"form.controls.typeOfExamination.errors.required\\\">Please select type of examination</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\" for=\\\"price\\\">Price: </label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"number\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.price.errors }\\\"\\r\\n                class=\\\"form-control\\\" formControlName=\\\"price\\\" style=\\\"border: 0;\\\" />\\r\\n            <div *ngIf=\\\"submitted && form.controls.price.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"form.controls.price.errors.required\\\">Price is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"doctor\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Doctor</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <select formControlName=\\\"doctor\\\" class=\\\"m-1 form-control\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.doctor.errors }\\\" id=\\\"doctor\\\"\\r\\n                style=\\\"border: 0; width: 100%;\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let doctor of doctors\\\" [value]=\\\"doctor.id\\\">\\r\\n                    {{doctor.name + \\\" \\\" + doctor.surname}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && form.controls.doctor.errors\\\" class=\\\"invalid-feedback ml-3\\\">\\r\\n                <div *ngIf=\\\"form.controls.doctor.errors.required\\\">Please select doctor</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"ordination\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Ordination</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <select formControlName=\\\"ordination\\\" class=\\\"m-1 form-control\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.ordination.errors }\\\" id=\\\"ordination\\\"\\r\\n                style=\\\"border: 0; width: 100%;\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let ordination of ordinations\\\" [value]=\\\"ordination.id\\\">\\r\\n                    {{ordination.name + \\\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Num. \\\" + ordination.number + \\\")\\\"}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && form.controls.ordination.errors\\\" class=\\\"invalid-feedback ml-3\\\">\\r\\n                <div *ngIf=\\\"form.controls.ordination.errors.required\\\">Please select ordination</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n        <hr>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create appointment</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" (click)='cancelChanges()'>Cancel</button>\\r\\n    </div>\\r\\n</form>\\r\\n<br><br>\";","export default \"  \\r\\n<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-10\\\"\\r\\nstyle=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n<div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n  <h3 class=\\\"display-8\\\">Add nurse</h3>\\r\\n  <p class=\\\"lead\\\">Here you can add a nurse.</p>\\r\\n</div>\\r\\n</div>\\r\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseEmail\\\">Email:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"email\\\" formControlName=\\\"email\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.email.errors }\\\" class=\\\"form-control\\\" id=\\\"nurseEmail\\\"\\r\\n    aria-describedby=\\\"nurseEmail\\\" placeholder=\\\"example@kcv.rs\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">Email is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.email.errors.email\\\">Email must be a valid Email address</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseName\\\">Name:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.name.errors }\\\"\\r\\n    class=\\\"form-control\\\" id=\\\"nurseName\\\" aria-describedby=\\\"nurseEmail\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.name.errors.required\\\">Name is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseSurname\\\">Surname:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"surname\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.surname.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"nurseSurname\\\" aria-describedby=\\\"doctorSurname\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.surname.errors.required\\\">Surname is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseAddress\\\">Address:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"address\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.address.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"nurseAddress\\\" aria-describedby=\\\"doctorAddress\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.address.errors.required\\\">Address is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseCity\\\">City:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"city\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.city.errors }\\\"\\r\\n    class=\\\"form-control\\\" id=\\\"nurseCity\\\" aria-describedby=\\\"nurseCity\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.city.errors.required\\\">City is required</div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseState\\\">State:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"state\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.state.errors }\\\" class=\\\"form-control\\\" id=\\\"nurseState\\\"\\r\\n    aria-describedby=\\\"nurseState\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.state.errors.required\\\">State is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nursePhone\\\">Phone number:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"phoneNumber\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.phoneNumber.errors }\\\" class=\\\"form-control\\\" id=\\\"nursePhone\\\"\\r\\n    aria-describedby=\\\"nursePhone\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseShiftStart\\\">Shift start:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"shiftStart\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.shiftStart.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"nurseShiftStart\\\" aria-describedby=\\\"shiftSHelp\\\" placeholder=\\\"ex. 07:00\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.shiftStart.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftStart.errors.required\\\">Shift is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftStart.errors.minlength\\\">Shift is exactly 5 characters long</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftStart.errors.maxlength\\\">Shift is exactly 5 characters long</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseShiftEnd\\\">Shift end:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"shiftEnd\\\"\\r\\n    [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.shiftEnd.errors }\\\" class=\\\"form-control\\\"\\r\\n    id=\\\"nurseShiftEnd\\\" placeholder=\\\"ex. 15:00\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.shiftEnd.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftEnd.errors.required\\\">Shift is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftEnd.errors.minlength\\\">Shift is exactly 5 characters long</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.shiftEnd.errors.maxlength\\\">Shift is exactly 5 characters long</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"nurseUpin\\\">UPIN:</label>\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n  <input type=\\\"text\\\" formControlName=\\\"upin\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.upin.errors }\\\"\\r\\n    class=\\\"form-control\\\" id=\\\"nurseUpin\\\" aria-describedby=\\\"nurseUpin\\\" style=\\\"border: 0;\\\" />\\r\\n  <div *ngIf=\\\"submitted && loginForm.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n    <div *ngIf=\\\"loginForm.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.upin.errors.minlength\\\">UPIN is exactly 13 characters long</div>\\r\\n    <div *ngIf=\\\"loginForm.controls.upin.errors.maxlength\\\">UPIN is exactly 13 characters long</div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\r\\n</form>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n      <h3 class=\\\"display-8\\\">Nurses</h3>\\r\\n      <p class=\\\"lead\\\">Here you can see a list of clinic nurses.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<p>\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n        Search nurses\\r\\n    </button>\\r\\n</p>\\r\\n<div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n            <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.name.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Surname: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.surname.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-primary \\\">Search</button>\\r\\n            </form>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n  <thead>\\r\\n      <tr>\\r\\n          <th scope=\\\"col\\\" *ngFor='let param of nurseHeaders'>{{param}}</th>\\r\\n          <th scope=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addNewNurse()\\\">Add</button>\\r\\n          </th>\\r\\n      </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n      <tr *ngFor='let nurse of nurses'>\\r\\n          <td> {{nurse.name}} </td>\\r\\n          <td> {{nurse.surname}} </td>\\r\\n          <td> {{nurse.phoneNumber}} </td>\\r\\n          <td> {{nurse.shiftStart}} </td>\\r\\n          <td> {{nurse.shiftEnd}} </td>\\r\\n          <td>\\r\\n              <div class=\\\"dropdown\\\">\\r\\n                  <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                      data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                      Options\\r\\n                  </button>\\r\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                      <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteNurse(nurse)\\\">Delete</a>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-10\\\"\\r\\n    style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">{{change}} an ordination</h3>\\r\\n        <p class=\\\"lead\\\">Here you can {{change.toLowerCase()}} an ordination.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"m-5 mx-auto\\\">\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n            <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.name.errors }\\\"\\r\\n                    class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                <div *ngIf=\\\"submitted && form.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"form.controls.name.errors.required\\\">Name is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Number: </label>\\r\\n            <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                <input type=\\\"number\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.number.errors }\\\"\\r\\n                    class=\\\"form-control\\\" formControlName=\\\"number\\\" style=\\\"border: 0;\\\" />\\r\\n                <div *ngIf=\\\"submitted && form.controls.number.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"form.controls.number.errors.required\\\">Number is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n    </form>\\r\\n</div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Ordinations</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of clinic ordinations.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<p>\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n        Search ordinations\\r\\n    </button>\\r\\n</p>\\r\\n<div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n            <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.name.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Number: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"number\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.number.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"number\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-primary \\\">Search</button>\\r\\n            </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of ordinationsHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addNewOrdination()\\\">Add</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let ordination of ordinations'>\\r\\n            <td> {{ordination.name}} </td>\\r\\n            <td> {{ordination.number}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\r\\n                            (click)=\\\"changeOrdination(ordination)\\\">Change</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\r\\n                            (click)=\\\"deleteOrdination(ordination)\\\">Delete</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-10\\\"\\r\\nstyle=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n<div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n  <h3 class=\\\"display-8\\\">{{change}} a type of examination</h3>\\r\\n  <p class=\\\"lead\\\">Here you can {{change.toLowerCase()}} a type of examination.</p>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"m-5 mx-auto\\\">\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.name.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.name.errors.required\\\">Name is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Price: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"number\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.price.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"price\\\" style=\\\"border: 0;\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.price.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.price.errors.required\\\">Price is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n        </form>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Types of examination</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of types of examination in this clinic.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<p>\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n        Search types of examination\\r\\n    </button>\\r\\n</p>\\r\\n<div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n            <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.name.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Min price: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.minPrice.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"minPrice\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Max price: </label>\\r\\n                    <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.maxPrice.errors }\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"maxPrice\\\" style=\\\"border: 0;\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-primary \\\">Search</button>\\r\\n            </form>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of typeOfExaminationHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addNewTypeOfExamination()\\\">Add</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let typeOfExamination of typesOfExamination'>\\r\\n            <td> {{typeOfExamination.name}} </td>\\r\\n            <td> {{typeOfExamination.price}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\r\\n                            (click)=\\\"changeTypeOfExamination(typeOfExamination)\\\">Change</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\r\\n                            (click)=\\\"deleteTypeOfExamination(typeOfExamination)\\\">Delete</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Vacation requests</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of pending vacation requests. You can approve or reject them.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of requestsHeaders'>{{param}}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let request of requests'>\\r\\n            <td> {{request.roles[0]}} </td>\\r\\n            <td> {{request.staffName}} </td>\\r\\n            <td> {{request.staffSurname}} </td>\\r\\n            <td> {{request.startDate}} </td>\\r\\n            <td> {{request.endDate}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"approveRequest(request)\\\" >Approve</a> <!-- [routerLink]=\\\"['./clinicAdmins']\\\" -->\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"rejectRequest(request)\\\">Delete</a>  \\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div *ngIf=\\\"requests==undefined || requests.length==0\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n    Currently there are no new vacation requests!\\r\\n  </div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n  style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h3 class=\\\"display-8\\\">Personal page</h3>\\r\\n    <p class=\\\"lead\\\">Here you can see, or change your personal information.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<form *ngIf='loginForm' [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <fieldset [disabled]=\\\"change\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.name.errors }\\\" id=\\\"Name\\\" formControlName=\\\"name\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.name.errors.required\\\">Name is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Surname</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.surname.errors }\\\" id=\\\"Surname\\\"\\r\\n          formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.surname.errors.required\\\">Surname is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Email\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">E-mail</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\"\\r\\n            [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.email.errors }\\\" id=\\\"Email\\\"\\r\\n            formControlName=\\\"email\\\" style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">E-mail is required</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Address\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Address</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.address.errors }\\\" id=\\\"Address\\\"\\r\\n          formControlName=\\\"address\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.address.errors.required\\\">Address is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"City\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">City</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.city.errors }\\\" id=\\\"City\\\" formControlName=\\\"city\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.city.errors.required\\\">City is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"State\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">State</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.state.errors }\\\" id=\\\"State\\\" formControlName=\\\"state\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.state.errors.required\\\">State is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"PhoneNumber\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Phone number</label>\\r\\n      <div class=\\\"col-sm-10  col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.phoneNumber.errors }\\\" id=\\\"PhoneNumber\\\"\\r\\n          formControlName=\\\"phoneNumber\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"JMBG\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">UPIN</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n            [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.upin.errors }\\\" id=\\\"JMBG\\\" formControlName=\\\"upin\\\"\\r\\n            style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && loginForm.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"loginForm.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n            <div *ngIf=\\\"loginForm.controls.upin.errors.minlength\\\">UPIN is exactly 13 characters long</div>\\r\\n            <div *ngIf=\\\"loginForm.controls.upin.errors.maxlength\\\">UPIN is exactly 13 characters long</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <!-- <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Password</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n\\r\\n  <div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf='!change'>Submit changes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='!change'\\r\\n      (click)='cancelChanges()'>Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n<div>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" *ngIf='change' (click)='enableChangeInfo()'>Change\\r\\n    information</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='change' (click)='showChangePasswordForm()'>Change\\r\\n    password</button>\\r\\n</div>\\r\\n<br><br>\";","export default \"<div class='row'>\\r\\n\\t<ul class=\\\"nav nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./profile']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Profile</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./medications']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n\\t\\t\\t\\taria-selected=\\\"true\\\">Medication Dictionary</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./diagnoses']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n\\t\\t\\t\\taria-selected=\\\"true\\\">Diagnoses Dictionary</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<!-- (click)=\\\"loadClinics()\\\" href=\\\"#v-pills-clinics\\\" -->\\r\\n\\t\\t<!-- <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\"data-toggle=\\\"pill\\\" [routerLink]=\\\"['./clinicAdmins']\\\"\\r\\n            [queryParams]=\\\"{params:clinicAdminHeaders | json ,title:'Clinic administrator',jumboText:'clinic administraor'}\\\"  role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Clinic administrators</a>\\r\\n          </li> -->\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./registrationRequests']\\\" href=\\\"#v-pills-requests\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n\\t\\t\\t\\taria-selected=\\\"true\\\">Registration requests</a>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n\\r\\n\\t<div class=\\\"tab-content\\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t\\t<!-- <div class=\\\"tab-pane fade show active \\\" id=\\\"v-pills-profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-home-tab\\\">\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane fade show \\\" id=\\\"v-pills-clinics\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-home-tab\\\">\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane fade show\\\" id=\\\"v-pills-cadmins\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-messages-tab\\\">\\r\\n         <app-show-listing \\r\\n         [params]='clinicAdminHeaders' \\r\\n         [title]=\\\"'Clinic administrators'\\\"\\r\\n         [jumboText]=\\\"'clinic administrators'\\\">\\r\\n         </app-show-listing> \\r\\n      </div>\\r\\n      <div class=\\\"tab-pane fade show\\\" id=\\\"v-pills-requests\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-settings-tab\\\"></div> -->\\r\\n\\t</div>\\r\\n\\r\\n</div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-12 col-sm-12\\\"\\r\\n  style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h3 class=\\\"display-8\\\">Adding clinic administrator</h3>\\r\\n    <p class=\\\"lead\\\">Here you can add a new clinic administrator.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<form *ngIf='form' [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.name.errors }\\\" \\r\\n        id=\\\"Name\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.name.errors.required\\\">Code is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Surname</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.surname.errors }\\\" \\r\\n        id=\\\"Surname\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.surname.errors.required\\\">Code is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Email\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">E-mail</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.email.errors }\\\" \\r\\n        id=\\\"Email\\\" formControlName=\\\"email\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.email.errors.required\\\">Code is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Address\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Address</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.address.errors }\\\" \\r\\n        id=\\\"Address\\\" formControlName=\\\"address\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.address.errors.required\\\">Code is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"City\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">City</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.city.errors }\\\" \\r\\n        id=\\\"City\\\" formControlName=\\\"city\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.city.errors.required\\\">Code is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"State\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">State</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.state.errors }\\\"\\r\\n         id=\\\"State\\\" formControlName=\\\"state\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.state.errors.required\\\">Code is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"PhoneNumber\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Phone number</label>\\r\\n      <div class=\\\"col-sm-10  col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.phoneNumber.errors }\\\" \\r\\n        id=\\\"PhoneNumber\\\" formControlName=\\\"phoneNumber\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.phoneNumber.errors.required\\\">Code is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"JMBG\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">JMBG</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.upin.errors }\\\" \\r\\n        id=\\\"JMBG\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.upin.errors.required\\\">Code is required</div>\\r\\n          <div *ngIf=\\\"form.controls.upin.errors.minlength\\\">Code is exactly 13 characters long</div>\\r\\n          <div *ngIf=\\\"form.controls.upin.errors.maxlength\\\">Code is exactly 13 characters long</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Password</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add administrator to clinic: {{clinicName}}</button>\\r\\n\\r\\n</form>\\r\\n<br><br>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Clinic \\\"{{clinicName}}\\\" administrators</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of existing administrators, change them, or add a new one.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of clinicAdminHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)='addAdministrator()'>Add</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let admin of admins'>\\r\\n            <td> {{admin.name}} </td>\\r\\n            <td> {{admin.surname}} </td>\\r\\n            <td> {{admin.email}} </td>\\r\\n            <td> {{admin.address}} </td>\\r\\n            <td> {{admin.city}} </td>\\r\\n            <td> {{admin.state}} </td>\\r\\n            <td> {{admin.phoneNumber}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)='deleteAdmin(admin)'>Delete</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-12 col-sm-12\\\"\\r\\n    style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Adding clinic</h3>\\r\\n        <p class=\\\"lead\\\">Here you can add a new clinic.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<form>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"inputClinicName\\\">Name</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=name placeholder=\\\"Clinic Name\\\"\\r\\n                style=\\\"border: 0;\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"inputClinicAddress\\\">Address</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"inputClinicAddress\\\" [(ngModel)]=\\\"address\\\"\\r\\n                placeholder=\\\"Clinic address\\\" style=\\\"border: 0;\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"inputClinicCity\\\">City</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"inputClinicCity\\\" [(ngModel)]=\\\"city\\\" placeholder=\\\"Clinic city\\\"\\r\\n                style=\\\"border: 0;\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"inputClinicState\\\">State</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"inputClinicState\\\" [(ngModel)]=\\\"state\\\"\\r\\n                placeholder=\\\"Clinic state/country\\\" style=\\\"border: 0;\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"inputClinicDescription\\\">Description</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <textarea class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"description\\\" rows=\\\"3\\\"\\r\\n                placeholder=\\\"Clinic description\\\" style=\\\"border: 0;\\\"></textarea>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n</form>\";","export default \"<div *ngIf= \\\"router.url=='/adminCC'\\\">\\r\\n<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Clinics</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of existing clinics, change them, or add a new one.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of clinicHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"showNewClinicForm()\\\">Add</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let clinic of clinics'>\\r\\n            <td> {{clinic.name}} </td>\\r\\n            <td> {{clinic.address}} </td>\\r\\n            <td> {{clinic.city}} </td>\\r\\n            <td> {{clinic.state}} </td>\\r\\n            <td> {{clinic.description}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"showClinicAdmins(clinic)\\\" >Show administrators</a> <!-- [routerLink]=\\\"['./clinicAdmins']\\\" -->\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteClinic(clinic)\\\">Delete</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"showClinicInfo(clinic)\\\">Show info</a>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-10\\\"\\r\\nstyle=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n<div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n  <h3 class=\\\"display-8\\\">{{change}} a diagnosis</h3>\\r\\n  <p class=\\\"lead\\\">Here you can {{change.toLowerCase()}} a diagnosis.</p>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"m-5 mx-auto\\\">\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Code: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.code.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"code\\\" style=\\\"border: 0;\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.code.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.code.errors.required\\\">Code is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Description: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.description.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"description\\\" style=\\\"border: 0;\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.description.errors.required\\\">Description is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n        </form>\\r\\n</div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Diagnoses</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of existing diagnoses, change them, or add a new one.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of diagnosisHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"openDiagnosisForm(null)\\\">Add</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let diagnosis of diagnoses'>\\r\\n            <td> {{diagnosis.code}} </td>\\r\\n            <td> {{diagnosis.description}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"openDiagnosisForm(diagnosis)\\\">Change</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteDiagnosis(diagnosis)\\\">Delete</a>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-10\\\"\\r\\nstyle=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n<div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n  <h3 class=\\\"display-8\\\">{{change}} a medication</h3>\\r\\n  <p class=\\\"lead\\\">Here you can {{change.toLowerCase()}} a medication.</p>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"m-5 mx-auto\\\">\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Code: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.code.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"code\\\" style=\\\"border: 0;\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.code.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.code.errors.required\\\">Code is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.name.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.name.errors.required\\\">Name is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n        </form>\\r\\n</div>\\r\\n\\r\\n\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Medications</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of existing medications, change them, or add a new one.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of medicationHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"openMedicationForm(null)\\\">Add</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let medication of medications'>\\r\\n            <td> {{medication.code}} </td>\\r\\n            <td> {{medication.name}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"openMedicationForm(medication)\\\">Change</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteMedication(medication)\\\">Delete</a>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n      <h3 class=\\\"display-8\\\">Registration requests</h3>\\r\\n      <p class=\\\"lead\\\">Here you can see a list of pending registration requests. You can approve or cancel them.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n  <thead>\\r\\n      <tr>\\r\\n          <th scope=\\\"col\\\" *ngFor='let param of requestsHeaders'>{{param}}</th>\\r\\n      </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n      <tr *ngFor='let request of requests'>\\r\\n          <td> {{request.name}} </td>\\r\\n          <td> {{request.surname}} </td>\\r\\n          <td> {{request.city}} </td>\\r\\n          <td> {{request.state}} </td>\\r\\n          <td> {{request.phoneNumber}} </td>\\r\\n          <td>\\r\\n              <div class=\\\"dropdown\\\">\\r\\n                  <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                      data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                      Options\\r\\n                  </button>\\r\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                      <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"approveRequest(request)\\\" >Approve</a> <!-- [routerLink]=\\\"['./clinicAdmins']\\\" -->\\r\\n                      <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteRequest(request)\\\">Delete</a>\\r\\n                      <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"showRequestInfo(request)\\\">Show info</a>\\r\\n\\r\\n                  </div>\\r\\n              </div>\\r\\n          </td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<div *ngIf=\\\"requests==undefined || requests.length==0\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n  Currently there are no new registration requests!\\r\\n</div>\";","export default \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <h4 class=\\\"card-header\\\">Change Password</h4>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"oldPassword\\\">Old password</label>\\r\\n                    <input type=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.oldPassword.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"oldPassword\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.oldPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.oldPassword.errors.required\\\">Old password is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"newPassword\\\">New password</label>\\r\\n                    <input type=\\\"password\\\" \\r\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.newPassword.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"newPassword\\\" />\\r\\n                    <div *ngIf=\\\"submitted && form.controls.newPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.newPassword.errors.required\\\">New password is required</div>\\r\\n                        <div *ngIf=\\\"form.controls.newPassword.errors.minlength\\\">Password is at least 6 characters\\r\\n                            long</div>\\r\\n                        <div *ngIf=\\\"form.controls.newPassword.errors.maxlength\\\">Password is maximum 24 characters\\r\\n                            long</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"row text-center border-top \\\" style=\\\"padding-top: 0.3em;\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"btn-group float-left p-1\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        mwlCalendarPreviousView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\"\\r\\n      >\\r\\n        Previous\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-secondary\\\"\\r\\n        mwlCalendarToday\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n      >\\r\\n        Today\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        mwlCalendarNextView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\"\\r\\n      >\\r\\n        Next\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 shadow-sm\\\">\\r\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"btn-group float-right p-1\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        (click)=\\\"setView(CalendarView.Month)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Month\\\"\\r\\n      >\\r\\n        Month\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        (click)=\\\"setView(CalendarView.Week)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Week\\\"\\r\\n      >\\r\\n        Week\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        (click)=\\\"setView(CalendarView.Day)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Day\\\"\\r\\n      >\\r\\n        Day\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br />\\r\\n<div class=\\\"border rounded shadow pl-5 pr-5 pb-5\\\" [ngSwitch]=\\\"view\\\">\\r\\n  <mwl-calendar-month-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n  >\\r\\n  </mwl-calendar-month-view>\\r\\n  <mwl-calendar-week-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n    [dayStartHour]=\\\"daystart\\\"\\r\\n    [dayEndHour]=\\\"dayend\\\"\\r\\n  >\\r\\n  </mwl-calendar-week-view>\\r\\n  <mwl-calendar-day-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n    [dayStartHour]=\\\"daystart\\\"\\r\\n    [dayEndHour]=\\\"dayend\\\"\\r\\n    [hourSegments]=\\\"6\\\"\\r\\n  >\\r\\n  </mwl-calendar-day-view>\\r\\n</div>\\r\\n\\r\\n<!-- Everything you see below is just for the demo, you don't need to include it in your app -->\\r\\n\\r\\n<br /><br /><br />\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #modalContent let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{modalData?.appointment.typeOfExamination.name}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body \\\">\\r\\n\\r\\n      <div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n      style=\\\"max-height: 2em; margin-top:0.2em; padding-top: 0.3em; \\\">\\r\\n      <div class=\\\"container-fluid\\\" style=\\\"max-height: 1em;\\\">\\r\\n        <h3 class=\\\"h5\\\">{{modalData?.appointment.typeOfExamination.name}}</h3>\\r\\n        <h6 class=\\\"h6\\\" *ngIf=\\\"!modalData?.appointment.patient\\\" > *Available appointment </h6>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n        <div *ngIf=\\\"modalData?.appointment.patient\\\" class=\\\"form-group row \\\">\\r\\n          <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Patient Name</label>\\r\\n          <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{modalData?.appointment.patient.name}}\\\" style=\\\"border: 0;\\\" disabled/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"modalData?.appointment.patient\\\" class=\\\"form-group row\\\">\\r\\n          <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Patient surname</label>\\r\\n          <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{modalData?.appointment.patient.surname}}\\\" style=\\\"border: 0;\\\" disabled/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Starting time</label>\\r\\n            <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{timeConverter(modalData?.appointment.startingDateAndTime)}}\\\" style=\\\"border: 0;\\\" disabled/>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Ending time</label>\\r\\n            <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{timeConverter(modalData?.appointment.endingDateAndTime)}}\\\" style=\\\"border: 0;\\\" disabled/>\\r\\n            </div>\\r\\n        </div>\\r\\n    <div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"startExamination()\\\">\\r\\n      Start examination\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"<div class='row'>\\r\\n\\t<ul class=\\\"nav nav-pills container\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./calendar']\\\" href=\\\"#v-pills-calendar\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Calendar</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./patients']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n\\t\\t\\t\\taria-selected=\\\"true\\\">Patients</a>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n\\r\\n\\t<div class=\\\"tab-content \\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t</div>\\r\\n\\r\\n</div>\";","export default \"<div class='row'>\\r\\n\\t<ul class=\\\"nav nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./profile']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Personal profile</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./vacation_request']\\\" href=\\\"#v-pills-vacation_request\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Vacation request</a>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n\\r\\n\\t<div class=\\\"tab-content\\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t</div>\\r\\n\\r\\n</div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n  style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h3 class=\\\"display-8\\\">Personal page</h3>\\r\\n    <p class=\\\"lead\\\">Here you can see, or change your personal information.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<form *ngIf='loginForm' [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <fieldset [disabled]=\\\"change\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.name.errors }\\\" id=\\\"Name\\\" formControlName=\\\"name\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.name.errors.required\\\">Name is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Surname</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.surname.errors }\\\" id=\\\"Surname\\\"\\r\\n          formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.surname.errors.required\\\">Surname is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Email\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">E-mail</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\"\\r\\n            [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.email.errors }\\\" id=\\\"Email\\\"\\r\\n            formControlName=\\\"email\\\" style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">E-mail is required</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Address\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Address</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.address.errors }\\\" id=\\\"Address\\\"\\r\\n          formControlName=\\\"address\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.address.errors.required\\\">Address is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"City\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">City</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.city.errors }\\\" id=\\\"City\\\" formControlName=\\\"city\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.city.errors.required\\\">City is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"State\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">State</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.state.errors }\\\" id=\\\"State\\\" formControlName=\\\"state\\\"\\r\\n          style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.state.errors.required\\\">State is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"PhoneNumber\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Phone number</label>\\r\\n      <div class=\\\"col-sm-10  col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.phoneNumber.errors }\\\" id=\\\"PhoneNumber\\\"\\r\\n          formControlName=\\\"phoneNumber\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"JMBG\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">UPIN</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n            [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.upin.errors }\\\" id=\\\"JMBG\\\" formControlName=\\\"upin\\\"\\r\\n            style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && loginForm.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"loginForm.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n            <div *ngIf=\\\"loginForm.controls.upin.errors.minlength\\\">UPIN is exactly 13 characters long</div>\\r\\n            <div *ngIf=\\\"loginForm.controls.upin.errors.maxlength\\\">UPIN is exactly 13 characters long</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <!-- <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Password</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n\\r\\n  <div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf='!change'>Submit changes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='!change'\\r\\n      (click)='cancelChanges()'>Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n<div>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" *ngIf='change' (click)='enableChangeInfo()'>Change\\r\\n    information</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='change' (click)='showChangePasswordForm()'>Change\\r\\n    password</button>\\r\\n</div>\\r\\n<br><br>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\" style=\\\"margin-top:0.5em; padding-top: 0.5em;\\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">New Appointment</h3>\\r\\n        <p class=\\\"lead\\\">Insert informations about new appointment.</p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<form *ngIf='form' [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <fieldset [disabled]=\\\"startAppointmentNow\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"dateAndTime\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Date and time</label>\\r\\n            <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n                <div class=\\\"col-lg-10 col-sm-10 col-md-10\\\">\\r\\n                    <input type=\\\"datetime\\\" formControlName=\\\"dateAndTime\\\" [owlDateTime]=\\\"dt2\\\" class=\\\"form-control\\\"\\r\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.dateAndTime.errors }\\\" id=\\\"dateAndTime\\\"\\r\\n                        style=\\\"border: 0;\\\">\\r\\n                    <div *ngIf=\\\"submitted && form.controls.dateAndTime.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"form.controls.dateAndTime.errors.required\\\">Date and time is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <span *ngIf=\\\"!startAppointmentNow\\\" class=\\\"m-1 float-right col-lg-1 col-sm-2 col-md-2\\\" [owlDateTimeTrigger]=\\\"dt2\\\"> <i\\r\\n                        class=\\\"fa fa-calendar\\\"></i> </span>\\r\\n                <owl-date-time [showSecondsTimer]=\\\"true\\\" #dt2></owl-date-time>\\r\\n            </div>\\r\\n        </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"duration\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Duration</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <select formControlName=\\\"duration\\\" class=\\\"m-1 form-control\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.duration.errors }\\\" id=\\\"duration\\\"\\r\\n                style=\\\"border: 0; width: 100%;\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option value=\\\"10\\\">10 minutes</option>\\r\\n                <option value=\\\"20\\\">20 minutes</option>\\r\\n                <option value=\\\"30\\\">30 minutes</option>\\r\\n                <option value=\\\"40\\\">40 minutes</option>\\r\\n                <option value=\\\"50\\\">50 minutes</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && form.controls.duration.errors\\\" class=\\\"invalid-feedback ml-3\\\">\\r\\n                <div *ngIf=\\\"form.controls.duration.errors.required\\\">Duration is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"typeOfExamination\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Type of\\r\\n            examination</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <select formControlName=\\\"typeOfExamination\\\" class=\\\"m-1 form-control\\\"\\r\\n                (change)=\\\"setPriceFromTypeOfExamination()\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.typeOfExamination.errors }\\\" id=\\\"typeOfExamination\\\"\\r\\n                style=\\\"border: 0; width: 100%;\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let type of typesOfExamination\\\" [value]=\\\"type.id\\\">{{type.name}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && form.controls.typeOfExamination.errors\\\" class=\\\"invalid-feedback ml-3\\\">\\r\\n                <div *ngIf=\\\"form.controls.typeOfExamination.errors.required\\\">Please select type of examination</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\" for=\\\"price\\\">Price: </label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n            <input type=\\\"number\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.price.errors }\\\"\\r\\n                class=\\\"form-control\\\" formControlName=\\\"price\\\" style=\\\"border: 0;\\\" />\\r\\n            <div *ngIf=\\\"submitted && form.controls.price.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"form.controls.price.errors.required\\\">Price is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"ordination\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Ordination</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <select formControlName=\\\"ordination\\\" class=\\\"m-1 form-control\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.ordination.errors }\\\" id=\\\"ordination\\\"\\r\\n                style=\\\"border: 0; width: 100%;\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let ordination of ordinations\\\" [value]=\\\"ordination.id\\\">\\r\\n                    {{ordination.name + \\\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Num. \\\" + ordination.number + \\\")\\\"}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"submitted && form.controls.ordination.errors\\\" class=\\\"invalid-feedback ml-3\\\">\\r\\n                <div *ngIf=\\\"form.controls.ordination.errors.required\\\">Please select ordination</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"accordion col-lg-7 col-sm-7 mb-5 p-0\\\" id=\\\"accordionExample\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\" id=\\\"headingOne\\\">\\r\\n                <h2 class=\\\"mb-0\\\">\\r\\n                    <button class=\\\"btn btn-link\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseOne\\\"\\r\\n                        aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">\\r\\n                        Patient informations\\r\\n                    </button>\\r\\n                </h2>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"collapseOne\\\" class=\\\"collapse border\\\" aria-labelledby=\\\"headingOne\\\"\\r\\n                data-parent=\\\"#accordionExample\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-lg-3\\\"> <b>Name:</b> </label>\\r\\n                        <label class=\\\"col-lg-9\\\"> {{patient.name}} </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-lg-3\\\"><b>Surname: </b> </label>\\r\\n                        <label class=\\\"col-lg-9\\\"> {{patient.surname}} </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-lg-3\\\"><b>Upin: </b> </label>\\r\\n                        <label class=\\\"col-lg-9\\\"> {{patient.upin}} </label>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n        <hr>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <button type=\\\"submit\\\" *ngIf=\\\"!startAppointmentNow\\\" class=\\\"btn btn-primary\\\">Create appointment</button>\\r\\n        <button type=\\\"submit\\\" *ngIf=\\\"startAppointmentNow\\\" class=\\\"btn btn-primary\\\">Start appointment</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" (click)='cancelChanges()'>Cancel</button>\\r\\n    </div>\\r\\n</form>\\r\\n<br><br>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\" style=\\\"margin-top:0.5em; padding-top: 0.5em;\\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n      <h3 class=\\\"display-8\\\">Vaction Request</h3>\\r\\n      <p class=\\\"lead\\\">Please fill in the required fields.</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<form *ngIf='form' [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"startingDateAndTime\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Starting date and time</label>\\r\\n          <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n              <div class=\\\"col-lg-10 col-sm-10 col-md-10\\\">\\r\\n                  <input type=\\\"datetime\\\" formControlName=\\\"startingDateAndTime\\\" [owlDateTime]=\\\"dt2\\\" class=\\\"form-control\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.startingDateAndTime.errors }\\\" id=\\\"startingDateAndTime\\\"\\r\\n                      style=\\\"border: 0;\\\">\\r\\n                  <div *ngIf=\\\"submitted && form.controls.startingDateAndTime.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"form.controls.startingDateAndTime.errors.required\\\">Starting date and time is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <span class=\\\"m-1 float-right col-lg-1 col-sm-2 col-md-2\\\" [owlDateTimeTrigger]=\\\"dt2\\\"> <i\\r\\n                      class=\\\"fa fa-calendar\\\"></i> </span>\\r\\n              <owl-date-time [showSecondsTimer]=\\\"true\\\" #dt2></owl-date-time>\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"endingDateAndTime\\\" class=\\\"col-sm-2 col-lg-3 col-form-label font-weight-bold\\\">Ending date and time</label>\\r\\n        <div class=\\\"row col-lg-4 col-sm-8 col-md-6 shadow-sm p-1 mb-1 bg-white rounded col\\\">\\r\\n            <div class=\\\"col-lg-10 col-sm-10 col-md-10\\\">\\r\\n                <input type=\\\"datetime\\\" formControlName=\\\"endingDateAndTime\\\" [owlDateTime]=\\\"dt22\\\" class=\\\"form-control\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.endingDateAndTime.errors }\\\" id=\\\"endingDateAndTime\\\"\\r\\n                    style=\\\"border: 0;\\\">\\r\\n                <div *ngIf=\\\"submitted && form.controls.endingDateAndTime.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"form.controls.endingDateAndTime.errors.required\\\">Ending date and time is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <span class=\\\"m-1 float-right col-lg-1 col-sm-2 col-md-2\\\" [owlDateTimeTrigger]=\\\"dt22\\\"> <i\\r\\n                    class=\\\"fa fa-calendar\\\"></i> </span>\\r\\n            <owl-date-time [showSecondsTimer]=\\\"true\\\" #dt22></owl-date-time>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Send request</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" (click)='cancelChanges()'>Cancel</button>\\r\\n  </div>\\r\\n</form>\\r\\n<br><br>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Patients</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of patients.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<p>\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#searchForm\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"searchForm\\\">\\r\\n        Search patients\\r\\n    </button>\\r\\n    &nbsp;&nbsp;&nbsp;\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#filterForm\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"filterForm\\\">\\r\\n        Filter patients\\r\\n    </button>\\r\\n</p>\\r\\n<div class=\\\"collapse\\\" id=\\\"searchForm\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n        <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\" >\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Surname: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Upin: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary \\\">Search</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"collapse\\\" id=\\\"filterForm\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n        <form [formGroup]=\\\"filterForm\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Surname: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Upin: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of patientsHeaders'>\\r\\n                {{param}}\\r\\n            </th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let patient of filteredPatients'>\\r\\n            <td> {{patient.name}} </td>\\r\\n            <td> {{patient.surname}} </td>\\r\\n            <td> {{patient.upin}} </td>\\r\\n            <td> {{patient.email}} </td>\\r\\n            <td> {{patient.city}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"startAppointment(patient.id)\\\">Start\\r\\n                            appointment</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"ShowMedicalRecord(patient)\\\">Show\\r\\n                            medical record</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<ng-template #modalContent let-close=\\\"close\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Medical record</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body \\\">\\r\\n        <app-medical-record [patientID]=\\\"modalData?.patientID\\\" [patientName]=\\\"modalData?.patientName\\\">\\r\\n        </app-medical-record>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">\\r\\n            Cancel\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-template>\";","export default \"<header>\\r\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <ng-container *ngIf=\\\"!userService.checkLoggedIn();else second\\\">\\r\\n                <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Clinical System</a>\\r\\n            </ng-container>\\r\\n            <ng-template #second>\\r\\n                <ng-container *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('PATIENT')!= -1; else third\\\"> \\r\\n                    <a class=\\\"navbar-brand\\\" routerLink=\\\"/patient\\\">Clinical System</a> </ng-container>\\r\\n            </ng-template>\\r\\n            <ng-template #third>\\r\\n                <ng-container *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('DOCTOR')!= -1; else fourth\\\">\\r\\n                     <a class=\\\"navbar-brand\\\" routerLink=\\\"/doctor\\\">Clinical System</a> </ng-container>\\r\\n            </ng-template>\\r\\n            <ng-template #fourth>\\r\\n                <ng-container *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('NURSE')!= -1; else fifth\\\"> \\r\\n                    <a class=\\\"navbar-brand\\\" routerLink=\\\"/nurse\\\">Clinical System</a> </ng-container>\\r\\n            </ng-template>\\r\\n            <ng-template #fifth>\\r\\n                <ng-container *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('ADMINCC')!= -1; else sixth\\\"> \\r\\n                    <a class=\\\"navbar-brand\\\" routerLink=\\\"/adminCC\\\">Clinical System</a> </ng-container>\\r\\n            </ng-template>\\r\\n            <ng-template #sixth>\\r\\n                <ng-container> <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Clinical System</a> </ng-container>\\r\\n            </ng-template>\\r\\n\\r\\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\"\\r\\n                aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\r\\n                <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"userService.checkLoggedIn()\\\">\\r\\n                        <ng-container *ngIf=\\\"!userService.checkLoggedIn();else second\\\">\\r\\n                            <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a>\\r\\n                        </ng-container>\\r\\n                        <ng-template #second>\\r\\n                            <ng-container *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('PATIENT')!= -1; else third\\\">\\r\\n                                <a class=\\\"nav-link\\\" routerLink=\\\"/patient\\\">Home</a>\\r\\n                             </ng-container>\\r\\n                        </ng-template>\\r\\n                        <ng-template #third>\\r\\n                            <ng-container *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('DOCTOR')!= -1; else fourth\\\">\\r\\n                                <a class=\\\"nav-link\\\" routerLink=\\\"/doctor\\\">Home</a>\\r\\n                             </ng-container>\\r\\n                        </ng-template>\\r\\n                        <ng-template #fourth>\\r\\n                            <ng-container  *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('NURSE')!= -1; else fifth\\\">\\r\\n                                <a class=\\\"nav-link\\\" routerLink=\\\"/nurse\\\">Home</a>\\r\\n                             </ng-container>\\r\\n                        </ng-template>\\r\\n                        <ng-template #fifth>\\r\\n                            <ng-container  *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('ADMINCC')!= -1; else sixth\\\">\\r\\n                                <a class=\\\"nav-link\\\" routerLink=\\\"/adminCC\\\">Home</a>\\r\\n                             </ng-container>\\r\\n                        </ng-template>\\r\\n                        <ng-template #sixth>\\r\\n                            <ng-container>\\r\\n                                <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a>\\r\\n                             </ng-container>\\r\\n                        </ng-template>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"userService.checkLoggedIn()\\\">\\r\\n                        <!-- *ngIf=\\\"userService.user\\\" -->\\r\\n                        <a class=\\\"nav-link\\\" *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('ADMINCC')!= -1\\\"\\r\\n                            routerLink=\\\"/adminCCdashboard\\\">Dashboard</a>\\r\\n                        <a class=\\\"nav-link\\\" *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('ADMINC')!= -1\\\"\\r\\n                            routerLink=\\\"/adminCdashboard\\\">Dashboard</a>\\r\\n                        <a class=\\\"nav-link\\\" *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('PATIENT')!= -1\\\"\\r\\n                            routerLink=\\\"/patient/profile\\\">My Profile</a>\\r\\n                        <a class=\\\"nav-link\\\" *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('DOCTOR')!= -1\\\"\\r\\n                            routerLink=\\\"/doctor/profile\\\">My Profile</a>\\r\\n                        <a class=\\\"nav-link\\\" *ngIf=\\\"userService.checkLoggedIn().roles.indexOf('NURSE')!= -1\\\"\\r\\n                            routerLink=\\\"/nurse/profile\\\">My Profile</a>\\r\\n\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"!userService.checkLoggedIn()\\\">\\r\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"!userService.checkLoggedIn()\\\">\\r\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"userService.checkLoggedIn()\\\">\\r\\n                        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\r\\n                            style=\\\"cursor: pointer;\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                            {{userService.checkLoggedIn().name}}\\r\\n                        </a>\\r\\n                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\" style=\\\"cursor: pointer;\\\">\\r\\n                            <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n                        </div>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n\";","export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{ title }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismiss()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n<div class=\\\"modal-body\\\">\\r\\n  {{ message }}\\r\\n\\r\\n<div class=\\\"form-group row\\\" *ngIf=\\\"userInput\\\" style=\\\" padding: 1em;\\\">\\r\\n  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n    <textarea class=\\\"form-control\\\" name=\\\"name\\\" rows=\\\"3\\\"\\r\\n      [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.explanation.errors }\\\" formControlName=\\\"explanation\\\"\\r\\n      placeholder=\\\"Explanation...\\\" style=\\\"border: 0;\\\"></textarea>\\r\\n    <div *ngIf=\\\"submitted && form.controls.explanation.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n      <div *ngIf=\\\"form.controls.explanation.errors.required\\\">Explanation is required</div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">{{ btnCancelText }}</button>\\r\\n  <button type=\\\"button\\\" *ngIf=\\\"!userInput\\\" class=\\\"btn btn-primary\\\" (click)=\\\"accept()\\\">{{ btnOkText }}</button>\\r\\n\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf='userInput'>{{ btnOkText }}</button>\\r\\n</div>\\r\\n</form>\";","export default \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n      <h4 class=\\\"card-header\\\">Login to Clinical System</h4>\\r\\n      <div class=\\\"card-body\\\">\\r\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"email\\\">Email</label>\\r\\n                  <input type=\\\"email\\\" name=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.email.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"example@kcv.rs\\\"/>\\r\\n                    <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">Email is required</div>\\r\\n                        <div *ngIf=\\\"loginForm.controls.email.errors.email\\\">Email must be a valid email address</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"password\\\">Password</label>\\r\\n                  <input type=\\\"password\\\"  name=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.password.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"*****\\\"/>\\r\\n                    <div *ngIf=\\\"submitted && loginForm.controls.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"loginForm.controls.password.errors.required\\\">Password is required</div>\\r\\n                        <div *ngIf=\\\"loginForm.controls.password.errors.minlength\\\">Password is at least 6 characters long</div>\\r\\n                        <div *ngIf=\\\"loginForm.controls.password.errors.maxlength\\\">Password is maximum 24 characters long</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n          </form>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"row text-center border-top \\\" style=\\\"padding-top: 0.3em;\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"btn-group float-left p-1\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        mwlCalendarPreviousView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\"\\r\\n      >\\r\\n        Previous\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-secondary\\\"\\r\\n        mwlCalendarToday\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n      >\\r\\n        Today\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        mwlCalendarNextView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\"\\r\\n      >\\r\\n        Next\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 shadow-sm\\\">\\r\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"btn-group float-right p-1\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        (click)=\\\"setView(CalendarView.Month)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Month\\\"\\r\\n      >\\r\\n        Month\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        (click)=\\\"setView(CalendarView.Week)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Week\\\"\\r\\n      >\\r\\n        Week\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-dark\\\"\\r\\n        (click)=\\\"setView(CalendarView.Day)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Day\\\"\\r\\n      >\\r\\n        Day\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br />\\r\\n<div class=\\\"border rounded shadow pl-5 pr-5 pb-5\\\" [ngSwitch]=\\\"view\\\">\\r\\n  <mwl-calendar-month-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n  >\\r\\n  </mwl-calendar-month-view>\\r\\n  <mwl-calendar-week-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n    [dayStartHour]=\\\"daystart\\\"\\r\\n    [dayEndHour]=\\\"dayend\\\"\\r\\n  >\\r\\n  </mwl-calendar-week-view>\\r\\n  <mwl-calendar-day-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n    [dayStartHour]=\\\"daystart\\\"\\r\\n    [dayEndHour]=\\\"dayend\\\"\\r\\n    [hourSegments]=\\\"6\\\"\\r\\n  >\\r\\n  </mwl-calendar-day-view>\\r\\n</div>\\r\\n\\r\\n<!-- Everything you see below is just for the demo, you don't need to include it in your app -->\\r\\n\\r\\n<br /><br /><br />\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #modalContent let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{modalData?.event.title}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n    style=\\\"max-height: 2em; margin-top:0.2em; padding-top: 0.3em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 1em;\\\">\\r\\n      <h3 class=\\\"h5\\\">{{modalData?.event.title}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n      <div class=\\\"form-group row \\\">\\r\\n        <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Starts:</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\" {{timeConverter(modalData?.event.start)}}\\\" style=\\\"border: 0;\\\" disabled/>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Ends: </label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{timeConverter(modalData?.event.end)}}\\\" style=\\\"border: 0;\\\" disabled />\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">\\r\\n      OK\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"<div class='row'>\\r\\n\\t<ul class=\\\"nav nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./calendar']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Calendar</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./patients']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"false\\\">Patients</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./prescriptions']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"false\\\">Prescriptions</a>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n\\r\\n\\t<div class=\\\"tab-content\\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t</div>\\r\\n\\r\\n</div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Patients</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of patients.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<p>\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#searchForm\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"searchForm\\\">\\r\\n        Search patients\\r\\n    </button>\\r\\n    &nbsp;&nbsp;&nbsp;\\r\\n    <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#filterForm\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-controls=\\\"filterForm\\\">\\r\\n        Filter patients\\r\\n    </button>\\r\\n</p>\\r\\n<div class=\\\"collapse\\\" id=\\\"searchForm\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n        <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Surname: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Upin: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary \\\">Search</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"collapse\\\" id=\\\"filterForm\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n        <form [formGroup]=\\\"filterForm\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Name: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Surname: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"code\\\">Upin: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div> \\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of patientsHeaders'>\\r\\n                {{param}}\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Sort by\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortName()\\\">Name</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortAddress()\\\">Address</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortCity()\\\">City</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortState()\\\">State</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortUpin()\\\">UPIN</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let patient of filteredPatients'>\\r\\n            <td> {{patient.name}} </td>\\r\\n            <td> {{patient.surname}} </td>\\r\\n            <td> {{patient.upin}} </td>\\r\\n            <td> {{patient.email}} </td>\\r\\n            <td> {{patient.city}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"ShowMedicalRecord(patient)\\\">Show\\r\\n                            medical record</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #modalContent let-close=\\\"close\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Medical record</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body \\\">\\r\\n        <app-medical-record [patientID]=\\\"modalData?.patientID\\\" [patientName]=\\\"modalData?.patientName\\\">\\r\\n        </app-medical-record>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">\\r\\n            Cancel\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-template>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n  style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h3 class=\\\"display-8\\\">Personal page</h3>\\r\\n    <p class=\\\"lead\\\">Here you can see, or change your personal information.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<form *ngIf='form' [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <fieldset [disabled]=\\\"change\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.name.errors }\\\"\\r\\n          id=\\\"Name\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.name.errors.required\\\">Name is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Surname</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.surname.errors }\\\"\\r\\n          id=\\\"Surname\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.surname.errors.required\\\">Surname is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Email\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">E-mail</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.email.errors }\\\"\\r\\n            id=\\\"Email\\\" formControlName=\\\"email\\\" style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && form.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.email.errors.required\\\">E-mail is required</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Address\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Address</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.address.errors }\\\"\\r\\n          id=\\\"Address\\\" formControlName=\\\"address\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.address.errors.required\\\">Address is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"City\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">City</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.city.errors }\\\"\\r\\n          id=\\\"City\\\" formControlName=\\\"city\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.city.errors.required\\\">City is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"State\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">State</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.state.errors }\\\"\\r\\n          id=\\\"State\\\" formControlName=\\\"state\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.state.errors.required\\\">State is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"PhoneNumber\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Phone number</label>\\r\\n      <div class=\\\"col-sm-10  col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.phoneNumber.errors }\\\" id=\\\"PhoneNumber\\\"\\r\\n          formControlName=\\\"phoneNumber\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n  <fieldset [disabled]=\\\"true\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"JMBG\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">UPIN</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.upin.errors }\\\"\\r\\n          id=\\\"JMBG\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n          <div *ngIf=\\\"form.controls.upin.errors.minlength\\\">UPIN is exactly 13 characters long</div>\\r\\n          <div *ngIf=\\\"form.controls.upin.errors.maxlength\\\">UPIN is exactly 13 characters long</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n\\r\\n  <div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf='!change'>Submit changes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='!change'\\r\\n      (click)='cancelChanges()'>Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n<div>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" *ngIf='change' (click)='enableChangeInfo()'>Change\\r\\n    information</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='change' (click)='showChangePasswordForm()'>Change\\r\\n    password</button>\\r\\n</div>\\r\\n<br><br>\";","export default \"<div class='row'>\\r\\n\\t<ul class=\\\"nav nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./profile']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Personal profile</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./vacation_request']\\\" href=\\\"#v-pills-vacation_request\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Vacation request</a>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n\\r\\n\\t<div class=\\\"tab-content\\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t</div>\\r\\n\\r\\n</div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n      <h3 class=\\\"display-8\\\">Prescriptions</h3>\\r\\n      <p class=\\\"lead\\\">Here you can see a list of clinic prescriptions.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<p>\\r\\n  <button class=\\\"btn btn-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\"\\r\\n      aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n      Search prescriptions\\r\\n  </button>\\r\\n</p>\\r\\n<div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n  <div class=\\\"card card-body\\\">\\r\\n          <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"name\\\">Doctor name: </label>\\r\\n                  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                      <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.name.errors }\\\"\\r\\n                          class=\\\"form-control\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"surname\\\">Doctor surname: </label>\\r\\n                <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.surname.errors }\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-2 col-form-label font-weight-bold\\\" for=\\\"medication\\\">Medication: </label>\\r\\n                  <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n                      <input type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': submitted && searchForm.controls.medication.errors }\\\"\\r\\n                          class=\\\"form-control\\\" formControlName=\\\"medication\\\" style=\\\"border: 0;\\\" />\\r\\n                  </div>\\r\\n              </div>\\r\\n              <button class=\\\"btn btn-primary \\\">Search</button>\\r\\n          </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\">\\r\\n  <thead>\\r\\n      <tr>\\r\\n          <th scope=\\\"col\\\" *ngFor='let param of prescriptionsHeader'>{{param}}</th>\\r\\n      </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n      <tr *ngFor='let prescription of prescriptions'>\\r\\n          <td> {{prescription.doctor_name}} </td>\\r\\n          <td> {{prescription.doctor_surname}} </td>\\r\\n          <td> {{prescription.medication_name}} </td>\\r\\n          <td>\\r\\n              <div class=\\\"dropdown\\\">\\r\\n                  <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                      data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                      Options\\r\\n                  </button>\\r\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                      <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\r\\n                          (click)=\\\"approvePrescription(prescription)\\\">Approve</a>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n        <h3 class=\\\"display-8\\\">Clinics</h3>\\r\\n        <p class=\\\"lead\\\">Here you can see a list of existing clinics.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\" *ngFor='let param of clinicHeaders'>{{param}}</th>\\r\\n            <th scope=\\\"col\\\">\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Sort by\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortName()\\\" >Name</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortAddress()\\\">Address</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortCity()\\\">City</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortState()\\\">State</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor='let clinic of clinics'>\\r\\n            <td> {{clinic.name}} </td>\\r\\n            <td> {{clinic.address}} </td>\\r\\n            <td> {{clinic.city}} </td>\\r\\n            <td> {{clinic.state}} </td>\\r\\n            <td> {{clinic.description}} </td>\\r\\n            <td>\\r\\n                <div class=\\\"dropdown\\\">\\r\\n                    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        Options\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"showClinicInfo(clinic)\\\">Show info</a>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";","export default \"<div class='row'>\\r\\n\\t<ul class=\\\"nav nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./clinics']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Clinics</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./pending_appointments']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n\\t\\t\\t\\taria-selected=\\\"true\\\">Pending appointments</a>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n\\r\\n\\t<div class=\\\"tab-content\\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t</div>\\r\\n\\r\\n</div>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid\\\" style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n        <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n            <h3 class=\\\"display-8\\\">Pending appointments</h3>\\r\\n            <p class=\\\"lead\\\">Here you can see a list of your pending appointments.</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\" *ngFor='let param of appointmentHeaders'>{{param}}</th>\\r\\n                <th scope=\\\"col\\\">\\r\\n                    <div class=\\\"dropdown\\\">\\r\\n                        <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                            data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                            Sort by\\r\\n                        </button>\\r\\n                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                            <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortClinicName()\\\" >Clinic name</a>\\r\\n                            <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortType()\\\">Type</a>\\r\\n                            <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortDuration()\\\">Duration</a>\\r\\n                            <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"sortDate()\\\">Date</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor='let appointment of appointments'>\\r\\n                <td> {{appointment.clinic.name}} </td>\\r\\n                <td> {{appointment.ordination.name}} </td>\\r\\n                <td> {{appointment.ordination.number}} </td>\\r\\n                <td> {{appointment.typeOfExamination.name}} </td>\\r\\n                <td> {{appointment.formatedDateAndTime}} </td>\\r\\n                <td> {{appointment.duration / 1000 / 60}} </td>\\r\\n                <td>\\r\\n                    <div class=\\\"dropdown\\\">\\r\\n                        <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\r\\n                            data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                            Options\\r\\n                        </button>\\r\\n                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                            <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"showClinicInfo(appointment)\\\">Show info</a>\\r\\n    \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-12 col-sm-12\\\"\\r\\n  style=\\\"max-height: 4em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h4 class=\\\"display-8\\\" *ngIf=\\\"!patientName\\\">Medical record</h4>\\r\\n    <h3 class=\\\"display-8\\\" *ngIf=\\\"patientName\\\">{{patientName}}</h3>\\r\\n    <p class=\\\"lead\\\" *ngIf=\\\"!patientName\\\">Here you can see your personal medical record.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<mat-accordion >\\r\\n  <mat-expansion-panel expanded>\\r\\n    <mat-expansion-panel-header >\\r\\n      <mat-panel-title>\\r\\n        <p class=\\\"h3 \\\">Basic information</p>\\r\\n          </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        \\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n<div class=\\\"container \\\" style=\\\"margin-top: 0.5em;\\\" *ngIf=\\\"medicalRecord\\\">\\r\\n  <div class=\\\"row justify-content-start\\\">\\r\\n    <div class=\\\"col-6 border-top border-bottom pt-2\\\">\\r\\n      <div class=\\\"form-group row \\\">\\r\\n        <label for=\\\"Surname\\\" class=\\\"col-sm-3 col-form-label font-weight-bold\\\">Blood type</label>\\r\\n        <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded pt-2\\\">\\r\\n          <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 1em;\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-display\\\" value=\\\"{{medicalRecord.bloodType}}\\\" disabled />\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <span class=\\\"input-group-text\\\" style=\\\" height: 2em;\\\"><img src=\\\"assets/images/blood-type.png\\\"\\r\\n                  style=\\\" width: 2em; height: 2em;\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Surname\\\" class=\\\"col-sm-3 col-form-label font-weight-bold\\\">Diopter</label>\\r\\n        <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 1em;\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-display\\\" value=\\\"{{medicalRecord.diopter}}\\\" disabled />\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <span class=\\\"input-group-text\\\" style=\\\"height: 2em;\\\"><img src=\\\"assets/images/diopter.png\\\"\\r\\n                  style=\\\" width: 2em; height: 2em;\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Surname\\\" class=\\\"col-sm-3 col-form-label font-weight-bold\\\">Height</label>\\r\\n        <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 1em;\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-display\\\" value=\\\"{{medicalRecord.height}}\\\" disabled />\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <span class=\\\"input-group-text\\\" style=\\\" height: 2em;\\\"><img src=\\\"assets/images/height.png\\\"\\r\\n                  style=\\\"width: 2em; height: 2em;\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Surname\\\" class=\\\"col-sm-3 col-form-label font-weight-bold\\\">Weight</label>\\r\\n        <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 1em;\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control input-display\\\" value=\\\"{{medicalRecord.weight}}\\\" disabled />\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <span class=\\\"input-group-text\\\" style=\\\" height: 2em;\\\"><img src=\\\"assets/images/weight.png\\\"\\r\\n                  style=\\\" width: 2em; height: 2em;\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 border-top border-bottom pt-2\\\">\\r\\n      <div class=\\\"bg-white clearfix rounded \\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label font-weight-bold float-left\\\">Alergies</label>\\r\\n        <img class=\\\"float-right\\\" src=\\\"assets/images/alergies.png\\\" style=\\\" width: 2em; height: 2em; \\\">\\r\\n      </div>\\r\\n      <div class=\\\"overflow-auto border rounded\\\" style=\\\"max-height: 11.4em;\\\">\\r\\n        <ul class=\\\"list-group rounded\\\">\\r\\n          <li class=\\\"list-group-item\\\" *ngFor='let alergie of medicalRecord.alergies.split(\\\",\\\")'>{{alergie}}</li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n</mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<mat-accordion>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header >\\r\\n      <mat-panel-title>\\r\\n        <p class=\\\"h3\\\" style=\\\"margin-top: 0.7em;\\\">Examination history</p>  \\r\\n          </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        \\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n<div class=\\\"col-12 border-top border-bottom p-0 m-0 mb-2\\\" *ngIf=\\\"medicalRecord\\\">\\r\\n  <ul class=\\\"list-group list-group-flush\\\">\\r\\n\\r\\n    <li class=\\\"list-group-item\\\" *ngFor='let examination of medicalRecord.examinationReport'>\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header style=\\\"max-height: 2em;\\\">\\r\\n            <mat-panel-title>\\r\\n              <label class=\\\"font-weight-bold\\\"><img src=\\\"assets/images/typeOfExamination.png\\\"\\r\\n                style=\\\"width: 2em; height: 2em;\\\">{{\\\" \\\" + examination.typeOfExamination.name + \\\" \\\"}}</label>\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              <img src=\\\"assets/images/datetime.png\\\"\\r\\n                  style=\\\"width: 2em; height: 2em;\\\">{{timeConverter(examination.dateAndTime)}}\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n          <div class=\\\"row border-top  pt-3 mb-2 mt-2\\\">\\r\\n            <label class=\\\"col-sm-3 col-form-label font-weight-bold float-left border-bottom\\\">Doctor:</label>\\r\\n            <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded \\\">\\r\\n              <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 1em;\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-display\\\"\\r\\n                  value='{{examination.performs.name + \\\" \\\" + examination.performs.surname}} ' disabled />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <span class=\\\"input-group-text\\\" style=\\\" height: 2em;\\\"><img src=\\\"assets/images/doctor.png\\\"\\r\\n                      style=\\\" width: 1.7em; height: 1.7em;\\\"></span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row  pt-3 mb-2\\\">\\r\\n            <label class=\\\"col-sm-3 col-form-label font-weight-bold float-left border-bottom\\\">Clinic:</label>\\r\\n            <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded \\\">\\r\\n              <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 1em;\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-display\\\" value='{{examination.clinic.name}} ' disabled />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <span class=\\\"input-group-text\\\" style=\\\" height: 2em;\\\"><img src=\\\"assets/images/clinic.png\\\"\\r\\n                      style=\\\" width: 1.7em; height: 1.7em;\\\"></span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row  pt-3 mb-2\\\">\\r\\n            <label class=\\\"col-sm-3 col-form-label font-weight-bold float-left border-bottom\\\">Date:</label>\\r\\n            <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded \\\">\\r\\n              <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 1em;\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control input-display\\\"\\r\\n                  value='{{timeConverter(examination.dateAndTime)}} ' disabled />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <span class=\\\"input-group-text\\\" style=\\\" height: 2em;\\\"><img src=\\\"assets/images/datetime.png\\\"\\r\\n                      style=\\\" width: 1.7em; height: 1.7em;\\\"></span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row  pt-3 mb-2\\\">\\r\\n            <label class=\\\"col-sm-3 col-form-label font-weight-bold float-left border-bottom\\\">Report description:</label>\\r\\n            <div class=\\\"col-sm-8 col-lg-8 shadow-sm p-1 mb-1 bg-white rounded \\\">\\r\\n              <div class=\\\"input-group mb-3\\\" style=\\\"border: 0; height: 4em;\\\">\\r\\n                <textarea type=\\\"text\\\" class=\\\"form-control input-display\\\" style=\\\"height: 5em;\\\"\\r\\n                  value='{{examination.reportDescription}}' disabled></textarea>\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <span class=\\\"input-group-text\\\" style=\\\" height: 5em;\\\"><img src=\\\"assets/images/description.png\\\"\\r\\n                      style=\\\" width: 1.7em; height: 1.7em;\\\"></span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row  pt-2 mb-1\\\">\\r\\n            <div class=\\\"col-6 border-top pt-2\\\">\\r\\n              <div class=\\\"bg-white clearfix rounded \\\">\\r\\n                <label class=\\\"col-sm-3 col-form-label font-weight-bold float-left\\\">Diagnoses</label>\\r\\n                <img class=\\\"float-right\\\" src=\\\"assets/images/diagnosis.png\\\" style=\\\" width: 2em; height: 2em; \\\">\\r\\n              </div>\\r\\n              <div class=\\\"overflow-auto border rounded\\\" style=\\\"max-height: 11.4em;\\\">\\r\\n                <ul class=\\\"list-group rounded\\\">\\r\\n                  <li class=\\\"list-group-item\\\" *ngFor='let diagnosis of examination.diagnosis'>{{diagnosis.code}} + \\\" \\\" +\\r\\n                    {{diagnosis.description}}</li>\\r\\n                  <li >\\r\\n                    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\"\\r\\n                    *ngIf=\\\"examination.diagnosis && examination.diagnosis.length <1\\\">Doctor established no diagnosis.</div>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-6 border-top pt-2\\\">\\r\\n              <div class=\\\"bg-white clearfix rounded \\\">\\r\\n                <label class=\\\"col-sm-3 col-form-label font-weight-bold float-left\\\">Prescriptions</label>\\r\\n                <img class=\\\"float-right\\\" src=\\\"assets/images/drug.png\\\" style=\\\" width: 2em; height: 2em; \\\">\\r\\n              </div>\\r\\n              <div class=\\\"overflow-auto border rounded\\\" style=\\\"max-height: 11.4em;\\\">\\r\\n                <ul class=\\\"list-group rounded\\\">\\r\\n                  <li class=\\\"list-group-item\\\" *ngFor='let prescription of examination.prescription'>\\r\\n                    {{prescription.medication_name}}</li>\\r\\n                  <li *ngIf=\\\"examination.prescription && examination.prescription.length <1\\\">\\r\\n                    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">Doctor prescribed no medications.</div>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n</mat-expansion-panel>\\r\\n</mat-accordion>\";","export default \"<div class=\\\"jumbotron jumbotron-fluid col-lg-8 col-sm-8\\\"\\r\\n  style=\\\"max-height: 6em; margin-top:0.5em; padding-top: 0.5em; \\\">\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"max-height: 2em; margin-bottom: 0.5em;\\\">\\r\\n    <h3 class=\\\"display-8\\\">Personal page</h3>\\r\\n    <p class=\\\"lead\\\">Here you can see, or change your personal information.</p>\\r\\n  </div>\\r\\n</div>\\r\\n<form *ngIf='form' [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <fieldset [disabled]=\\\"change\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.name.errors }\\\"\\r\\n          id=\\\"Name\\\" formControlName=\\\"name\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.name.errors.required\\\">Name is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Surname\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Surname</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.surname.errors }\\\"\\r\\n          id=\\\"Surname\\\" formControlName=\\\"surname\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.surname.errors.required\\\">Surname is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Email\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">E-mail</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.email.errors }\\\"\\r\\n            id=\\\"Email\\\" formControlName=\\\"email\\\" style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && form.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.email.errors.required\\\">E-mail is required</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"Address\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Address</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.address.errors }\\\"\\r\\n          id=\\\"Address\\\" formControlName=\\\"address\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.address.errors.required\\\">Address is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"City\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">City</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.city.errors }\\\"\\r\\n          id=\\\"City\\\" formControlName=\\\"city\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.city.errors.required\\\">City is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"State\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">State</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.state.errors }\\\"\\r\\n          id=\\\"State\\\" formControlName=\\\"state\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.state.errors.required\\\">State is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"PhoneNumber\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Phone number</label>\\r\\n      <div class=\\\"col-sm-10  col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.phoneNumber.errors }\\\" id=\\\"PhoneNumber\\\"\\r\\n          formControlName=\\\"phoneNumber\\\" style=\\\"border: 0;\\\" />\\r\\n        <div *ngIf=\\\"submitted && form.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n          <div *ngIf=\\\"form.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <fieldset [disabled]=\\\"true\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"JMBG\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">UPIN</label>\\r\\n        <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.controls.upin.errors }\\\"\\r\\n            id=\\\"JMBG\\\" formControlName=\\\"upin\\\" style=\\\"border: 0;\\\" />\\r\\n          <div *ngIf=\\\"submitted && form.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n            <div *ngIf=\\\"form.controls.upin.errors.minlength\\\">UPIN is exactly 13 characters long</div>\\r\\n            <div *ngIf=\\\"form.controls.upin.errors.maxlength\\\">UPIN is exactly 13 characters long</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </fieldset>\\r\\n    <!-- <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 col-form-label font-weight-bold\\\">Password</label>\\r\\n      <div class=\\\"col-sm-10 col-lg-6 shadow-sm p-1 mb-1 bg-white rounded\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-lg-8 col-sm-10\\\">\\r\\n      <hr>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n\\r\\n  <div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf='!change'>Submit changes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='!change'\\r\\n      (click)='cancelChanges()'>Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n<div>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" *ngIf='change' (click)='enableChangeInfo()'>Change\\r\\n    information</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary m-1\\\" *ngIf='change' (click)='showChangePasswordForm()'>Change\\r\\n    password</button>\\r\\n</div>\\r\\n<br><br>\";","export default \"<div class='row'>\\r\\n\\t<ul class=\\\"nav nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./profile']\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\r\\n\\t\\t\\t\\taria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Personal profile</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" [routerLink]=\\\"['./medicalRecord']\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-home\\\"\\r\\n\\t\\t\\t\\taria-selected=\\\"true\\\">Medical record</a>\\r\\n\\t\\t</li>\\r\\n\\r\\n\\t</ul>\\r\\n\\r\\n\\t<div class=\\\"tab-content\\\" style='width: 100%;' id=\\\"v-pills-tabContent\\\">\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t</div>\\r\\n\\r\\n</div>\";","export default \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n      <h4 class=\\\"card-header\\\">Register to Clinical System</h4>\\r\\n      <div class=\\\"card-body\\\">\\r\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"email\\\">Email</label>\\r\\n                  <input type=\\\"email\\\" name=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.email.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"example@kcv.rs\\\"/>\\r\\n                    <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">Email is required</div>\\r\\n                        <div *ngIf=\\\"loginForm.controls.email.errors.email\\\">Email must be a valid email address</div>\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"password\\\">Password</label>\\r\\n                  <input type=\\\"password\\\"  name=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.password.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"******\\\"/>\\r\\n                    <div *ngIf=\\\"submitted && loginForm.controls.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"loginForm.controls.password.errors.required\\\">Password is required</div>\\r\\n                        <div *ngIf=\\\"loginForm.controls.password.errors.minlength\\\">Password is at least 6 characters long</div>\\r\\n                        <div *ngIf=\\\"loginForm.controls.password.errors.maxlength\\\">Password is maximum 24 characters long</div>\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"confirmPassword\\\">Confirm password</label>\\r\\n                <input type=\\\"password\\\" name=\\\"confirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.confirmPassword.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"******\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"loginForm.controls.confirmPassword.errors.required\\\">Password is required</div>\\r\\n                    <div *ngIf=\\\"loginForm.controls.confirmPassword.errors.minlength\\\">Password is at least 6 characters long</div>\\r\\n                    <div *ngIf=\\\"loginForm.controls.confirmPassword.errors.maxlength\\\">Password is maximum 24 characters long</div>\\r\\n                    <div *ngIf=\\\"loginForm.controls.confirmPassword.errors.mustMatch\\\">Passwords must match</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Name</label>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.name.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"loginForm.controls.name.errors.required\\\">Name is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"surname\\\">Surname</label>\\r\\n                <input type=\\\"text\\\" name=\\\"surname\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.surname.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" placeholder=\\\"\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.surname.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"loginForm.controls.surname.errors.required\\\">Surname is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"address\\\">Address</label>\\r\\n                <input type=\\\"text\\\" name=\\\"address\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.address.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"loginForm.controls.address.errors.required\\\">Address is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"city\\\">City</label>\\r\\n                <input type=\\\"text\\\" name=\\\"city\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.city.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" placeholder=\\\"\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"loginForm.controls.city.errors.required\\\">City is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"state\\\">State</label>\\r\\n                <input type=\\\"text\\\" name=\\\"state\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.state.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"state\\\" placeholder=\\\"\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"loginForm.controls.state.errors.required\\\">State is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"phoneNumber\\\">Phone number</label>\\r\\n                <input type=\\\"text\\\" name=\\\"phoneNumber\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.phoneNumber.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\" placeholder=\\\"\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"loginForm.controls.phoneNumber.errors.required\\\">Phone number is required</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"upin\\\">UPIN</label>\\r\\n                <input type=\\\"number\\\" name=\\\"upin\\\" [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.controls.upin.errors }\\\" class=\\\"form-control\\\" formControlName=\\\"upin\\\" placeholder=\\\"13 digit unique person identification number\\\"/>\\r\\n                  <div *ngIf=\\\"submitted && loginForm.controls.upin.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"loginForm.controls.upin.errors.required\\\">UPIN is required</div>\\r\\n                    <div *ngIf=\\\"loginForm.controls.upin.errors.minlength\\\">UPIN is exactly 13 digits long</div>\\r\\n                    <div *ngIf=\\\"loginForm.controls.upin.errors.maxlength\\\">UPIN is exactly 13 digits long</div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n          </form>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\";","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DoctorListingComponent } from './components/adminC-dashboard/doctor-listing/doctor-listing.component';\r\nimport { ClinicAdminFormComponent } from './components/adminCC-dashboard/clinic-admin-form/clinic-admin-form.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from './guards/auth-guard.service'\r\nimport { AdminProfileComponent } from './components/adminCC-dashboard/admin-profile.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ClinicListingComponent } from './components/adminCC-dashboard/clinic-listing/clinic-listing.component';\r\nimport { ClinicAdministratorsListingComponent } from './components/adminCC-dashboard/clinic-administrators-listing/clinic-administrators-listing.component';\r\nimport { ClinicFormComponent } from './components/adminCC-dashboard/clinic-form/clinic-form.component';\r\nimport { MedicationListingComponent } from './components/adminCC-dashboard/medication-listing/medication-listing.component';\r\nimport { MedicationFormComponent } from './components/adminCC-dashboard/medication-form/medication-form.component';\r\nimport { DoctorFormComponent } from './components/adminC-dashboard/doctor-form/doctor-form.component';\r\nimport { AdminPersonalProfileComponent} from './components/adminCC-dashboard/admin-personal-profile/admin-personal-profile.component';\r\nimport { ClinicProfileInfoComponent } from './components/adminC-dashboard/clinic-profile-info/clinic-profile-info.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { ChangePasswordDeactivateService } from './guards/change-password-deactivate.service';\r\nimport { AdminCPersonalProfileComponent } from './components/adminC-dashboard/adminC-personal-profile/adminC-personal-profile.component';\r\nimport { AdminCDashboardComponent } from './components/adminC-dashboard/adminC-dashboard.component';\r\nimport { DiagnosisListingComponent } from './components/adminCC-dashboard/diagnosis-listing/diagnosis-listing.component';\r\nimport { DiagnosisFormComponent } from './components/adminCC-dashboard/diagnosis-form/diagnosis-form.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { OrdinationListingComponent } from './components/adminC-dashboard/ordination-listing/ordination-listing.component';\r\nimport { AvailableAppointmentListingComponent } from './components/adminC-dashboard/available-appointment-listing/available-appointment-listing.component';\r\nimport { RegistrationListingComponent } from './components/adminCC-dashboard/registration-listing/registration-listing.component';\r\nimport { TypeOfExaminationListingComponent } from './components/adminC-dashboard/type-of-examination-listing/type-of-examination-listing.component';\r\nimport { TypeOfExaminationFormComponent } from './components/adminC-dashboard/type-of-examination-form/type-of-examination-form.component';\r\nimport { OrdinationFormComponent } from './components/adminC-dashboard/ordination-form/ordination-form.component';\r\nimport { PatientHomeComponent } from './components/patient-home/patient-home.component';\r\nimport { PatientPersonalProfileComponent } from './components/patient-profile/patient-personal-profile/patient-personal-profile.component';\r\nimport { PatientClinicListingComponent } from './components/patient-home/patient-clinic-listing/patient-clinic-listing.component';\r\nimport { PatientProfileComponent } from './components/patient-profile/patient-profile.component';\r\nimport { PatientPendingAppointmentsListingComponent } from './components/patient-home/patient-pending-appointments-listing/patient-pending-appointments-listing.component';\r\nimport { DoctorHomeComponent } from './components/doctor-home/doctor-home/doctor-home.component';\r\nimport { DoctorCalendarComponent } from './components/doctor-home/doctor-calendar/doctor-calendar.component';\r\nimport { NurseHomeComponent } from './components/nurse-home/nurse-home.component';\r\nimport { NurseProfileComponent } from './components/nurse-home/nurse-profile/nurse-profile.component';\r\nimport { NursePersonalProfileComponent } from './components/nurse-home/nurse-profile/nurse-personal-profile/nurse-personal-profile.component';\r\nimport { NurseListingComponent } from './components/adminC-dashboard/nurse-listing/nurse-listing.component';\r\nimport { NurseFormComponent } from './components/adminC-dashboard/nurse-form/nurse-form.component';\r\nimport { DoctorMyProfileComponent } from './components/doctor-home/doctor-my-profile/doctor-my-profile.component';\r\nimport { DoctorProfileComponent } from './components/doctor-home/doctor-profile/doctor-profile.component';\r\nimport { PatientListingComponent } from './components/doctor-home/patient-listing/patient-listing.component';\r\nimport { NurseCalendarComponent } from './components/nurse-home/nurse-calendar/nurse-calendar.component';\r\nimport { NursePatientListingComponent } from './components/nurse-home/nurse-patient-listing/nurse-patient-listing.component';\r\nimport { PrescriptionListingComponent } from './components/nurse-home/prescription-listing/prescription-listing.component';\r\nimport { NewAppointmentPageComponent } from './components/doctor-home/new-appointment-page/new-appointment-page.component';\r\nimport { NewAvailableAppointmentPageComponent } from './components/adminC-dashboard/new-available-appointment-page/new-available-appointment-page.component';\r\nimport { NewVacationRequestComponent } from './components/doctor-home/new-vacation-request/new-vacation-request.component';\r\nimport { MedicalRecordComponent } from './components/patient-profile/medical-record/medical-record.component';\r\nimport { VacationRequestsComponent } from './components/adminC-dashboard/vacation-requests/vacation-requests.component';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: 'adminCCdashboard',\r\n\t\tcomponent: AdminProfileComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: AdminPersonalProfileComponent},\r\n\t\t\t{path: 'profile', component: AdminPersonalProfileComponent},\r\n\t\t\t{path: 'medications', component: MedicationListingComponent},\r\n\t\t\t{path: 'medication_info', component: MedicationFormComponent},\r\n\t\t\t{path: 'diagnoses', component: DiagnosisListingComponent},\r\n\t\t\t{path: 'diagnosis_info', component: DiagnosisFormComponent},\r\n\t\t\t{path: 'registrationRequests', component: RegistrationListingComponent}\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['ADMINCC']}\r\n\t},\r\n\t{\r\n\t\tpath: 'adminCC', \r\n\t\tcomponent: ClinicListingComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: 'clinicAdmins', component: ClinicAdministratorsListingComponent},\r\n\t\t\t{path: 'addClinic', component: ClinicFormComponent},\r\n\t\t\t{path: 'showClinicInfo', component: ClinicProfileInfoComponent},\r\n\t\t\t{path: 'addClinicAdmin', component: ClinicAdminFormComponent}\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['ADMINCC']}\r\n\t},\r\n\t{\r\n\t\tpath: 'adminCdashboard',\r\n\t\tcomponent: AdminCDashboardComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: AdminCPersonalProfileComponent},\r\n\t\t\t{path: 'profile', component: AdminCPersonalProfileComponent},\r\n\t\t\t{path: 'clinic', component: ClinicProfileInfoComponent},\r\n\t\t\t{path: 'doctors', component: DoctorListingComponent},\r\n\t\t\t{path: 'doctor', component: DoctorFormComponent},\r\n\t\t\t{path: 'available_appointments', component: AvailableAppointmentListingComponent},\r\n\t\t\t{path: 'new_available_appointment', component: NewAvailableAppointmentPageComponent},\r\n\t\t\t{path: 'types_of_examination', component: TypeOfExaminationListingComponent},\r\n\t\t\t{path: 'type_of_examination_info', component: TypeOfExaminationFormComponent},\r\n\t\t\t{path: 'ordinations', component: OrdinationListingComponent},\r\n\t\t\t{path: 'ordination_form', component: OrdinationFormComponent},\r\n\t\t\t{path: 'nurse_listing', component: NurseListingComponent},\r\n\t\t\t{path: 'nurse_form', component: NurseFormComponent},\r\n\t\t\t{path: 'vacation_requests', component: VacationRequestsComponent},\r\n\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['ADMINC']}\r\n\t},\r\n\t{\r\n\t\tpath: 'patient',\r\n\t\tcomponent: PatientHomeComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: PatientClinicListingComponent},\r\n\t\t\t{path: 'clinics', component: PatientClinicListingComponent},\r\n\t\t\t{path: 'pending_appointments', component: PatientPendingAppointmentsListingComponent},\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['PATIENT']}\r\n\t},\r\n\t{\r\n\t\tpath: 'doctor',\r\n\t\tcomponent: DoctorHomeComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: DoctorCalendarComponent},\r\n\t\t\t{path: 'calendar', component: DoctorCalendarComponent},\r\n\t\t\t{path: 'patients', component: PatientListingComponent},\r\n\t\t\t{path: 'new_appointment/:patient_id', component: NewAppointmentPageComponent},\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['DOCTOR']}\r\n\t},\r\n\t{\r\n\t\tpath: 'doctor/profile',\r\n\t\tcomponent: DoctorMyProfileComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: DoctorProfileComponent},\r\n\t\t\t{path: 'profile', component: DoctorProfileComponent},\r\n\t\t\t{path: 'vacation_request', component: NewVacationRequestComponent},\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['DOCTOR']}\r\n\t},\r\n\t{\r\n\t\tpath: 'patient/profile',\r\n\t\tcomponent: PatientProfileComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: PatientPersonalProfileComponent},\r\n\t\t\t{path: 'profile', component: PatientPersonalProfileComponent},\r\n\t\t\t{path: 'medicalRecord', component: MedicalRecordComponent},\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['PATIENT']}\r\n\t},\r\n\t{\r\n\t\tpath: 'nurse',\r\n\t\tcomponent: NurseHomeComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: NurseCalendarComponent},\r\n\t\t\t{path: 'calendar', component: NurseCalendarComponent},\r\n\t\t\t{path: 'patients', component: NursePatientListingComponent},\r\n\t\t\t{path: 'prescriptions', component: PrescriptionListingComponent},\r\n\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['NURSE']}\r\n\t},\r\n\t{\r\n\t\tpath: 'nurse/profile',\r\n\t\tcomponent: NurseProfileComponent,\r\n\t\tchildren:[\r\n\t\t\t{path: '', component: NursePersonalProfileComponent},\r\n\t\t\t{path: 'profile', component: NursePersonalProfileComponent},\r\n\t\t\t{path: 'vacation_request', component: NewVacationRequestComponent},\r\n\t\t],\r\n\t\tcanActivate: [AuthGuardService],\r\n\t\tdata: { roles: ['NURSE']}\r\n\t},\r\n\t// {\r\n\t// \tpath: 'doctorHome',\r\n\t// \tcomponent: PatientHomeComponent,\r\n\t// \tchildren:[\r\n\t// \t\t{path: '', component: PatientPersonalProfileComponent},\r\n\t// \t\t{path: 'profile', component: PatientPersonalProfileComponent},\r\n\r\n\t// \t],\r\n\t// \tcanActivate: [AuthGuardService],\r\n\t// \tdata: { roles: ['DOCTOR']}\r\n\t// },\r\n\t{\r\n\t\tpath: 'login',\r\n\t\tcomponent: LoginComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'register',\r\n\t\tcomponent: RegistrationComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'change-password',\r\n\t\tcomponent: ChangePasswordComponent,\r\n\t\tcanDeactivate: [ChangePasswordDeactivateService]\r\n\t}\r\n\t//{\r\n\t// \tpath: '',\r\n\t// \tcomponent: HomeComponent,\r\n\t// \tcanActivate: [AuthGuardService]\r\n\t// },\r\n\t// {\r\n\t// \tpath: 'admin',\r\n\t// \tcomponent: AdminComponent,\r\n\t// \tcanActivate: [AuthGuardService],\r\n\t// \tdata: { roles: [\"clinicalCenterAdmin, clinicAdmin, doctor, nurse, patient\"] }\r\n\t// },\r\n\t// {\r\n\t// \tpath: 'login',\r\n\t// \tcomponent: LoginComponent\r\n\t// },\r\n\t// {\r\n\t// \tpath: 'register',\r\n\t// \tcomponent: RegisterComponent\r\n\t// },\r\n\t// // otherwise redirect to home\r\n\t// { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgHttpLoaderModule } from 'ng-http-loader';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ClinicFormComponent } from './components/adminCC-dashboard/clinic-form/clinic-form.component'\r\nimport { AdminProfileComponent } from './components/adminCC-dashboard/admin-profile.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { ClinicListingComponent } from './components/adminCC-dashboard/clinic-listing/clinic-listing.component';\r\nimport { ClinicAdministratorsListingComponent } from './components/adminCC-dashboard/clinic-administrators-listing/clinic-administrators-listing.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { MedicationListingComponent } from './components/adminCC-dashboard/medication-listing/medication-listing.component';\r\nimport { MedicationFormComponent } from './components/adminCC-dashboard/medication-form/medication-form.component';\r\nimport { AdminPersonalProfileComponent } from './components/adminCC-dashboard/admin-personal-profile/admin-personal-profile.component';\r\nimport { DoctorFormComponent } from './components/adminC-dashboard/doctor-form/doctor-form.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { ClinicAdminFormComponent } from './components/adminCC-dashboard/clinic-admin-form/clinic-admin-form.component';\r\nimport { DoctorListingComponent } from './components/adminC-dashboard/doctor-listing/doctor-listing.component';\r\nimport { ClinicProfileInfoComponent } from './components/adminC-dashboard/clinic-profile-info/clinic-profile-info.component';\r\nimport { AdminCPersonalProfileComponent } from './components/adminC-dashboard/adminC-personal-profile/adminC-personal-profile.component';\r\nimport { AdminCDashboardComponent } from './components/adminC-dashboard/adminC-dashboard.component';\r\nimport { DiagnosisListingComponent } from './components/adminCC-dashboard/diagnosis-listing/diagnosis-listing.component';\r\nimport { DiagnosisFormComponent } from './components/adminCC-dashboard/diagnosis-form/diagnosis-form.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { OrdinationListingComponent } from './components/adminC-dashboard/ordination-listing/ordination-listing.component';\r\nimport { AvailableAppointmentListingComponent } from './components/adminC-dashboard/available-appointment-listing/available-appointment-listing.component';\r\nimport { RegistrationListingComponent } from './components/adminCC-dashboard/registration-listing/registration-listing.component';\r\nimport { DialogComponent } from './components/helperComponents/dialog/dialog.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\nimport { TypeOfExaminationListingComponent } from './components/adminC-dashboard/type-of-examination-listing/type-of-examination-listing.component';\r\nimport { TypeOfExaminationFormComponent } from './components/adminC-dashboard/type-of-examination-form/type-of-examination-form.component';\r\nimport { OrdinationFormComponent } from './components/adminC-dashboard/ordination-form/ordination-form.component';\r\nimport { PatientHomeComponent } from './components/patient-home/patient-home.component';\r\nimport { PatientPersonalProfileComponent } from './components/patient-profile/patient-personal-profile/patient-personal-profile.component';\r\nimport { PatientClinicListingComponent } from './components/patient-home/patient-clinic-listing/patient-clinic-listing.component';\r\nimport { PatientProfileComponent } from './components/patient-profile/patient-profile.component';\r\nimport { PatientPendingAppointmentsListingComponent } from './components/patient-home/patient-pending-appointments-listing/patient-pending-appointments-listing.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { DoctorHomeComponent } from './components/doctor-home/doctor-home/doctor-home.component';\r\nimport { DoctorCalendarComponent } from './components/doctor-home/doctor-calendar/doctor-calendar.component';\r\nimport { NurseFormComponent } from './components/adminC-dashboard/nurse-form/nurse-form.component';\r\nimport { NurseHomeComponent } from './components/nurse-home/nurse-home.component';\r\nimport { NurseListingComponent } from './components/adminC-dashboard/nurse-listing/nurse-listing.component';\r\nimport { NurseProfileComponent } from './components/nurse-home/nurse-profile/nurse-profile.component';\r\nimport { NursePersonalProfileComponent } from './components/nurse-home/nurse-profile/nurse-personal-profile/nurse-personal-profile.component';\r\nimport { PatientListingComponent } from './components/doctor-home/patient-listing/patient-listing.component';\r\nimport { DoctorProfileComponent } from './components/doctor-home/doctor-profile/doctor-profile.component';\r\nimport { DoctorMyProfileComponent } from './components/doctor-home/doctor-my-profile/doctor-my-profile.component';\r\nimport { UserService } from './services/user.service';\r\nimport { NewAppointmentPageComponent } from './components/doctor-home/new-appointment-page/new-appointment-page.component';\r\nimport { NurseCalendarComponent } from './components/nurse-home/nurse-calendar/nurse-calendar.component';\r\nimport { NursePatientListingComponent } from './components/nurse-home/nurse-patient-listing/nurse-patient-listing.component';\r\nimport { PrescriptionListingComponent } from './components/nurse-home/prescription-listing/prescription-listing.component';\r\nimport { NewAvailableAppointmentPageComponent } from './components/adminC-dashboard/new-available-appointment-page/new-available-appointment-page.component';\r\nimport { NewVacationRequestComponent } from './components/doctor-home/new-vacation-request/new-vacation-request.component';\r\nimport { MedicalRecordComponent } from './components/patient-profile/medical-record/medical-record.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { VacationRequestsComponent } from './components/adminC-dashboard/vacation-requests/vacation-requests.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    AppComponent,\r\n    ClinicFormComponent,\r\n    AdminProfileComponent,\r\n    LoginComponent,\r\n    ClinicListingComponent,\r\n    ClinicAdministratorsListingComponent,\r\n    MedicationListingComponent,\r\n    MedicationFormComponent,\r\n    AdminPersonalProfileComponent,\r\n    DoctorFormComponent,\r\n    ClinicAdminFormComponent,\r\n    ClinicProfileInfoComponent,\r\n    ChangePasswordComponent,\r\n    DoctorListingComponent,\r\n    AdminCPersonalProfileComponent,\r\n    AdminCDashboardComponent,\r\n    DiagnosisListingComponent,\r\n    DiagnosisFormComponent,\r\n    RegistrationComponent,\r\n    DiagnosisFormComponent,\r\n    AvailableAppointmentListingComponent,\r\n    RegistrationListingComponent,\r\n    DialogComponent,\r\n    AdminCDashboardComponent,\r\n    TypeOfExaminationListingComponent,\r\n    TypeOfExaminationFormComponent,\r\n    OrdinationListingComponent,\r\n    OrdinationFormComponent,\r\n    PatientHomeComponent,\r\n    PatientPersonalProfileComponent,\r\n    PatientClinicListingComponent,\r\n    PatientProfileComponent,\r\n    PatientPendingAppointmentsListingComponent,\r\n    DoctorHomeComponent,\r\n    DoctorCalendarComponent,\r\n    PatientPendingAppointmentsListingComponent,\r\n    NurseFormComponent,\r\n    NurseHomeComponent,\r\n    NurseListingComponent,\r\n    NurseFormComponent,\r\n    NurseProfileComponent,\r\n    NursePersonalProfileComponent,\r\n    PatientListingComponent,\r\n    DoctorProfileComponent,\r\n    DoctorMyProfileComponent,\r\n    NursePersonalProfileComponent,\r\n    NewAppointmentPageComponent,\r\n    NurseCalendarComponent,\r\n    NursePatientListingComponent,\r\n    PrescriptionListingComponent,\r\n    NewAvailableAppointmentPageComponent,\r\n    NewVacationRequestComponent,\r\n    MedicalRecordComponent,\r\n    VacationRequestsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    MatTableModule,\r\n    BrowserAnimationsModule,\r\n    NgHttpLoaderModule.forRoot(),\r\n    NgbModule,\r\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    AngularFontAwesomeModule,\r\n    MatExpansionModule\r\n  ],\r\n  exports: [\r\n    MedicalRecordComponent\r\n  ],\r\n  providers: [CookieService, UserService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (userService: UserService) => function() { /*userService.refreshToken()*/},\r\n      deps: [UserService],\r\n      multi: true\r\n    }], //UserService, AuthGuardService\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ DialogComponent ],\r\n})\r\nexport class AppModule { }\r\n","export default \"li+li { border-left: 1px solid #0000FF }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbkMtZGFzaGJvYXJkL2FkbWluQy1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLCtCQUErQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9hZG1pbkMtZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsaStsaSB7IGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzAwMDBGRiB9XHJcbiJdfQ== */\";","import { UserService } from 'src/app/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ClinicAdminService } from 'src/app/services/clinic-admin.service';\r\n\r\n@Component({\r\n  selector: 'app-adminC-dashboard',\r\n  templateUrl: './adminC-dashboard.component.html',\r\n  styleUrls: ['./adminC-dashboard.component.css']\r\n})\r\nexport class AdminCDashboardComponent implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n              private activatedRoute: ActivatedRoute,\r\n              private cookieService: CookieService,\r\n              private clinicAdminService: ClinicAdminService,\r\n              private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  showClinicInfo(){\r\n    let clinicID = this.userService.getUser().clinic_id;\r\n    this.clinicAdminService.getAdminC().subscribe(\r\n      \r\n    );\r\n\r\n    console.log(clinicID);\r\n    this.clinicAdminService.getClinic(clinicID).subscribe(\r\n      (data)=>{\r\n        this.router.navigate(['clinic'], { relativeTo: this.activatedRoute, state: {data: data}});\r\n      },\r\n      (error) => {\r\n        alert(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9hZG1pbkMtcGVyc29uYWwtcHJvZmlsZS9hZG1pbkMtcGVyc29uYWwtcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\";","import { UserService } from 'src/app/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ClinicAdminService } from 'src/app/services/clinic-admin.service';\r\n\r\n@Component({\r\n  selector: 'app-adminC-personal-profile',\r\n  templateUrl: './adminC-personal-profile.component.html',\r\n  styleUrls: ['./adminC-personal-profile.component.css']\r\n})\r\nexport class AdminCPersonalProfileComponent implements OnInit {\r\n  admin: any;\r\n  form: FormGroup;\r\n  change: boolean;\r\n  submitted: boolean;\r\n  constructor(private clinicAdminService: ClinicAdminService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private activatedRoute: ActivatedRoute,\r\n              private cookieService: CookieService,\r\n              private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n      this.getAdminInfo();\r\n  }\r\n  getAdminInfo(){\r\n    this.clinicAdminService.getAdminC().subscribe(\r\n      (data) => {\r\n        this.admin=data;\r\n        this.form = this.formBuilder.group({\r\n          name: [this.admin.name, [Validators.required, ]],\r\n          surname: [this.admin.surname, [Validators.required]],\r\n          email:  [this.admin.email,[Validators.required, Validators.email]],\r\n          address:  [this.admin.address,[Validators.required]],\r\n          city:  [this.admin.city,[Validators.required]],\r\n          state:  [this.admin.state,[Validators.required]],\r\n          phoneNumber:  [this.admin.phoneNumber,[Validators.required]],\r\n          upin:  [this.admin.upin,[Validators.required,Validators.minLength(13),Validators.maxLength(13)]]\r\n        });\r\n        this.change=true;\r\n      },\r\n      (error) => {\r\n        alert(error);\r\n      }\r\n    );\r\n  }\r\n  enableChangeInfo(){\r\n    this.change=!this.change;\r\n  }\r\n  cancelChanges(){\r\n    this.change=!this.change;\r\n    this.getAdminInfo();\r\n  }\r\n  showChangePasswordForm(){\r\n    this.router.navigate(['../change-password']);\r\n  }\r\n  onSubmit(){\r\n    this.submitted = true;\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar adminC = {\r\n      id: this.admin.id,\r\n\t\t\temail: this.form.controls.email.value,\r\n      name: this.form.controls.name.value,\r\n      surname: this.form.controls.surname.value,\r\n      address: this.form.controls.address.value,\r\n      city: this.form.controls.city.value,\r\n      state: this.form.controls.state.value,\r\n      phoneNumber: this.form.controls.phoneNumber.value,\r\n      upin: this.form.controls.upin.value,\r\n      clinic_id: this.admin.clinic_id\r\n\t\t}\r\n\r\n    this.clinicAdminService.changeAdminC(adminC).subscribe(\r\n      (data) => {this.change=!this.change; return;},\r\n      (error) => { alert(error);}\r\n    );\r\n\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9hdmFpbGFibGUtYXBwb2ludG1lbnQtbGlzdGluZy9hdmFpbGFibGUtYXBwb2ludG1lbnQtbGlzdGluZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router, ActivatedRoute } from '@angular/router';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AppointmentService } from 'src/app/services/appointment.service';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-available-appointment-listing',\r\n  templateUrl: './available-appointment-listing.component.html',\r\n  styleUrls: ['./available-appointment-listing.component.css']\r\n})\r\nexport class AvailableAppointmentListingComponent implements OnInit {\r\n\tappointmentHeaders = ['Doctor', 'Ordination name', 'Ord. number', 'Type', 'Date and time', 'Duration (minutes)'];\r\n\tappointments: any;\r\n\tnavigationSubscription: any;\r\n\tclinicID: any;\r\n\tclinicName: any;\r\n\tconstructor(private clinicService: ClinicService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate appointmentService: AppointmentService,\r\n\t\tprivate confirmationDialogService: DialogService\r\n\t) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\t\t\tthis.getAppointments();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.activatedRoute.params.subscribe((params) => {\r\n\t\t\tthis.clinicID = params.id;\r\n\t\t\tthis.clinicName = params.name;\r\n\t\t});\r\n\t}\r\n\tgetAppointments() {\r\n\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\tthis.appointmentService.getClinicAvailableAppointments(this.clinicID).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.appointments = data;\r\n\t\t\t\tfor (const [i, value] of this.appointments.entries()) {\r\n\t\t\t\t\tthis.appointments[i].formatedDateAndTime = this.timeConverter(this.appointments[i].startingDateAndTime);\r\n\t\t\t\t}\r\n\t\t\t\tthis.appointments.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\taddNewAppointment() {\r\n\t\tthis.router.navigate(['../new_available_appointment'], { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\tdeleteAppointment(appointment) {\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to delete available appointment: ' + appointment.doctors[0].name+' '+appointment.doctors[0].surname+' '+appointment.ordination.name  + '?', false)\r\n\t\t\t.then((confirmed) => {\r\n\t\t\t\tif (confirmed.submited) {\r\n\t\t\t\t\tthis.appointmentService.deleteAvailableAppointment(appointment.id).subscribe(\r\n\t\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\t\tthis.getAppointments();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t\talert(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\ttimeConverter(UNIX_timestamp) {\r\n\t\tvar a = new Date(UNIX_timestamp * 1000);\r\n\t\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\r\n\t\tvar sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n\t\tvar time = date + '. ' + month + ' ' + year + '. ' + hour + ':' + min + ':' + sec;\r\n\t\treturn time;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9jbGluaWMtcHJvZmlsZS1pbmZvL2NsaW5pYy1wcm9maWxlLWluZm8uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-clinic-profile-info',\r\n  templateUrl: './clinic-profile-info.component.html',\r\n  styleUrls: ['./clinic-profile-info.component.css']\r\n})\r\nexport class ClinicProfileInfoComponent implements OnInit {\r\n\r\n  clinicID: any;\r\n  clinic: any;\r\n  clinicBackup: any;\r\n  clinicForm: FormGroup;\r\n  formDisabled: boolean;\r\n  submitted: boolean;\r\n\r\n  constructor(private clinicService: ClinicService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.clinic = history.state.data;\r\n    this.clinicBackup = history.state.data;\r\n    this.createFormGroup();\r\n  }\r\n\r\n  createFormGroup(){\r\n    var name = \"\";\r\n    var address = \"\";\r\n    var city = \"\";\r\n    var state = \"\";\r\n    var description = \"\";\r\n\r\n    if (this.clinic) {\r\n      this.clinicID = this.clinic.id;\r\n      name = this.clinic.name;\r\n      address = this.clinic.address;\r\n      city = this.clinic.city;\r\n      state = this.clinic.state;\r\n      description = this.clinic.description;\r\n    }\r\n\r\n    this.clinicForm = this.formBuilder.group({\r\n      name: [name, [Validators.required]],\r\n      address: [address, [Validators.required]],\r\n      city: [city, [Validators.required]],\r\n      state: [state, [Validators.required]],\r\n      description: [description]\r\n    });\r\n\r\n    this.formDisabled = true;\r\n  }\r\n\r\n  enableChangeInfo() {\r\n    this.formDisabled = !this.formDisabled;\r\n  }\r\n\r\n  cancelChanges() {\r\n    this.formDisabled = !this.formDisabled;\r\n    this.clinic = this.clinicBackup;\r\n    this.createFormGroup();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.clinicForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var clinic = {\r\n      id: null,\r\n      name: this.clinicForm.controls.name.value,\r\n      address: this.clinicForm.controls.address.value,\r\n      city: this.clinicForm.controls.city.value,\r\n      state: this.clinicForm.controls.state.value,\r\n      description: this.clinicForm.controls.description.value,\r\n    }\r\n\r\n    if (this.clinicID) {\r\n      clinic.id = this.clinicID\r\n      this.clinicService.changeClinicInfo(clinic).subscribe(\r\n        (data) => { this.enableChangeInfo(); this.clinicBackup = data; /* this.router.navigate(['../clinics'], { relativeTo: this.activatedRoute }); */ },\r\n        (error) => { alert(error); return; }\r\n      );\r\n    } else {\r\n      this.clinicService.addClinic(clinic).subscribe(\r\n        (data) => { this.router.navigate(['../clinics'], { relativeTo: this.activatedRoute }); },\r\n        (error) => { alert(error); return; }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9kb2N0b3ItZm9ybS9kb2N0b3ItZm9ybS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-form',\r\n  templateUrl: './doctor-form.component.html',\r\n  styleUrls: ['./doctor-form.component.css']\r\n})\r\nexport class DoctorFormComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private clinicService: ClinicService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    var doctor = history.state.data;\r\n\r\n    var email = \"\";\r\n    var name = \"\";\r\n    var surname = \"\";\r\n    var address = \"\";\r\n    var city = \"\";\r\n    var state = \"\";\r\n    var phoneNumber = \"\";\r\n    var shiftStart = \"\";\r\n    var shiftEnd = \"\";\r\n    var upin = \"\";\r\n\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [email, [Validators.required, Validators.email]],\r\n      name: [name, [Validators.required]],\r\n      surname: [surname, [Validators.required]],\r\n      address: [address, [Validators.required]],\r\n      city: [city, [Validators.required]],\r\n      state: [state, [Validators.required]],\r\n      phoneNumber: [phoneNumber, [Validators.required]],\r\n      shiftStart: [shiftStart, [Validators.required, Validators.minLength(5), Validators.maxLength(5)]],\r\n      shiftEnd: [shiftEnd, [Validators.required, Validators.minLength(5), Validators.maxLength(5)]],\r\n      upin: [upin, [Validators.required, Validators.minLength(13), Validators.maxLength(13)]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var doctor = {\r\n      email: this.loginForm.controls.email.value,\r\n      name: this.loginForm.controls.name.value,\r\n      surname: this.loginForm.controls.surname.value,\r\n      address: this.loginForm.controls.address.value,\r\n      city: this.loginForm.controls.city.value,\r\n      state: this.loginForm.controls.state.value,\r\n      phoneNumber: this.loginForm.controls.phoneNumber.value,\r\n      shiftStart: this.loginForm.controls.shiftStart.value,\r\n      shiftEnd: this.loginForm.controls.shiftEnd.value,\r\n      upin: this.loginForm.controls.upin.value,\r\n      clinic_id: this.userService.getUser().clinic_id\r\n    }\r\n\r\n\r\n    this.clinicService.addDoctor(doctor).subscribe(\r\n      (data) => { this.router.navigate(['../doctors'], { relativeTo: this.activatedRoute }); },\r\n      (error) => { alert(error); return; }\r\n    );\r\n\r\n\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9kb2N0b3ItbGlzdGluZy9kb2N0b3ItbGlzdGluZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n\tselector: 'app-doctor-listing',\r\n\ttemplateUrl: './doctor-listing.component.html',\r\n\tstyleUrls: ['./doctor-listing.component.css']\r\n})\r\nexport class DoctorListingComponent implements OnInit {\r\n\tdoctorsHeaders = ['Name', 'Surname', 'Phone Number', 'Shift starts', 'Shift ends', 'Stars', 'Reviews'];\r\n\tdoctors: any;\r\n\tnavigationSubscription: any;\r\n\tclinicID: any;\r\n\tclinicName: any;\r\n\r\n\tsearchForm: FormGroup;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private clinicService: ClinicService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate confirmationDialogService: DialogService) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\t\t\tthis.getDoctors();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.activatedRoute.params.subscribe((params) => {\r\n\t\t\tthis.clinicID = params.id;\r\n\t\t\tthis.clinicName = params.name;\r\n\t\t});\r\n\r\n\t\tthis.searchForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tsurname: [\"\"]\r\n\t\t});\r\n\t}\r\n\r\n\tgetDoctors() {\r\n\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\tthis.clinicService.getDoctors(this.clinicID).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.doctors = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\taddNewDoctor() {\r\n\t\tthis.router.navigate(['../doctor'], { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\tdeleteDoctor(doctor) {\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to delete doctor: ' + doctor.name+' '+doctor.surname + ' ?', false)\r\n\t\t.then((confirmed) => {\r\n\t\t\tif (confirmed.submited) {\r\n\t\t\t\tthis.clinicService.deleteDoctor(doctor.id).subscribe(\r\n\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\tthis.getDoctors();\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\talert(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonSearch(){\r\n\t\tthis.submitted = true;\r\n\r\n\t\tvar doctor = {\r\n\t\t\tname: this.searchForm.controls.name.value ? this.searchForm.controls.name.value: \"\",\r\n\t\t\tsurname: this.searchForm.controls.surname.value ? this.searchForm.controls.surname.value: \"\",\r\n\t\t\tclinic_id: this.userService.getUser().clinic_id\r\n\t\t}\r\n\r\n\t\tthis.clinicService.searchDoctors(doctor).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t  this.doctors = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  alert(error);\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9uZXctYXZhaWxhYmxlLWFwcG9pbnRtZW50LXBhZ2UvbmV3LWF2YWlsYWJsZS1hcHBvaW50bWVudC1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppointmentService } from 'src/app/services/appointment.service';\r\n\r\n@Component({\r\n  selector: 'app-new-available-appointment-page',\r\n  templateUrl: './new-available-appointment-page.component.html',\r\n  styleUrls: ['./new-available-appointment-page.component.css']\r\n})\r\nexport class NewAvailableAppointmentPageComponent implements OnInit {\r\n\tdoctors: any;\r\n\tpatient: any;\r\n\ttypesOfExamination: any;\r\n\tordinations: any;\r\n\r\n\tform: FormGroup;\r\n\tsubmitted: boolean;\r\n\tconstructor(private formBuilder: FormBuilder,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate clinicService: ClinicService,\r\n\t\tprivate appointmentService: AppointmentService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.loadData().then(() => {\r\n\t\t\tthis.createFormGroup();\r\n\t\t}, () => alert(\"Error loading data\"));\r\n\t}\r\n\r\n\tloadData() {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\t\tthis.loadTypesOfExamination().then(() => {\r\n\t\t\t\t\tthis.loadOrdinations().then(() => {\r\n\t\t\t\t\t\tthis.loadClinicDoctors().then(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t}, () => reject());\r\n\t\t\t\t\t}, () => reject());\r\n\t\t\t\t}, () => reject());\r\n\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tloadClinicDoctors() {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tlet clinic_id = this.userService.getUser().clinic_id;\r\n\t\t\tthis.clinicService.getDoctors(clinic_id).subscribe(\r\n\t\t\t\t(data) => { this.doctors = data; resolve(); },\r\n\t\t\t\t(error) => { alert(error); reject(); }\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tloadTypesOfExamination() {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tlet clinic_id = this.userService.getUser().clinic_id;\r\n\t\t\tthis.clinicService.getTypesOfExamination(clinic_id).subscribe(\r\n\t\t\t\t(data) => { this.typesOfExamination = data; resolve(); },\r\n\t\t\t\t(error) => { alert(error); reject(); }\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tloadOrdinations() {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tlet clinic_id = this.userService.getUser().clinic_id;\r\n\t\t\tthis.clinicService.getOrdinations(clinic_id).subscribe(\r\n\t\t\t\t(data) => { this.ordinations = data; resolve(); },\r\n\t\t\t\t(error) => { alert(error); reject(); }\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tcreateFormGroup() {\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\tdateAndTime: [, [Validators.required,]],\r\n\t\t\tduration: [, [Validators.required,]],\r\n\t\t\ttypeOfExamination: [, [Validators.required,]],\r\n\t\t\tordination: [, [Validators.required,]],\r\n\t\t\tprice: [, [Validators.required,]],\r\n\t\t\tdoctor: [, [Validators.required,]]\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tsetPriceFromTypeOfExamination() {\r\n\t\tlet type = this.typesOfExamination.find(element => element.id == this.form.controls.typeOfExamination.value);\r\n\t\tif (!type) {\r\n\t\t\tthis.form.controls['price'].setValue(\"\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.form.controls['price'].setValue(type.price);\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet admin = this.userService.getUser();\r\n\t\tif (!admin) {\r\n\t\t\talert(\"Invalid user\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet clinic_id = admin.clinic_id;\r\n\r\n\t\tlet appointment = {\r\n\t\t\tstartingDateAndTime: this.form.controls.dateAndTime.value.getTime() / 1000,\r\n\t\t\tduration: this.form.controls.duration.value * 60 * 1000,\r\n\t\t\ttypeOfExamination: { id: this.form.controls.typeOfExamination.value },\r\n\t\t\tordination: { id: this.form.controls.ordination.value },\r\n\t\t\tprice: this.form.controls.price.value,\r\n\t\t\tclinic: { id: clinic_id },\r\n\t\t\tdoctors: [{id: this.form.controls.doctor.value}]\r\n\t\t}\r\n\r\n\r\n\t\tthis.appointmentService.createAvailableAppointment(appointment).subscribe(\r\n\t\t\t(data) => { this.router.navigate(['../available_appointments'], { relativeTo: this.activatedRoute }); },\r\n\t\t\t(error) => { alert(error); }\r\n\t\t);\r\n\r\n\t}\r\n\tcancelChanges(){\r\n\t\tthis.router.navigate(['../available_appointments'], { relativeTo: this.activatedRoute });\r\n\t}\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9udXJzZS1mb3JtL251cnNlLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nurse-form',\r\n  templateUrl: './nurse-form.component.html',\r\n  styleUrls: ['./nurse-form.component.css']\r\n})\r\nexport class NurseFormComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private clinicService: ClinicService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    var nurse = history.state.data;\r\n\r\n    var email = \"\";\r\n    var name = \"\";\r\n    var surname = \"\";\r\n    var address = \"\";\r\n    var city = \"\";\r\n    var state = \"\";\r\n    var phoneNumber = \"\";\r\n    var shiftStart = \"\";\r\n    var shiftEnd = \"\";\r\n    var upin = \"\";\r\n\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [email, [Validators.required, Validators.email]],\r\n      name: [name, [Validators.required]],\r\n      surname: [surname, [Validators.required]],\r\n      address: [address, [Validators.required]],\r\n      city: [city, [Validators.required]],\r\n      state: [state, [Validators.required]],\r\n      phoneNumber: [phoneNumber, [Validators.required]],\r\n      shiftStart: [shiftStart, [Validators.required, Validators.minLength(5), Validators.maxLength(5)]],\r\n      shiftEnd: [shiftEnd, [Validators.required, Validators.minLength(5), Validators.maxLength(5)]],\r\n      upin: [upin, [Validators.required, Validators.minLength(13), Validators.maxLength(13)]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var nurse = {\r\n      email: this.loginForm.controls.email.value,\r\n      name: this.loginForm.controls.name.value,\r\n      surname: this.loginForm.controls.surname.value,\r\n      address: this.loginForm.controls.address.value,\r\n      city: this.loginForm.controls.city.value,\r\n      state: this.loginForm.controls.state.value,\r\n      phoneNumber: this.loginForm.controls.phoneNumber.value,\r\n      shiftStart: this.loginForm.controls.shiftStart.value,\r\n      shiftEnd: this.loginForm.controls.shiftEnd.value,\r\n      upin: this.loginForm.controls.upin.value,\r\n      clinic_id: this.userService.getUser().clinic_id\r\n    }\r\n\r\n\r\n    this.clinicService.addNurse(nurse).subscribe(\r\n      (data) => { this.router.navigate(['../nurse_listing'], { relativeTo: this.activatedRoute }); },\r\n      (error) => { alert(error); return; }\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9udXJzZS1saXN0aW5nL251cnNlLWxpc3RpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nurse-listing',\r\n  templateUrl: './nurse-listing.component.html',\r\n  styleUrls: ['./nurse-listing.component.css']\r\n})\r\nexport class NurseListingComponent implements OnInit {\r\n\r\n  nurseHeaders = ['Name', 'Surname', 'Phone Number', 'Shift starts', 'Shift ends'];\r\n\tnurses: any;\r\n\tnavigationSubscription: any;\r\n\tclinicID: any;\r\n\tclinicName: any;\r\n\r\n\tsearchForm: FormGroup;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private clinicService: ClinicService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder\r\n\t) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\t\t\tthis.getNurses();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.activatedRoute.params.subscribe((params) => {\r\n\t\t\tthis.clinicID = params.id;\r\n\t\t\tthis.clinicName = params.name;\r\n\t\t});\r\n\r\n\t\tthis.searchForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tsurname: [\"\"]\r\n\t\t});\r\n\t}\r\n\r\n\tgetNurses() {\r\n\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\tthis.clinicService.getNurses(this.clinicID).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.nurses = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\taddNewNurse() {\r\n\t\tthis.router.navigate(['../nurse_form'], { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\tdeleteNurse(nurse) {\r\n\t\tthis.clinicService.deleteNurse(nurse.id).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.getNurses();\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tonSearch(){\r\n\t\tthis.submitted = true;\r\n\r\n\t\tvar nurse = {\r\n\t\t\tname: this.searchForm.controls.name.value ? this.searchForm.controls.name.value: \"\",\r\n\t\t\tsurname: this.searchForm.controls.surname.value ? this.searchForm.controls.surname.value: \"\",\r\n\t\t\tclinic_id: this.userService.getUser().clinic_id\r\n\t\t}\r\n\r\n\t\tthis.clinicService.searchNurses(nurse).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t  this.nurses = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  alert(error);\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9vcmRpbmF0aW9uLWZvcm0vb3JkaW5hdGlvbi1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n\tselector: 'app-ordination-form',\r\n\ttemplateUrl: './ordination-form.component.html',\r\n\tstyleUrls: ['./ordination-form.component.css']\r\n})\r\nexport class OrdinationFormComponent implements OnInit {\r\n\tform: FormGroup;\r\n\tordination_id: any;\r\n\tchange: string;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate clinicService: ClinicService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tvar ordination = history.state.data;\r\n\t\tvar name = \"\";\r\n\t\tvar number = 0;\r\n\t\tthis.change = 'Add';\r\n\r\n\t\tif (ordination) {\r\n\t\t\tthis.ordination_id = ordination.id;\r\n\t\t\tname = ordination.name;\r\n\t\t\tnumber = ordination.number;\r\n\t\t\tthis.change = 'Change';\r\n\t\t}\r\n\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\tname: [name, [Validators.required]],\r\n\t\t\tnumber: [number, [Validators.required]]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar ordination = {\r\n\t\t\tid: this.ordination_id,\r\n\t\t\tname: this.form.controls.name.value,\r\n\t\t\tnumber: this.form.controls.number.value,\r\n\t\t\tclinic_id: this.userService.getUser().clinic_id\r\n\t\t}\r\n\r\n\t\tif (this.change === 'Change') {\r\n\t\t\tthis.clinicService.editOrdination(ordination).subscribe(\r\n\t\t\t\t(data) => { this.router.navigate(['../ordinations'], { relativeTo: this.activatedRoute }); },\r\n\t\t\t\t(error) => { alert(error); return; }\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.clinicService.addOrdination(ordination, ordination.clinic_id).subscribe(\r\n\t\t\t\t(data) => { this.router.navigate(['../ordinations'], { relativeTo: this.activatedRoute }); },\r\n\t\t\t\t(error) => { alert(error); return; }\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC9vcmRpbmF0aW9uLWxpc3Rpbmcvb3JkaW5hdGlvbi1saXN0aW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'app-ordination-listing',\r\n\ttemplateUrl: './ordination-listing.component.html',\r\n\tstyleUrls: ['./ordination-listing.component.css']\r\n})\r\nexport class OrdinationListingComponent implements OnInit {\r\n\tordinationsHeaders = ['Name', 'Number'];\r\n\tordinations: any;\r\n\tnavigationSubscription: any;\r\n\tclinicID: any;\r\n\tclinicName: any;\r\n\r\n\tsearchForm: FormGroup;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private clinicService: ClinicService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\t\t\tthis.getOrdinations();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.activatedRoute.params.subscribe((params) => {\r\n\t\t\tthis.clinicID = params.id;\r\n\t\t\tthis.clinicName = params.name;\r\n\t\t});\r\n\r\n\t\tthis.searchForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tnumber: [\"\"]\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetOrdinations() {\r\n\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\tthis.clinicService.getOrdinations(this.clinicID).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t  this.ordinations = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  alert(error);\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\r\n\tchangeOrdination(ordination) {\r\n\t\tthis.router.navigate(['../ordination_form'], { relativeTo: this.activatedRoute, state: { data: ordination } });\r\n\t}\r\n\r\n\taddNewOrdination() {\r\n\t\tthis.router.navigate(['../ordination_form'], { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\tdeleteOrdination(ordination) {\r\n\t\tthis.clinicService.deleteOrdination(ordination.id).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t  this.getOrdinations();\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  alert(error);\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\r\n\tonSearch(){\r\n\t\tthis.submitted = true;\r\n\r\n\t\tvar ordination = {\r\n\t\t\tname: this.searchForm.controls.name.value ? this.searchForm.controls.name.value: \"\",\r\n\t\t\tnumber: this.searchForm.controls.number.value ? this.searchForm.controls.number.value: \"\",\r\n\t\t\tclinic_id: this.userService.getUser().clinic_id\r\n\t\t}\r\n\r\n\t\tthis.clinicService.searchOrdinations(ordination).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t  this.ordinations = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  alert(error);\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC90eXBlLW9mLWV4YW1pbmF0aW9uLWZvcm0vdHlwZS1vZi1leGFtaW5hdGlvbi1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClinicalCenterService } from 'src/app/services/clinical-center.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-type-of-examination-form',\r\n\ttemplateUrl: './type-of-examination-form.component.html',\r\n\tstyleUrls: ['./type-of-examination-form.component.css']\r\n})\r\nexport class TypeOfExaminationFormComponent implements OnInit {\r\n\tform: FormGroup;\r\n\ttypeOfExamination_id: any;\r\n\tchange: string;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private formBuilder: FormBuilder,\r\n\t\tprivate clinicService: ClinicService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService) { }\r\n\r\n\tngOnInit() {\r\n\t\tvar typeOfExamination = history.state.data;\r\n\t\tvar name = \"\";\r\n\t\tvar price = 0;\r\n\t\tthis.change = 'Add';\r\n\r\n\t\tif (typeOfExamination) {\r\n\t\t\tthis.typeOfExamination_id = typeOfExamination.id;\r\n\t\t\tname = typeOfExamination.name;\r\n\t\t\tprice = typeOfExamination.price;\r\n\t\t\tthis.change = 'Change';\r\n\t\t}\r\n\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\tname: [name, [Validators.required]],\r\n\t\t\tprice: [price, [Validators.required]]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar typeOfExamination = {\r\n\t\t\tid: this.typeOfExamination_id,\r\n\t\t\tname: this.form.controls.name.value,\r\n\t\t\tprice: this.form.controls.price.value,\r\n\t\t\tclinic_id: this.userService.getUser().clinic_id\r\n\t\t}\r\n\r\n\t\tif (this.change === 'Change') {\r\n\t\t\tthis.clinicService.editTypeOfExamination(typeOfExamination).subscribe(\r\n\t\t\t\t(data) => { this.router.navigate(['../types_of_examination'], { relativeTo: this.activatedRoute }); },\r\n\t\t\t\t(error) => { alert(error); return; }\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.clinicService.addTypeOfExamination(typeOfExamination, typeOfExamination.clinic_id).subscribe(\r\n\t\t\t\t(data) => { this.router.navigate(['../types_of_examination'], { relativeTo: this.activatedRoute }); },\r\n\t\t\t\t(error) => { alert(error); return; }\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC90eXBlLW9mLWV4YW1pbmF0aW9uLWxpc3RpbmcvdHlwZS1vZi1leGFtaW5hdGlvbi1saXN0aW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-type-of-examination-listing',\r\n  templateUrl: './type-of-examination-listing.component.html',\r\n  styleUrls: ['./type-of-examination-listing.component.css']\r\n})\r\nexport class TypeOfExaminationListingComponent implements OnInit {\r\n  typeOfExaminationHeaders = ['Name', 'Price'];\r\n  typesOfExamination: any;\r\n  navigationSubscription: any;\r\n  clinicID: any;\r\n  clinicName: any;\r\n\r\n  searchForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private clinicService: ClinicService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private userService: UserService,\r\n    private formBuilder: FormBuilder,\r\n    private confirmationDialogService: DialogService\r\n  ) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n        this.clinicID = this.userService.getUser().clinic_id;\r\n        this.getTypesOfExamination();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      this.clinicID = params.id;\r\n      this.clinicName = params.name;\r\n    });\r\n\r\n    this.searchForm = this.formBuilder.group({\r\n      name: [\"\"],\r\n      minPrice: [\"\"],\r\n      maxPrice: [\"\"],\r\n    });\r\n  }\r\n  getTypesOfExamination() {\r\n    this.clinicID = this.userService.getUser().clinic_id;\r\n    this.clinicService.getTypesOfExamination(this.clinicID).subscribe(\r\n      (data) => {\r\n        this.typesOfExamination = data;\r\n      },\r\n      (error) => {\r\n        alert(error);\r\n      }\r\n    )\r\n  }\r\n  changeTypeOfExamination(typeOfExamination) {\r\n    this.router.navigate(['../type_of_examination_info'], { relativeTo: this.activatedRoute, state: { data: typeOfExamination } });\r\n  }\r\n  addNewTypeOfExamination() {\r\n    this.router.navigate(['../type_of_examination_info'], { relativeTo: this.activatedRoute });\r\n  }\r\n\r\n  deleteTypeOfExamination(typeOfExamination) {\r\n    this.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to delete type of examination: ' + typeOfExamination.name + ' ?', false)\r\n      .then((confirmed) => {\r\n        if (confirmed.submited) {\r\n          this.clinicService.deleteTypeOfExamination(typeOfExamination.id).subscribe(\r\n            (data) => {\r\n              this.getTypesOfExamination();\r\n            },\r\n            (error) => {\r\n              alert(error);\r\n            }\r\n          )\r\n        }\r\n      });\r\n  }\r\n\r\n  onSearch() {\r\n    this.submitted = true;\r\n\r\n    var type = {\r\n      name: this.searchForm.controls.name.value ? this.searchForm.controls.name.value : \"\",\r\n      minPrice: this.searchForm.controls.minPrice.value ? this.searchForm.controls.minPrice.value : \"\",\r\n      maxPrice: this.searchForm.controls.maxPrice.value ? this.searchForm.controls.maxPrice.value : \"\",\r\n      clinic_id: this.userService.getUser().clinic_id\r\n    }\r\n\r\n    this.clinicService.searchTypesOfExamination(type).subscribe(\r\n      (data) => {\r\n        this.typesOfExamination = data;\r\n      },\r\n      (error) => {\r\n        alert(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.navigationSubscription) {\r\n      this.navigationSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DLWRhc2hib2FyZC92YWNhdGlvbi1yZXF1ZXN0cy92YWNhdGlvbi1yZXF1ZXN0cy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ClinicAdminService } from 'src/app/services/clinic-admin.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n\tselector: 'app-vacation-requests',\r\n\ttemplateUrl: './vacation-requests.component.html',\r\n\tstyleUrls: ['./vacation-requests.component.css']\r\n})\r\nexport class VacationRequestsComponent implements OnInit {\r\n\trequestsHeaders = ['Applicant', 'Name', 'Surname', 'Start', 'End'];\r\n\tnavigationSubscription: any;\r\n\trequests: any;\r\n\r\n\tconstructor(private clinicAdminService: ClinicAdminService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate confirmationDialogService: DialogService) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.getRequests();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tgetRequests() {\r\n\t\tthis.clinicAdminService.getVacationRequests().subscribe((data) => {\r\n\t\t\tthis.requests = data;\r\n\t\t\tfor (let i = 0; i < this.requests.length; i++) {\r\n\t\t\t\tthis.requests[i].startDate = this.timeConverter(this.requests[i].startDate);\r\n\t\t\t\tthis.requests[i].endDate = this.timeConverter(this.requests[i].endDate);\r\n\t\t\t  }\r\n\t\t\tthis.requests.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t});\r\n\t}\r\n\r\n\tapproveRequest(request) {\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to approve vacation request for ' + request.roles[0] + ': ' + request.staffName + ' ?', false)\r\n\t\t\t.then((confirmed) => {\r\n\t\t\t\tif (confirmed.submited) {\r\n\t\t\t\t\tthis.clinicAdminService.approveVacationRequest(request).subscribe(\r\n\t\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\t\tthis.router.navigate(['../vacation_requests'], { relativeTo: this.activatedRoute });\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t\talert(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(() => this.router.navigate(['../vacation_requests'], { relativeTo: this.activatedRoute }))\r\n\t}\r\n\r\n\trejectRequest(request) {\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Please provide a reason for deleting request for ' + request.roles[0] + ': ' + request.staffName + ' ?', true)\r\n\t\t\t.then((confirmed) => {\r\n\t\t\t\tif (confirmed.submited) {\r\n\t\t\t\t\tthis.clinicAdminService.rejectVacationRequest(request, confirmed.explanation).subscribe(\r\n\t\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\t\tthis.router.navigate(['../vacation_requests'], { relativeTo: this.activatedRoute });\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t\talert(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(() => this.router.navigate(['../vacation_requests'], { relativeTo: this.activatedRoute }))\r\n\t}\r\n\r\n\ttimeConverter(a) {\r\n\t\ta = new Date(a * 1000)\r\n\t\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\r\n\t\tvar time = date + '. ' + month + ' ' + year + '. ' + hour + ':' + min;\r\n\t\treturn time;\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvYWRtaW4tcGVyc29uYWwtcHJvZmlsZS9hZG1pbi1wZXJzb25hbC1wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ClinicCenterAdminService } from 'src/app/services/clinic-center-admin.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-admin-personal-profile',\r\n  templateUrl: './admin-personal-profile.component.html',\r\n  styleUrls: ['./admin-personal-profile.component.css']\r\n})\r\nexport class AdminPersonalProfileComponent implements OnInit {\r\n  admin: any;\r\n  loginForm: FormGroup;\r\n  change: boolean;\r\n  submitted: boolean;\r\n  constructor(private clinicCenterAdminService: ClinicCenterAdminService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private cookieService: CookieService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAdminInfo();\r\n  }\r\n\r\n  getAdminInfo() {\r\n    this.clinicCenterAdminService.getAdminKc().subscribe((data) => {\r\n      this.admin = data;\r\n      this.loginForm = this.formBuilder.group({\r\n        name: [this.admin.name, [Validators.required,]],\r\n        surname: [this.admin.surname, [Validators.required]],\r\n        email: [this.admin.email, [Validators.required, Validators.email]],\r\n        address: [this.admin.address, [Validators.required]],\r\n        city: [this.admin.city, [Validators.required]],\r\n        state: [this.admin.state, [Validators.required]],\r\n        phoneNumber: [this.admin.phoneNumber, [Validators.required]],\r\n        upin: [this.admin.upin, [Validators.required, Validators.minLength(13), Validators.maxLength(13)]]\r\n      });\r\n      this.change = true;\r\n    });;\r\n  }\r\n  enableChangeInfo() {\r\n    this.change = !this.change;\r\n  }\r\n  cancelChanges() {\r\n    this.change = !this.change;\r\n    this.getAdminInfo();\r\n  }\r\n  showChangePasswordForm() {\r\n    this.router.navigate(['../change-password']);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var adminKc = {\r\n      id: JSON.parse(this.cookieService.get('user'))['id'],\r\n      email: this.loginForm.controls.email.value,\r\n      name: this.loginForm.controls.name.value,\r\n      surname: this.loginForm.controls.surname.value,\r\n      address: this.loginForm.controls.address.value,\r\n      city: this.loginForm.controls.city.value,\r\n      state: this.loginForm.controls.state.value,\r\n      phoneNumber: this.loginForm.controls.phoneNumber.value,\r\n      upin: this.loginForm.controls.upin.value\r\n    }\r\n\r\n    this.clinicCenterAdminService.changeAdminKc(adminKc).subscribe(\r\n      (data) => { this.change = !this.change; return; },\r\n      (error) => { alert(error); }\r\n    );\r\n\r\n  }\r\n}\r\n","export default \"li+li { border-left: 1px solid #0000FF }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbkNDLWRhc2hib2FyZC9hZG1pbi1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSwrQkFBK0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkbWluQ0MtZGFzaGJvYXJkL2FkbWluLXByb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImxpK2xpIHsgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjMDAwMEZGIH1cclxuIl19 */\";","import { ClinicService } from '../../services/clinic.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-profile',\r\n  templateUrl: './admin-profile.component.html',\r\n  styleUrls: ['./admin-profile.component.css']\r\n})\r\nexport class AdminProfileComponent implements OnInit {\r\n  clinics: any;\r\n  clinicHeaders = ['Name','Address','City','State','Description'];\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  loadClinics(){\r\n    \r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvY2xpbmljLWFkbWluLWZvcm0vY2xpbmljLWFkbWluLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-clinic-admin-form',\r\n  templateUrl: './clinic-admin-form.component.html',\r\n  styleUrls: ['./clinic-admin-form.component.css']\r\n})\r\nexport class ClinicAdminFormComponent implements OnInit {\r\n  form: FormGroup;\r\n  admin: any;\r\n  clinicID: any;\r\n  clinicName: any;\r\n  constructor(private router: Router,\r\n              private clinicService: ClinicService,\r\n              private activatedRoute: ActivatedRoute, \r\n              private formBuilder: FormBuilder,\r\n              private cookieService: CookieService) { }\r\n  submitted: boolean;\r\n  ngOnInit() {\r\n    \r\n    this.form = this.formBuilder.group({\r\n      name: ['', [Validators.required, ]],\r\n      surname: ['', [Validators.required]],\r\n      email:  ['',[Validators.required, Validators.email]],\r\n      address:  ['',[Validators.required]],\r\n      city:  ['',[Validators.required]],\r\n      state:  ['',[Validators.required]],\r\n      phoneNumber:  ['',[Validators.required]],\r\n      upin:  ['',[Validators.required,Validators.minLength(13),Validators.maxLength(13)]]\r\n    });\r\n    this.activatedRoute.params.subscribe((params)=> {\r\n      this.clinicID = params.id;\r\n      this.clinicName=params.name\r\n\t\t});\r\n  }\r\n  public onSubmit(){\r\n    this.submitted = true;\r\n    var adminC = {\r\n      id: null,\r\n\t\t\temail: this.form.controls.email.value,\r\n      name: this.form.controls.name.value,\r\n      surname: this.form.controls.surname.value,\r\n      address: this.form.controls.address.value,\r\n      city: this.form.controls.city.value,\r\n      state: this.form.controls.state.value,\r\n      phoneNumber: this.form.controls.phoneNumber.value,\r\n      upin: this.form.controls.upin.value,\r\n      clinic_id: this.clinicID\r\n\t\t}\r\n\r\n    this.clinicService.addAdmin(adminC).subscribe(\r\n      (data) => {this.router.navigate(['../clinicAdmins', { id: this.clinicID, name: this.clinicName }], { relativeTo: this.activatedRoute });},\r\n      (error)=>{alert(error)}\r\n    );\r\n    \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvY2xpbmljLWFkbWluaXN0cmF0b3JzLWxpc3RpbmcvY2xpbmljLWFkbWluaXN0cmF0b3JzLWxpc3RpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import { ClinicCenterAdminService } from './../../../services/clinic-center-admin.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-clinic-administrators-listing',\r\n  templateUrl: './clinic-administrators-listing.component.html',\r\n  styleUrls: ['./clinic-administrators-listing.component.css']\r\n})\r\nexport class ClinicAdministratorsListingComponent implements OnInit {\r\n\tclinicID: any;\r\n\tclinicName: any;\r\n\tadmins: any;\r\n\t\r\n\tclinicAdminHeaders = ['Name','Surname','E-mail','Address','City','State','Phone Number'];\r\n\r\n  constructor(private clinicService: ClinicService,\r\n\tprivate clinicCenterAdminService: ClinicCenterAdminService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate confirmationDialogService: DialogService) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.activatedRoute.params.subscribe((params)=> {\r\n\t\t\tthis.clinicID = params.id;\r\n\t\t\tthis.clinicName = params.name;\r\n\r\n\t\t\tthis.getClinicAdministrators();\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tgetClinicAdministrators() {\r\n\t\tthis.clinicService.getClinicAdmins(this.clinicID).subscribe((data) => {\r\n\t\t\tthis.admins = data;\r\n\t\t});\r\n\t}\r\n\tdeleteAdmin(admin){\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to delete clinic administrator: ' + admin.name +' '+admin.surname + ' ?', false)\r\n\t\t.then((confirmed) => {\r\n\t\t\tif (confirmed.submited) {\r\n\t\t\t\tthis.clinicCenterAdminService.deleteClinicAdmin(admin).subscribe(\r\n\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\tthis.getClinicAdministrators();\r\n\t\t\t\t\t\talert(\"Administrator succesfully deleted!\");\r\n\t\t\t\t\t}, // Dodati feedback za uspesno brisanje\r\n\t\t\t\t\t(error)=> {alert(error);}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\taddAdministrator(){\r\n\t\tthis.router.navigate(['../addClinicAdmin', { id: this.clinicID, name: this.clinicName }], { relativeTo: this.activatedRoute });\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvY2xpbmljLWZvcm0vY2xpbmljLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ClinicService } from '../../../services/clinic.service'\r\n\r\n@Component({\r\n  selector: 'app-clinic-form',\r\n  templateUrl: './clinic-form.component.html',\r\n  styleUrls: ['./clinic-form.component.css']\r\n})\r\nexport class ClinicFormComponent implements OnInit {\r\n  name: string;\r\n  address: string;\r\n  city: string;\r\n  state: string;\r\n  description: string;\r\n  submitted: string;\r\n  test: boolean;\r\n  constructor(private router: Router,\r\n    private clinicService: ClinicService,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.test = true;\r\n  }\r\n  public onSubmit() {\r\n    var clinic = {\r\n      name: this.name,\r\n      address: this.address,\r\n      city: this.city,\r\n      state: this.state,\r\n      description: this.description\r\n    }\r\n    this.clinicService.addClinic(clinic).subscribe(\r\n      (data) => { this.router.navigate(['../clinics'], { relativeTo: this.activatedRoute }); },\r\n      (error) => alert(error)\r\n    );\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvY2xpbmljLWxpc3RpbmcvY2xpbmljLWxpc3RpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n\tselector: 'app-clinic-listing',\r\n\ttemplateUrl: './clinic-listing.component.html',\r\n\tstyleUrls: ['./clinic-listing.component.css']\r\n})\r\nexport class ClinicListingComponent implements OnInit {\r\n\tclinics: any;\r\n\tclinicHeaders = ['Name', 'Address', 'City', 'State', 'Description'];\r\n\tnavigationSubscription: any;\r\n\r\n\tconstructor(private clinicService: ClinicService,\r\n\t\tpublic router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate confirmationDialogService: DialogService) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.getClinics();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tgetClinics() {\r\n\t\tthis.clinicService.getClinics().subscribe((data) => {\r\n\t\t\tthis.clinics = data;\r\n\t\t\tthis.clinics.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t});\r\n\t}\r\n\r\n\tshowClinicInfo(clinic: any) {\r\n\t\tthis.router.navigate(['showClinicInfo'], { relativeTo: this.activatedRoute, state: {data: clinic}});\r\n\t}\r\n\r\n\tshowClinicAdmins(clinic: any) {\r\n\t\tthis.router.navigate(['clinicAdmins', { id: clinic.id, name: clinic.name }], { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\tshowNewClinicForm() {\r\n\t\tthis.router.navigate(['addClinic'], { relativeTo: this.activatedRoute });\r\n\t}\r\n\tdeleteClinic(clinic){\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to delete clinic: ' + clinic.name + ' ?', false)\r\n\t\t.then((confirmed) => {\r\n\t\t\tif (confirmed.submited) {\r\n\t\t\t\tthis.clinicService.deleteClinic(clinic).subscribe(\r\n\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\tthis.router.navigate(['../adminCC'], { relativeTo: this.activatedRoute });\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error)=>{\r\n\t\t\t\t\t\talert(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvZGlhZ25vc2lzLWZvcm0vZGlhZ25vc2lzLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClinicalCenterService } from 'src/app/services/clinical-center.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n\tselector: 'app-diagnosis-form',\r\n\ttemplateUrl: './diagnosis-form.component.html',\r\n\tstyleUrls: ['./diagnosis-form.component.css']\r\n})\r\nexport class DiagnosisFormComponent implements OnInit {\r\n\tform: FormGroup;\r\n\tdiagnosis_id: any;\r\n\tchange: string;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private formBuilder: FormBuilder,\r\n\t\tprivate clinicalCenterService: ClinicalCenterService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate confirmationDialogService: DialogService) { }\r\n\r\n\tngOnInit() {\r\n\t\tvar diagnosis = history.state.data;\r\n\t\tvar code = \"\";\r\n\t\tvar description = \"\";\r\n\t\tthis.change = 'Add';\r\n\r\n\t\tif (diagnosis) {\r\n\t\t\tthis.diagnosis_id = diagnosis.id;\r\n\t\t\tcode = diagnosis.code;\r\n\t\t\tdescription = diagnosis.description;\r\n\t\t\tthis.change = 'Change';\r\n\t\t}\r\n\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\tcode: [code, [Validators.required]],\r\n\t\t\tdescription: [description, [Validators.required]]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\tif(this.diagnosis_id){\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to ' + 'edit' + ' diagnosis with code: ' + this.form.controls.code.value + ' ?', false)\r\n\t\t\t.then((confirmed) => {\r\n\t\t\t\tif (confirmed.submited) {\r\n\t\t\t\t\tthis.submitOrEdit();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}else{\r\n\t\tthis.submitOrEdit();\r\n\t}\r\n\t}\r\n\tsubmitOrEdit() {\r\n\t\tthis.submitted =true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar diagnosis = {\r\n\t\t\tid: this.diagnosis_id,\r\n\t\t\tcode: this.form.controls.code.value,\r\n\t\t\tdescription: this.form.controls.description.value\r\n\t\t}\r\n\r\n\t\tif (this.diagnosis_id) {\r\n\t\t\tthis.clinicalCenterService.editDiagnosis(diagnosis).subscribe(\r\n\t\t\t\t(data) => { this.router.navigate(['../diagnoses'], { relativeTo: this.activatedRoute }); },\r\n\t\t\t\t(error) => { alert(error); return; }\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.clinicalCenterService.addDiagnosis(diagnosis).subscribe(\r\n\t\t\t\t(data) => { this.router.navigate(['../diagnoses'], { relativeTo: this.activatedRoute }); },\r\n\t\t\t\t(error) => { alert(error); return; }\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvZGlhZ25vc2lzLWxpc3RpbmcvZGlhZ25vc2lzLWxpc3RpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { ClinicalCenterService } from 'src/app/services/clinical-center.service';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-diagnosis-listing',\r\n  templateUrl: './diagnosis-listing.component.html',\r\n  styleUrls: ['./diagnosis-listing.component.css']\r\n})\r\nexport class DiagnosisListingComponent implements OnInit {\r\n\tdiagnoses: any;\r\n\tdiagnosisHeaders = ['Code', 'Description'];\r\n\r\n\tnavigationSubscription: any;\r\n\r\n\tconstructor(private clinicalCenterService: ClinicalCenterService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate confirmationDialogService: DialogService) {\r\n\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.getDiagnosis();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tgetDiagnosis() {\r\n\t\tthis.clinicalCenterService.getDiagnosis().subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.diagnoses = data;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\topenDiagnosisForm(diagnosis: any) {\r\n\t\tthis.router.navigate(['../diagnosis_info'], { relativeTo: this.activatedRoute, state: {data: diagnosis}});\r\n\t}\r\n\r\n\tdeleteDiagnosis(diagnosis: any) {\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to delete diagnosis with code: ' + diagnosis.code + ' ?', false)\r\n\t\t.then((confirmed) => {\r\n\t\t\tif (confirmed.submited) {\r\n\t\t\t\tthis.clinicalCenterService.deleteDiagnosis(diagnosis.id).subscribe(\r\n\t\t\t\t\t(data) => this.getDiagnosis(),\r\n\t\t\t\t\t(error) => alert(error)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvbWVkaWNhdGlvbi1mb3JtL21lZGljYXRpb24tZm9ybS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ClinicalCenterService } from 'src/app/services/clinical-center.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n\tselector: 'app-medication-form',\r\n\ttemplateUrl: './medication-form.component.html',\r\n\tstyleUrls: ['./medication-form.component.css']\r\n})\r\nexport class MedicationFormComponent implements OnInit {\r\n\tform: FormGroup;\r\n\tmedication_id: any;\r\n\tchange: string;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private formBuilder: FormBuilder,\r\n\t\tprivate clinicalCenterService: ClinicalCenterService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate confirmationDialogService: DialogService ) { }\r\n\r\n\tngOnInit() {\r\n\t\tvar medication = history.state.data;\r\n\t\tvar code = \"\";\r\n\t\tvar name = \"\";\r\n\t\tthis.change='Add';\r\n\t\t\r\n\t\tif (medication){\r\n\t\t\tthis.medication_id = medication.id;\r\n\t\t\tcode = medication.code;\r\n\t\t\tname = medication.name;\r\n\t\t\tthis.change = 'Change';\r\n\t\t}\r\n\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\tcode: [code, [Validators.required]],\r\n\t\t\tname: [name, [Validators.required]]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tif(this.medication_id){\r\n\t\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to ' + 'edit' + ' medication with code: ' + this.form.controls.code.value + ' ?', false)\r\n\t\t\t\t.then((confirmed) => {\r\n\t\t\t\t\tif (confirmed.submited) {\r\n\t\t\t\t\t\tthis.submitOrEdit();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.submitOrEdit();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tsubmitOrEdit(){\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar medication = {\r\n\t\t\tid: this.medication_id,\r\n\t\t\tcode: this.form.controls.code.value,\r\n\t\t\tname: this.form.controls.name.value\r\n\t\t}\r\n\r\n\t\tif (this.medication_id){\r\n\t\t\tthis.clinicalCenterService.editMedication(medication).subscribe(\r\n\t\t\t\t(data) => {this.router.navigate(['../medications'], { relativeTo: this.activatedRoute });},\r\n\t\t\t\t(error) => { alert(error); return;}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.clinicalCenterService.addMedication(medication).subscribe(\r\n\t\t\t\t(data) => {this.router.navigate(['../medications'], { relativeTo: this.activatedRoute });},\r\n\t\t\t\t(error) => { alert(error); return;}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvbWVkaWNhdGlvbi1saXN0aW5nL21lZGljYXRpb24tbGlzdGluZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\n\r\nimport { ClinicalCenterService } from 'src/app/services/clinical-center.service';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n\tselector: 'app-medication-listing',\r\n\ttemplateUrl: './medication-listing.component.html',\r\n\tstyleUrls: ['./medication-listing.component.css']\r\n})\r\nexport class MedicationListingComponent implements OnInit {\r\n\tmedications: any;\r\n\tmedicationHeaders = ['Code', 'Name'];\r\n\r\n\tnavigationSubscription: any;\r\n\r\n\tconstructor(private clinicalCenterService: ClinicalCenterService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate confirmationDialogService: DialogService) {\r\n\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.getMedications();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tgetMedications() {\r\n\t\tthis.clinicalCenterService.getMedications().subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.medications = data;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\topenMedicationForm(medication: any) {\r\n\t\tthis.router.navigate(['../medication_info'], { relativeTo: this.activatedRoute, state: {data: medication}});\r\n\t}\r\n\r\n\tdeleteMedication(medication: any) {\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to delete medication with code: ' + medication.code + ' ?', false)\r\n\t\t.then((confirmed) => {\r\n\t\t\tif (confirmed.submited) {\r\n\t\t\t\tthis.clinicalCenterService.deleteMedication(medication.id).subscribe(\r\n\t\t\t\t\t(data) => this.getMedications(),\r\n\t\t\t\t\t(error) => alert(error)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5DQy1kYXNoYm9hcmQvcmVnaXN0cmF0aW9uLWxpc3RpbmcvcmVnaXN0cmF0aW9uLWxpc3RpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import { ClinicCenterAdminService } from './../../../services/clinic-center-admin.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-registration-listing',\r\n  templateUrl: './registration-listing.component.html',\r\n  styleUrls: ['./registration-listing.component.css']\r\n})\r\nexport class RegistrationListingComponent implements OnInit {\r\n  requestsHeaders = ['Name', 'Surname', 'City', 'State', 'Phone Number'];\r\n  navigationSubscription: any;\r\n  requests: any;\r\n\r\n  constructor(private clinicCenterAdminService: ClinicCenterAdminService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private confirmationDialogService: DialogService) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n        this.getRequests();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n  getRequests() {\r\n    this.clinicCenterAdminService.getRegistrationRequests().subscribe((data) => {\r\n      this.requests = data;\r\n      this.requests.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n    });\r\n  }\r\n  approveRequest(request) {\r\n    this.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to approve reqistration request for user: ' + request.name + ' ?', false)\r\n      .then((confirmed) => {\r\n        if (confirmed.submited) {\r\n          this.clinicCenterAdminService.approveRequest(request).subscribe(\r\n            (data) => {\r\n              this.router.navigate(['../registrationRequests'], { relativeTo: this.activatedRoute });\r\n            },\r\n            (error) => {\r\n              alert(error);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch(() => this.router.navigate(['../registrationRequests'], { relativeTo: this.activatedRoute }))\r\n  }\r\n  deleteRequest(request) {\r\n    this.confirmationDialogService.confirm('Please confirm', 'Please provide a reason for deleting request for user: ' + request.name + ' ?', true)\r\n      .then((confirmed) => {\r\n        if (confirmed.submited) {\r\n          this.clinicCenterAdminService.deleteRequest(request, confirmed.explanation).subscribe(\r\n            (data) => {\r\n              this.router.navigate(['../registrationRequests'], { relativeTo: this.activatedRoute });\r\n            },\r\n            (error) => {\r\n              alert(error);\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch(() => this.router.navigate(['../registrationRequests'], { relativeTo: this.activatedRoute }))\r\n  }\r\n  showRequestInfo(info: any) {\r\n    //to do \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-change-password',\r\n\ttemplateUrl: './change-password.component.html',\r\n\tstyleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n\tform: FormGroup;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(\r\n\t\tprivate userService: UserService,\r\n\t\tprivate router: Router,\r\n\t\tprivate formBuilder: FormBuilder\r\n\t) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\toldPassword: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(24)])],\r\n\t\t\tnewPassword: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(24)])]\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.userService.changePassowrd(this.form.value)\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\tthis.userService.logout()\r\n\t\t\t\tthis.router.navigate(['/login', { msgType: 'success', msgBody: 'Success! Please sign in with your new password.' }]);\r\n\t\t\t}, error => {\r\n\t\t\t\tthis.submitted = false;\r\n\t\t\t\talert('Invalid old password.');\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tcanExit(): boolean {\r\n\t\tconst passwordChanged = this.userService.passwordChanged;\r\n\r\n\t\tif (passwordChanged){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\talert(\"You need to change your password on first login!\")\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n}","import { CookieService } from 'ngx-cookie-service';\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours\r\n} from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView,\r\n  DAYS_OF_WEEK\r\n} from 'angular-calendar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DoctorService } from 'src/app/services/doctor.service';\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'mwl-demo-component',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  //styleUrls: ['./../../../../styles.css'],\r\n  templateUrl: './doctor-calendar.component.html'\r\n})\r\nexport class DoctorCalendarComponent implements OnInit{\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n  daystart: Number;\r\n  dayend: Number;\r\n  modalData: {\r\n    appointment: any;\r\n    action: string;\r\n  };\r\n  excludeDays: number[] = [0, 6];\r\n\r\n  weekStartsOn = DAYS_OF_WEEK.SUNDAY;\r\n\r\n  constructor(private doctorService: DoctorService,\r\n\t\tprivate router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    private cookieService: CookieService){}\r\n\r\n  ngOnInit(): void {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    this.daystart = parseInt(user.shiftStart);\r\n    this.dayend = parseInt(user.shiftEnd);\r\n    this.doctorService.getAppointments().subscribe(\r\n      (data) => {\r\n       this.populateCalendarEvents(data);\r\n      },\r\n      (error) => { \r\n        alert(error);\r\n      }\r\n    );\r\n\r\n    this.doctorService.getVacations().subscribe(\r\n      (data) => {\r\n       this.populateVacations(data);\r\n      },\r\n      (error) => { \r\n        alert(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  actions: CalendarEventAction[] = [\r\n    {\r\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n      a11yLabel: 'Edit',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Edited', event);\r\n      }\r\n    }\r\n  ];\r\n\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  events: CalendarEvent[] = [];\r\n\r\n  activeDayIsOpen: boolean = false;\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    this.events = this.events.map(iEvent => {\r\n      if (iEvent === event) {\r\n        return {\r\n          ...event,\r\n          start: newStart,\r\n          end: newEnd\r\n        };\r\n      }\r\n      return iEvent;\r\n    });\r\n    this.handleEvent('Dropped or resized', event);\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    let appointment = {}\r\n    this.doctorService.getOneAppointment(event.id).subscribe(\r\n      (data) => {\r\n        appointment=data;\r\n        this.modalData = { appointment, action };\r\n        this.modal.open(this.modalContent, { size: 'lg' });\r\n      },\r\n      (error) => { \r\n        alert(error);\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  addEvent(): void {\r\n    this.events = [\r\n      ...this.events,\r\n      {\r\n        title: 'New event',\r\n        start: startOfDay(new Date()),\r\n        end: endOfDay(new Date()),\r\n        color: colors.red,\r\n        draggable: true,\r\n        resizable: {\r\n          beforeStart: true,\r\n          afterEnd: true\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  deleteEvent(eventToDelete: CalendarEvent) {\r\n    this.events = this.events.filter(event => event !== eventToDelete);\r\n  }\r\n\r\n  setView(view: CalendarView) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n  // TODO: Izdvojiti operacije, preglede i godisnje odmore po bojama i u kodu\r\n  populateCalendarEvents(data){\r\n    data.forEach(appointment => {\r\n      var  eventToAdd = {\r\n        id: appointment.id,\r\n        start: new Date(appointment.startingDateAndTime*1000),\r\n        end: new Date(appointment.endingDateAndTime*1000),\r\n        title: appointment.typeOfExamination.name,\r\n        color: colors.red,\r\n        actions: this.actions\r\n      }\r\n      this.events.push(eventToAdd);\r\n    });\r\n  }\r\n  populateVacations(data){\r\n\r\n    data.forEach(vacation => {\r\n      var  eventToAdd = {\r\n        start: new Date(vacation.startDate*1000),\r\n        end: new Date(vacation.endDate*1000),\r\n        title: \"Vacation\",\r\n        color: colors.blue,\r\n        actions: this.actions\r\n      }\r\n      this.events.push(eventToAdd);\r\n    });\r\n  }\r\n  \r\n\ttimeConverter(a){\r\n    a=new Date(a*1000)\r\n\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes(); \r\n\t\tvar sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n\t\tvar time = date + '. ' + month + ' ' + year + '. ' + hour + ':' + min;\r\n\t\treturn time;\r\n    }\r\n    startExamination(){\r\n      this.modal.dismissAll();\r\n      //TODO\r\n      //this.router.navigate(['../examination'], { relativeTo: this.activatedRoute, state: {data: clinic}});\r\n    }\r\n    close(){\r\n      this.modal.dismissAll();\r\n    }\r\n}\r\n","export default \".container {\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n\\r\\nli+li { border-left: 1px solid #0000FF }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItaG9tZS9kb2N0b3ItaG9tZS9kb2N0b3ItaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBLFFBQVEsK0JBQStCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItaG9tZS9kb2N0b3ItaG9tZS9kb2N0b3ItaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbn1cclxuXHJcbmxpK2xpIHsgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjMDAwMEZGIH1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doctor-home',\r\n  templateUrl: './doctor-home.component.html',\r\n  styleUrls: ['./doctor-home.component.css']\r\n})\r\nexport class DoctorHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"li+li { border-left: 1px solid #0000FF }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItaG9tZS9kb2N0b3ItbXktcHJvZmlsZS9kb2N0b3ItbXktcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVEsK0JBQStCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItaG9tZS9kb2N0b3ItbXktcHJvZmlsZS9kb2N0b3ItbXktcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGkrbGkgeyBib3JkZXItbGVmdDogMXB4IHNvbGlkICMwMDAwRkYgfVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doctor-my-profile',\r\n  templateUrl: './doctor-my-profile.component.html',\r\n  styleUrls: ['./doctor-my-profile.component.css']\r\n})\r\nexport class DoctorMyProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLWhvbWUvZG9jdG9yLXByb2ZpbGUvZG9jdG9yLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { DoctorService } from 'src/app/services/doctor.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-profile',\r\n  templateUrl: './doctor-profile.component.html',\r\n  styleUrls: ['./doctor-profile.component.css']\r\n})\r\nexport class DoctorProfileComponent implements OnInit {\r\n  doctor: any;\r\n  loginForm: FormGroup;\r\n  change: boolean;\r\n  submitted: boolean;\r\n  constructor(private doctorService: DoctorService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private activatedRoute: ActivatedRoute,\r\n              private cookieService: CookieService) { }\r\n\r\n  ngOnInit() {\r\n    this.getDoctorInfo();\r\n  }\r\n\r\n  getDoctorInfo(){\r\n    this.doctorService.getDoctor().subscribe((data) => {\r\n      this.doctor = data;\r\n      this.loginForm = this.formBuilder.group({\r\n        name: [this.doctor.name, [Validators.required, ]],\r\n        surname: [this.doctor.surname, [Validators.required]],\r\n        email:  [this.doctor.email,[Validators.required, Validators.email]],\r\n        address:  [this.doctor.address,[Validators.required]],\r\n        city:  [this.doctor.city,[Validators.required]],\r\n        state:  [this.doctor.state,[Validators.required]],\r\n        phoneNumber:  [this.doctor.phoneNumber,[Validators.required]],\r\n        upin:  [this.doctor.upin,[Validators.required,Validators.minLength(13),Validators.maxLength(13)]]\r\n      });\r\n      this.change=true;\r\n    });\r\n  }\r\n  showChangePasswordForm(){\r\n    this.router.navigate(['../change-password']);\r\n  }\r\n  enableChangeInfo(){\r\n    this.change=!this.change;\r\n  }\r\n  cancelChanges(){\r\n    this.change=!this.change;\r\n    this.getDoctorInfo();\r\n  }\r\n  onSubmit(){\r\n    this.submitted = true;\r\n\t\tif (this.loginForm.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar doctor = {\r\n      id: JSON.parse(this.cookieService.get('user'))['id'],\r\n\t\t\temail: this.loginForm.controls.email.value,\r\n      name: this.loginForm.controls.name.value,\r\n      surname: this.loginForm.controls.surname.value,\r\n      address: this.loginForm.controls.address.value,\r\n      city: this.loginForm.controls.city.value,\r\n      state: this.loginForm.controls.state.value,\r\n      phoneNumber: this.loginForm.controls.phoneNumber.value,\r\n      upin: this.loginForm.controls.upin.value\r\n\t\t}\r\n\r\n    this.doctorService.changeDoctor(doctor).subscribe(\r\n      (data) => {this.change=!this.change; return;},\r\n      (error) => { alert(error);}\r\n    );\r\n\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLWhvbWUvbmV3LWFwcG9pbnRtZW50LXBhZ2UvbmV3LWFwcG9pbnRtZW50LXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { AppointmentService } from 'src/app/services/appointment.service';\r\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\r\n\r\n@Component({\r\n\tselector: 'app-new-appointment-page',\r\n\ttemplateUrl: './new-appointment-page.component.html',\r\n\tstyleUrls: ['./new-appointment-page.component.css']\r\n})\r\nexport class NewAppointmentPageComponent implements OnInit {\r\n\tdoctor: any;\r\n\tpatient: any;\r\n\ttypesOfExamination: any;\r\n\tordinations: any;\r\n\r\n\tstartAppointmentNow: any;\r\n\tform: FormGroup;\r\n\tsubmitted: boolean;\r\n\tprivate sub: any;\r\n\tconstructor(private formBuilder: FormBuilder,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate clinicService: ClinicService,\r\n\t\tprivate patientService: PatientService,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate appointmentService: AppointmentService) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.activatedRoute.queryParams.subscribe(params => {\r\n\t\t\tlet time = params['time'];\r\n\t\t\tif (time) {\r\n\t\t\t\tthis.startAppointmentNow = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.startAppointmentNow = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.sub = this.activatedRoute.params.subscribe(params => {\r\n\t\t\tlet patient_id = +params['patient_id'];\r\n\r\n\t\t\tthis.loadData(patient_id).then(() => {\r\n\t\t\t\tthis.createFormGroup();\r\n\t\t\t}, () => alert(\"Error loading data\"))\r\n\t\t});\r\n\t}\r\n\r\n\tloadData(patient_id) {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tthis.loadPatientInfo(patient_id).then(() => {\r\n\t\t\t\tthis.loadTypesOfExamination().then(() => {\r\n\t\t\t\t\tthis.loadOrdinations().then(() => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t}, () => reject());\r\n\t\t\t\t}, () => reject());\r\n\t\t\t}, () => reject());\r\n\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tloadPatientInfo(patient_id) {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tthis.patientService.getPatientById(patient_id).subscribe(\r\n\t\t\t\t(data) => { this.patient = data; resolve(); },\r\n\t\t\t\t(error) => { alert(error); reject(); }\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tloadTypesOfExamination() {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tlet clinic_id = this.userService.getUser().clinic_id;\r\n\t\t\tthis.clinicService.getTypesOfExamination(clinic_id).subscribe(\r\n\t\t\t\t(data) => { this.typesOfExamination = data; resolve(); },\r\n\t\t\t\t(error) => { alert(error); reject(); }\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tloadOrdinations() {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tlet clinic_id = this.userService.getUser().clinic_id;\r\n\t\t\tthis.clinicService.getOrdinations(clinic_id).subscribe(\r\n\t\t\t\t(data) => { this.ordinations = data; resolve(); },\r\n\t\t\t\t(error) => { alert(error); reject(); }\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tcreateFormGroup() {\r\n\t\tlet date;\r\n\t\tif (this.startAppointmentNow) {\r\n\t\t\tdate = new Date();\r\n\t\t}\r\n\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\tdateAndTime: [date, [Validators.required,]],\r\n\t\t\tduration: [, [Validators.required,]],\r\n\t\t\ttypeOfExamination: [, [Validators.required,]],\r\n\t\t\tordination: [, [Validators.required,]],\r\n\t\t\tprice: [, [Validators.required,]],\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tsetPriceFromTypeOfExamination() {\r\n\t\tlet type = this.typesOfExamination.find(element => element.id == this.form.controls.typeOfExamination.value);\r\n\t\tif (!type) {\r\n\t\t\tthis.form.controls['price'].setValue(\"\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.form.controls['price'].setValue(type.price);\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet doctor = this.userService.getUser();\r\n\t\tif (!doctor) {\r\n\t\t\talert(\"Invalid user\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet clinic_id = doctor.clinic_id;\r\n\r\n\t\tlet appointment = {\r\n\t\t\tstartingDateAndTime: this.form.controls.dateAndTime.value.getTime() / 1000,\r\n\t\t\tduration: this.form.controls.duration.value * 60 * 1000,\r\n\t\t\ttypeOfExamination: { id: this.form.controls.typeOfExamination.value },\r\n\t\t\tordination: { id: this.form.controls.ordination.value },\r\n\t\t\tprice: this.form.controls.price.value,\r\n\t\t\tclinic: { id: clinic_id },\r\n\t\t\tpatient: { id: this.patient.id },\r\n\t\t\tdoctors: [{id: this.userService.getUser().id}]\r\n\t\t}\r\n\r\n\t\tif (this.startAppointmentNow) {\r\n\t\t\tthis.appointmentService.startAppointment(appointment).subscribe(\r\n\t\t\t\t(data) => { alert(\"Appointment started\") /* rutirati na stranicu za evidecniju o pregledu */ },\r\n\t\t\t\t(error) => { alert(error); }\r\n\t\t\t);\r\n\t\t} else {\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\tcancelChanges(){\r\n\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.sub.unsubscribe();\r\n\t}\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLWhvbWUvbmV3LXZhY2F0aW9uLXJlcXVlc3QvbmV3LXZhY2F0aW9uLXJlcXVlc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { VacationService } from 'src/app/services/vacation.service';\r\n\r\n@Component({\r\n  selector: 'app-new-vacation-request',\r\n  templateUrl: './new-vacation-request.component.html',\r\n  styleUrls: ['./new-vacation-request.component.css']\r\n})\r\nexport class NewVacationRequestComponent implements OnInit {\r\n\r\n  doctor: any;\r\n\r\n  form: FormGroup;\r\n\tsubmitted: boolean;\r\n\tprivate sub: any;\r\n\tconstructor(private formBuilder: FormBuilder,\r\n\t\tprivate userService: UserService,\r\n    private router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate vacationService: VacationService) { }\r\n\r\n  ngOnInit() {\r\n    this.createFormGroup();\r\n  }\r\n\r\n  createFormGroup() {\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\tstartingDateAndTime: [, [Validators.required,]],\r\n\t\t\tendingDateAndTime: [, [Validators.required,]],\r\n\t\t});\r\n\r\n  }\r\n  \r\n  onSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet staff = this.userService.getUser();\r\n\t\tif (!staff) {\r\n\t\t\talert(\"Invalid user\");\r\n\t\t\treturn;\r\n    \t}\r\n\r\n\t\tlet vacation = {\r\n\t\t\tstartDate: this.form.controls.startingDateAndTime.value.getTime() / 1000,\r\n\t\t\tendDate: this.form.controls.endingDateAndTime.value.getTime() / 1000,\r\n\t\t\tstaffId: this.userService.getUser().id\r\n\t\t}\r\n\t\t\r\n\t\talert(vacation.startDate);\r\n    \r\n    this.vacationService.sendRequest(vacation).subscribe(\r\n      (data) => { this.router.navigate(['../profile'], { relativeTo: this.activatedRoute }); },\r\n      (error) => { alert(error); }\r\n    );\r\n  }\r\n  \r\n\tcancelChanges(){\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLWhvbWUvcGF0aWVudC1saXN0aW5nL3BhdGllbnQtbGlzdGluZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n\tselector: 'app-patient-listing',\r\n\ttemplateUrl: './patient-listing.component.html',\r\n\tstyleUrls: ['./patient-listing.component.css']\r\n})\r\nexport class PatientListingComponent implements OnInit {\r\n\t@ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\tpatientsHeaders = ['Name', 'Surname', 'UPIN', 'E-mail', 'City'];\r\n\tpatients: any;\r\n\tfilteredPatients: any;\r\n\tnavigationSubscription: any;\r\n\r\n\tmodalData: {\r\n\t\tpatientID: any;\r\n\t\tpatientName: any;\r\n\t\taction: string;\r\n\t};\r\n\tsearchForm: FormGroup;\r\n\tfilterForm: FormGroup;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private patientService: PatientService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate modal: NgbModal) { }\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.searchForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tsurname: [\"\"],\r\n\t\t\tupin: [\"\"]\r\n\t\t});\r\n\t\tthis.filterForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tsurname: [\"\"],\r\n\t\t\tupin: [\"\"]\r\n\t\t});\r\n\t\tthis.getPatients();\r\n\t\tthis.onFilterChanges();\r\n\t}\r\n\r\n\tgetPatients() {\r\n\t\tthis.patientService.getClinicPatients().subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.patients = data;\r\n\t\t\t\tthis.filteredPatients = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tonSearch() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tvar patient = {\r\n\t\t\tname: this.searchForm.controls.name.value ? this.searchForm.controls.name.value : \"\",\r\n\t\t\tsurname: this.searchForm.controls.surname.value ? this.searchForm.controls.surname.value : \"\",\r\n\t\t\tupin: this.searchForm.controls.upin.value ? this.searchForm.controls.upin.value : \"\"\r\n\t\t}\r\n\r\n\t\tthis.patientService.searchPatients(patient).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.patients = data;\r\n\t\t\t\tthis.filteredPatients = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tonFilterChanges() {\r\n\t\tthis.filterForm.valueChanges.subscribe(filters => {\r\n\t\t\tthis.filteredPatients = this.filterPatients(filters);\r\n\t\t})\r\n\t}\r\n\r\n\tfilterPatients(filters) {\r\n\t\treturn this.patients.filter(patient =>\r\n\t\t\tpatient.name.toLowerCase().indexOf(filters.name.toLowerCase()) !== -1 &&\r\n\t\t\tpatient.surname.toLowerCase().indexOf(filters.surname.toLowerCase()) !== -1 &&\r\n\t\t\tpatient.upin.indexOf(filters.upin) !== -1\r\n\t\t);\r\n\t}\r\n\r\n\tShowMedicalRecord(patient) {\r\n\t\tthis.patientService.checkAuthorityToViewMedicalRecord(patient.id).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tlet action = \"Opened\";\r\n\t\t\t\tlet patientID = patient.id;\r\n\t\t\t\tlet patientName = patient.name + \" \" + patient.surname;\r\n\t\t\t\tthis.modalData = { patientID, patientName, action };\r\n\t\t\t\tthis.modal.open(this.modalContent, { size: 'xl' });\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\tclose() {\r\n\t\tthis.modal.dismissAll();\r\n\t}\r\n\tstartAppointment(patient_id) {\r\n\t\tthis.router.navigate([`../new_appointment/${patient_id}`], { queryParams: { time: 'now' }, relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-header',\r\n\ttemplateUrl: './header.component.html',\r\n\tstyleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\t\r\n\tconstructor(public userService: UserService,\r\n\t\tprivate router: Router) { }\r\n\r\n\tngOnInit() {\r\n\t\t\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.userService.logout();\r\n\t}\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n})\r\nexport class DialogComponent implements OnInit {\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n  @Input() userInput: boolean;\r\n  submitted: boolean;\r\n  form: FormGroup;\r\n  constructor(private activeModal: NgbActiveModal,private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      explanation: ['', [Validators.required ]]\r\n    });\r\n  }\r\n\r\n  public decline() {\r\n    var response={\r\n      explanation: \"\",\r\n      submited:false\r\n    }\r\n    this.activeModal.close(response);\r\n  }\r\n\r\n  public accept() {\r\n    var response={\r\n      explanation: \"\",\r\n      submited:true\r\n    }\r\n    this.activeModal.close(response);\r\n  }\r\n  public onSubmit(){\r\n    this.submitted=true;\r\n    var response={\r\n      explanation: this.form.controls.explanation.value,\r\n      submited:true\r\n    }\r\n    this.activeModal.close(response);\r\n    \r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\tloginForm: FormGroup;\r\n\tloading = false;\r\n\tsubmitted = false;\r\n\treturnUrl: string = '';\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t\tprivate userService: UserService\r\n\t\t// private authenticationService: AuthenticationService,\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.loginForm = this.formBuilder.group({\r\n\t\t\temail: ['', [Validators.required, Validators.email]],\r\n\t\t\tpassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(24)]]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.loginForm.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.loading = true;\r\n\t\tthis.userService.login(this.loginForm.controls.email.value, this.loginForm.controls.password.value)\r\n\t\t\t.pipe()\r\n\t\t\t.subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\t//this.router.navigate([this.returnUrl]);\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\talert(error);\r\n\t\t\t\t});\r\n\t}\r\n\r\n}\r\n","export default \".container {\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9udXJzZS1ob21lL251cnNlLWNhbGVuZGFyL251cnNlLWNhbGVuZGFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL251cnNlLWhvbWUvbnVyc2UtY2FsZW5kYXIvbnVyc2UtY2FsZW5kYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG59Il19 */\";","import { CookieService } from 'ngx-cookie-service';\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours\r\n} from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView,\r\n  DAYS_OF_WEEK\r\n} from 'angular-calendar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NurseService } from 'src/app/services/nurse.service';\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n@Component({\r\n  selector: 'app-nurse-calendar',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './nurse-calendar.component.html',\r\n  styleUrls: ['./nurse-calendar.component.css']\r\n})\r\nexport class NurseCalendarComponent implements OnInit {\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n  daystart: Number;\r\n  dayend: Number;\r\n  modalData: {\r\n    action: string;\r\n    event: CalendarEvent;\r\n  };\r\n  excludeDays: number[] = [0, 6];\r\n\r\n  weekStartsOn = DAYS_OF_WEEK.SUNDAY;\r\n\r\n  constructor(private nurseService: NurseService,\r\n\t\tprivate router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    private cookieService: CookieService){}\r\n\r\n  ngOnInit() {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    this.daystart = parseInt(user.shiftStart);\r\n    this.dayend = parseInt(user.shiftEnd);\r\n    this.nurseService.getVacations().subscribe(\r\n      (data) => {\r\n       this.populateCalendarEvents(data);\r\n      },\r\n      (error) => { \r\n        alert(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  actions: CalendarEventAction[] = [\r\n    {\r\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\r\n      a11yLabel: 'Edit',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Edited', event);\r\n      }\r\n    },\r\n    {\r\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\r\n      a11yLabel: 'Delete',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.events = this.events.filter(iEvent => iEvent !== event);\r\n        this.handleEvent('Deleted', event);\r\n      }\r\n    }\r\n  ];\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  events: CalendarEvent[] = [];\r\n\r\n  activeDayIsOpen: boolean = false;\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    this.events = this.events.map(iEvent => {\r\n      if (iEvent === event) {\r\n        return {\r\n          ...event,\r\n          start: newStart,\r\n          end: newEnd\r\n        };\r\n      }\r\n      return iEvent;\r\n    });\r\n    this.handleEvent('Dropped or resized', event);\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    this.modalData = { event, action };\r\n    this.modal.open(this.modalContent, { size: 'lg' });\r\n  }\r\n  deleteEvent(eventToDelete: CalendarEvent) {\r\n    this.events = this.events.filter(event => event !== eventToDelete);\r\n  }\r\n\r\n  setView(view: CalendarView) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n  // TODO: Izdvojiti operacije, preglede i godisnje odmore po bojama i u kodu\r\n  populateCalendarEvents(data){\r\n    data.forEach(appointment => {\r\n      var  eventToAdd = {\r\n        start: new Date(appointment.startDate*1000),\r\n        end: new Date(appointment.endDate*1000),\r\n        title: \"Vacation\",\r\n        color: colors.blue,\r\n        actions: this.actions\r\n      }\r\n      this.events.push(eventToAdd);\r\n    });\r\n  }\r\n  \r\n\ttimeConverter(a){\r\n\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes(); \r\n\t\tvar sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n\t\tvar time = date + '. ' + month + ' ' + year + '. ' + hour + ':' + min;\r\n\t\treturn time;\r\n    }\r\n    close(){\r\n      this.modal.dismissAll();\r\n    }\r\n\r\n}\r\n","export default \"li+li { border-left: 1px solid #0000FF }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9udXJzZS1ob21lL251cnNlLWhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLCtCQUErQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbnVyc2UtaG9tZS9udXJzZS1ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsaStsaSB7IGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzAwMDBGRiB9XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nurse-home',\r\n  templateUrl: './nurse-home.component.html',\r\n  styleUrls: ['./nurse-home.component.css']\r\n})\r\nexport class NurseHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbnVyc2UtaG9tZS9udXJzZS1wYXRpZW50LWxpc3RpbmcvbnVyc2UtcGF0aWVudC1saXN0aW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MedicalRecordComponent } from 'src/app/components/patient-profile/medical-record/medical-record.component';\r\n\r\n@Component({\r\n\tselector: 'app-nurse-patient-listing',\r\n\ttemplateUrl: './nurse-patient-listing.component.html',\r\n\tstyleUrls: ['./nurse-patient-listing.component.css']\r\n})\r\nexport class NursePatientListingComponent implements OnInit {\r\n\t@ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n\tsortingOption: any;\r\n\tpatientsHeaders = ['Name', 'Surname', 'UPIN', 'E-mail', 'City'];\r\n\tpatients: any;\r\n\tfilteredPatients: any;\r\n\tnavigationSubscription: any;\r\n\r\n\tmodalData: {\r\n\t\tpatientID: any;\r\n\t\tpatientName: any;\r\n\t\taction: string;\r\n\t};\r\n\r\n\tsearchForm: FormGroup;\r\n\tfilterForm: FormGroup;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private patientService: PatientService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate modal: NgbModal) { }\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.searchForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tsurname: [\"\"],\r\n\t\t\tupin: [\"\"]\r\n\t\t});\r\n\t\tthis.filterForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tsurname: [\"\"],\r\n\t\t\tupin: [\"\"]\r\n\t\t});\r\n\t\tthis.getPatients();\r\n\t\tthis.onFilterChanges();\r\n\t}\r\n\r\n\tgetPatients() {\r\n\t\tthis.patientService.getClinicPatients().subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.patients = data;\r\n\t\t\t\tthis.filteredPatients = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tonSearch() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tvar patient = {\r\n\t\t\tname: this.searchForm.controls.name.value ? this.searchForm.controls.name.value : \"\",\r\n\t\t\tsurname: this.searchForm.controls.surname.value ? this.searchForm.controls.surname.value : \"\",\r\n\t\t\tupin: this.searchForm.controls.upin.value ? this.searchForm.controls.upin.value : \"\"\r\n\t\t}\r\n\r\n\t\tthis.patientService.searchPatients(patient).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.patients = data;\r\n\t\t\t\tthis.filteredPatients = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tonFilterChanges() {\r\n\t\tthis.filterForm.valueChanges.subscribe(filters => {\r\n\t\t\tthis.filteredPatients = this.filterPatients(filters);\r\n\t\t})\r\n\t}\r\n\r\n\tfilterPatients(filters) {\r\n\t\treturn this.patients.filter(patient =>\r\n\t\t\tpatient.name.toLowerCase().indexOf(filters.name.toLowerCase()) !== -1 &&\r\n\t\t\tpatient.surname.toLowerCase().indexOf(filters.surname.toLowerCase()) !== -1 &&\r\n\t\t\tpatient.upin.indexOf(filters.upin) !== -1\r\n\t\t);\r\n\t}\r\n\r\n\tShowMedicalRecord(patient) {\r\n\t\t//TODO\r\n\t\tlet action = \"Opened\";\r\n\t\tlet patientID = patient.id;\r\n\t\tlet patientName = patient.name + \" \" + patient.surname;\r\n\t\tthis.modalData = { patientID, patientName, action };\r\n\t\tthis.modal.open(this.modalContent, { size: 'xl' });\r\n\r\n\t}\r\n\tclose() {\r\n\t\tthis.modal.dismissAll();\r\n\t}\r\n\ttimeConverter(a) {\r\n\t\ta = new Date(a * 1000)\r\n\t\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\r\n\t\tvar sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n\t\tvar time = date + '. ' + month + ' ' + year + '. ' + hour + ':' + min;\r\n\t\treturn time;\r\n\t}\r\n\tsortName() {\r\n\t\tthis.sortingOption = \"name\";\r\n\t\tthis.sortPatients();\r\n\t}\r\n\tsortUpin() {\r\n\t\tthis.sortingOption = \"upin\";\r\n\t\tthis.sortPatients();\r\n\t}\r\n\tsortAddress() {\r\n\t\tthis.sortingOption = \"address\";\r\n\t\tthis.sortPatients();\r\n\t}\r\n\tsortCity() {\r\n\t\tthis.sortingOption = \"city\";\r\n\t\tthis.sortPatients();\r\n\t}\r\n\tsortState() {\r\n\t\tthis.sortingOption = \"state\";\r\n\t\tthis.sortPatients();\r\n\t}\r\n\r\n\tsortPatients() {\r\n\t\tswitch (this.sortingOption) {\r\n\t\t\tcase \"name\": {\r\n\t\t\t\tthis.patients.sort((a, b) => (a.name > b.name) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"address\": {\r\n\t\t\t\tthis.patients.sort((a, b) => (a.address > b.address) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"city\": {\r\n\t\t\t\tthis.patients.sort((a, b) => (a.city > b.city) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"state\": {\r\n\t\t\t\tthis.patients.sort((a, b) => (a.state > b.state) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"upin\": {\r\n\t\t\t\tthis.patients.sort((a, b) => (a.upin > b.upin) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tthis.patients.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbnVyc2UtaG9tZS9udXJzZS1wcm9maWxlL251cnNlLXBlcnNvbmFsLXByb2ZpbGUvbnVyc2UtcGVyc29uYWwtcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { NurseService } from 'src/app/services/nurse.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nurse-personal-profile',\r\n  templateUrl: './nurse-personal-profile.component.html',\r\n  styleUrls: ['./nurse-personal-profile.component.css']\r\n})\r\nexport class NursePersonalProfileComponent implements OnInit {\r\n\r\n  nurse: any;\r\n  form: FormGroup;\r\n  change: boolean;\r\n  submitted: boolean;\r\n  constructor(private nurseService: NurseService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getNurseInfo();\r\n  }\r\n  getNurseInfo(){\r\n    this.nurseService.getNurse().subscribe(\r\n      (data) => {\r\n        this.nurse=data;\r\n        this.form = this.formBuilder.group({\r\n          name: [this.nurse.name, [Validators.required, ]],\r\n          surname: [this.nurse.surname, [Validators.required]],\r\n          email:  [this.nurse.email,[Validators.required, Validators.email]],\r\n          address:  [this.nurse.address,[Validators.required]],\r\n          city:  [this.nurse.city,[Validators.required]],\r\n          state:  [this.nurse.state,[Validators.required]],\r\n          phoneNumber:  [this.nurse.phoneNumber,[Validators.required]],\r\n          upin:  [this.nurse.upin,[Validators.required,Validators.minLength(13),Validators.maxLength(13)]]\r\n        });\r\n        this.change=true;\r\n      },\r\n      (error) => {\r\n        alert(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  enableChangeInfo(){\r\n    this.change=!this.change;\r\n  }\r\n\r\n  cancelChanges(){\r\n    this.change=!this.change;\r\n    this.getNurseInfo();\r\n  }\r\n\r\n  showChangePasswordForm(){\r\n    this.router.navigate(['../change-password']);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted = true;\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar nurse = {\r\n      id: this.nurse.id,\r\n\t\t\temail: this.form.controls.email.value,\r\n      name: this.form.controls.name.value,\r\n      surname: this.form.controls.surname.value,\r\n      address: this.form.controls.address.value,\r\n      city: this.form.controls.city.value,\r\n      state: this.form.controls.state.value,\r\n      phoneNumber: this.form.controls.phoneNumber.value,\r\n      upin: this.form.controls.upin.value\r\n\t\t}\r\n\r\n    this.nurseService.changeNurse(nurse).subscribe(\r\n      (data) => {this.change=!this.change; return;},\r\n      (error) => { alert(error);}\r\n    );\r\n\r\n  }\r\n}\r\n","export default \"li+li { border-left: 1px solid #0000FF }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9udXJzZS1ob21lL251cnNlLXByb2ZpbGUvbnVyc2UtcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVEsK0JBQStCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9udXJzZS1ob21lL251cnNlLXByb2ZpbGUvbnVyc2UtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGkrbGkgeyBib3JkZXItbGVmdDogMXB4IHNvbGlkICMwMDAwRkYgfVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nurse-profile',\r\n  templateUrl: './nurse-profile.component.html',\r\n  styleUrls: ['./nurse-profile.component.css']\r\n})\r\nexport class NurseProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbnVyc2UtaG9tZS9wcmVzY3JpcHRpb24tbGlzdGluZy9wcmVzY3JpcHRpb24tbGlzdGluZy5jb21wb25lbnQuY3NzIn0= */\";","import { DialogService } from './../../../services/dialog.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-prescription-listing',\r\n  templateUrl: './prescription-listing.component.html',\r\n  styleUrls: ['./prescription-listing.component.css']\r\n})\r\nexport class PrescriptionListingComponent implements OnInit {\r\n  prescriptionsHeader = ['Doctor name', 'Doctor surname', 'Medication'];\r\n\tprescriptions: any;\r\n\tnavigationSubscription: any;\r\n\tclinicID: any;\r\n\tclinicName: any;\r\n\r\n\tsearchForm: FormGroup;\r\n\tsubmitted = false;\r\n\r\n\tconstructor(private clinicService: ClinicService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate confirmationDialogService: DialogService\r\n\t) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\t\t\tthis.getPrescriptions();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.activatedRoute.params.subscribe((params) => {\r\n\t\t\tthis.clinicID = params.id;\r\n\t\t\tthis.clinicName = params.name;\r\n\t\t});\r\n\r\n\t\tthis.searchForm = this.formBuilder.group({\r\n\t\t\tname: [\"\"],\r\n\t\t\tsurname: [\"\"],\r\n\t\t\tmedication: [\"\"]\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetPrescriptions() {\r\n\t\tthis.clinicID = this.userService.getUser().clinic_id;\r\n\t\tthis.clinicService.getPrescriptions(this.clinicID).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t  this.prescriptions = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  alert(error);\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\r\n\tapprovePrescription(prescription) {\r\n\t\tthis.confirmationDialogService.confirm('Please confirm', 'Are you sure you want to approve prescription for medication: ' + prescription.medication_name + ' ?', false)\r\n\t\t.then((confirmed) => {\r\n\t\t\tif (confirmed.submited) {\r\n\t\t\t\tthis.clinicService.approvePrescription(prescription).subscribe(\r\n\t\t\t\t\t(data) => {\r\n\t\t\t\t\tthis.getPrescriptions();\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\talert(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonSearch(){\r\n\t\tthis.submitted = true;\r\n\r\n\t\tvar prescription = {\r\n\t\t\tname: this.searchForm.controls.name.value ? this.searchForm.controls.name.value: \"\",\r\n\t\t\tsurname: this.searchForm.controls.surname.value ? this.searchForm.controls.surname.value: \"\",\r\n\t\t\tmedication: this.searchForm.controls.medication.value ? this.searchForm.controls.medication.value: \"\",\r\n\t\t\tclinic_id: this.userService.getUser().clinic_id\r\n\t\t}\r\n\r\n\t\tthis.clinicService.searchPrescriptions(prescription).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t  this.prescriptions = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  alert(error);\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1ob21lL3BhdGllbnQtY2xpbmljLWxpc3RpbmcvcGF0aWVudC1jbGluaWMtbGlzdGluZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ClinicService } from 'src/app/services/clinic.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-clinic-listing',\r\n  templateUrl: './patient-clinic-listing.component.html',\r\n  styleUrls: ['./patient-clinic-listing.component.css']\r\n})\r\nexport class PatientClinicListingComponent implements OnInit {\r\n\r\n  clinics: any;\r\n  clinicHeaders = ['Name', 'Address', 'City', 'State', 'Description'];\r\n  navigationSubscription: any;\r\n  sortingOption: any;\r\n\r\n  constructor(\r\n    private patientService: PatientService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.getClinics();\r\n\t\t\t}\r\n\t\t});\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getClinics() {\r\n\t\tthis.patientService.getClinics().subscribe((data) => {\r\n      this.clinics = data;\r\n\t\t\tthis.clinics.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t});\r\n  }\r\n\r\n  showClinicInfo(clinic: any) {\r\n\t\tthis.router.navigate(['../showClinicInfo'], { relativeTo: this.activatedRoute, state: {data: clinic}});\r\n\t}\r\n\r\n  sortName() {\r\n    this.sortingOption = \"name\";\r\n    this.sortClinics();\r\n  }\r\n  sortAddress() {\r\n    this.sortingOption = \"address\";\r\n    this.sortClinics();\r\n  }\r\n  sortCity() {\r\n    this.sortingOption = \"city\";\r\n    this.sortClinics();\r\n  }\r\n  sortState() {\r\n    this.sortingOption = \"state\";\r\n    this.sortClinics();\r\n  }\r\n\r\n  sortClinics() {\r\n\t\tswitch(this.sortingOption) {\r\n\t\t\tcase \"name\": {\r\n\t\t\t\tthis.clinics.sort((a, b) => (a.name > b.name) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"address\": {\r\n\t\t\t\tthis.clinics.sort((a, b) => (a.address > b.address) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"city\": {\r\n\t\t\t\tthis.clinics.sort((a, b) => (a.city > b.city) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"state\": {\r\n\t\t\t\tthis.clinics.sort((a, b) => (a.state > b.state) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tthis.clinics.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n  ngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1ob21lL3BhdGllbnQtaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-patient-home',\r\n  templateUrl: './patient-home.component.html',\r\n  styleUrls: ['./patient-home.component.css']\r\n})\r\nexport class PatientHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1ob21lL3BhdGllbnQtcGVuZGluZy1hcHBvaW50bWVudHMtbGlzdGluZy9wYXRpZW50LXBlbmRpbmctYXBwb2ludG1lbnRzLWxpc3RpbmcuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-patient-pending-appointments-listing',\r\n\ttemplateUrl: './patient-pending-appointments-listing.component.html',\r\n\tstyleUrls: ['./patient-pending-appointments-listing.component.css']\r\n})\r\nexport class PatientPendingAppointmentsListingComponent implements OnInit {\r\n\r\n\tappointments: any;\r\n\tappointmentHeaders = ['Clinic', 'Ordination name', 'Ord. number', 'Type', 'Date and time', 'Duration (minutes)'];\r\n\tnavigationSubscription: any;\r\n\tsortingOption: any;\r\n\r\n\tconstructor(\r\n\t\tprivate patientService: PatientService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute\r\n\t) {\r\n\t\tthis.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n\t\t\tif (e instanceof NavigationEnd) {\r\n\t\t\t\tthis.getPendingAppointments();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tgetPendingAppointments() {\r\n\t\tthis.patientService.getPendingAppointments().subscribe((data) => {\r\n\t\t\tthis.appointments = data;\r\n\t\t\tfor (const [i, value] of this.appointments.entries()) {\r\n\t\t\t\tthis.appointments[i].formatedDateAndTime = this.timeConverter(this.appointments[i].startingDateAndTime);\r\n\t\t\t}\r\n\t\t\tthis.appointments.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsortClinicName() {\r\n\t\tthis.sortingOption = \"clinicName\";\r\n\t\tthis.sortPendingAppointments();\r\n\t}\r\n\tsortType() {\r\n\t\tthis.sortingOption = \"type\";\r\n\t\tthis.sortPendingAppointments();\r\n\t}\r\n\tsortDuration() {\r\n\t\tthis.sortingOption = \"duration\";\r\n\t\tthis.sortPendingAppointments();\r\n\t}\r\n\tsortDate() {\r\n\t\tthis.sortingOption = \"date\";\r\n\t\tthis.sortPendingAppointments();\r\n\t}\r\n\r\n\tsortPendingAppointments() {\r\n\t\tswitch (this.sortingOption) {\r\n\t\t\tcase \"clinicName\": {\r\n\t\t\t\tthis.appointments.sort((a, b) => (a.clinic.name > b.clinic.name) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"type\": {\r\n\t\t\t\tthis.appointments.sort((a, b) => (a.typeOfExamination.name > b.typeOfExamination.name) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"duration\": {\r\n\t\t\t\tthis.appointments.sort((a, b) => (a.duration > b.duration) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"date\": {\r\n\t\t\t\tthis.appointments.sort((a, b) => (a.startingDateAndTime > b.startingDateAndTime) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tthis.appointments.sort((a, b) => (a.id > b.id) ? 1 : -1)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttimeConverter(UNIX_timestamp) {\r\n\t\tvar a = new Date(UNIX_timestamp * 1000);\r\n\t\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\r\n\t\tvar sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n\t\tvar time = date + '. ' + month + ' ' + year + '. ' + hour + ':' + min + ':' + sec;\r\n\t\treturn time;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.navigationSubscription) {\r\n\t\t\tthis.navigationSubscription.unsubscribe();\r\n\t\t}\r\n\t}\r\n\tshowClinicInfo(info: any){\r\n\t\t//to do\r\n\t}\r\n}\r\n","export default \".input-display{\\r\\n    border-top: 0;\\r\\n    border-bottom: 0;\\r\\n    border-left:0 ; \\r\\n    height: 2em;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXRpZW50LXByb2ZpbGUvbWVkaWNhbC1yZWNvcmQvbWVkaWNhbC1yZWNvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1wcm9maWxlL21lZGljYWwtcmVjb3JkL21lZGljYWwtcmVjb3JkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5wdXQtZGlzcGxheXtcclxuICAgIGJvcmRlci10b3A6IDA7XHJcbiAgICBib3JkZXItYm90dG9tOiAwO1xyXG4gICAgYm9yZGVyLWxlZnQ6MCA7IFxyXG4gICAgaGVpZ2h0OiAyZW07XHJcbn0iXX0= */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n@Component({\r\n  selector: 'app-medical-record',\r\n  templateUrl: './medical-record.component.html',\r\n  styleUrls: ['./medical-record.component.css']\r\n})\r\nexport class MedicalRecordComponent implements OnInit {\r\n @Input() patientID: string;\r\n @Input() patientName: string;\r\n  medicalRecord: any;\r\n  constructor(private patientService: PatientService,\r\n\t\tprivate router: Router,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate userService: UserService,) { }\r\n\r\n  ngOnInit() {\r\n    this.getMedicalRecord();\r\n  }\r\n  getMedicalRecord(){\r\n    this.patientService.getMedicalRecord(this.patientID).subscribe(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.medicalRecord = data;\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t)\r\n  }\r\n  timeConverter(a){\r\n    a=new Date(a*1000)\r\n\t\tvar months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\t\tvar year = a.getFullYear();\r\n\t\tvar month = months[a.getMonth()];\r\n\t\tvar date = a.getDate();\r\n\t\tvar hour = a.getHours();\r\n\t\tvar min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes(); \r\n\t\tvar sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n\t\tvar time = date + '. ' + month + ' ' + year + '. ' + hour + ':' + min;\r\n\t\treturn time;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1wcm9maWxlL3BhdGllbnQtcGVyc29uYWwtcHJvZmlsZS9wYXRpZW50LXBlcnNvbmFsLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { PatientService } from 'src/app/services/patient.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-patient-personal-profile',\r\n  templateUrl: './patient-personal-profile.component.html',\r\n  styleUrls: ['./patient-personal-profile.component.css']\r\n})\r\nexport class PatientPersonalProfileComponent implements OnInit {\r\n  patient: any;\r\n  form: FormGroup;\r\n  change: boolean;\r\n  submitted: boolean;\r\n  constructor(private patientService: PatientService,\r\n              private formBuilder: FormBuilder, \r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getPatientInfo();\r\n  }\r\n  getPatientInfo(){\r\n    this.patientService.getPatient().subscribe(\r\n      (data) => {\r\n        this.patient=data;\r\n        this.form = this.formBuilder.group({\r\n          name: [this.patient.name, [Validators.required, ]],\r\n          surname: [this.patient.surname, [Validators.required]],\r\n          email:  [this.patient.email,[Validators.required, Validators.email]],\r\n          address:  [this.patient.address,[Validators.required]],\r\n          city:  [this.patient.city,[Validators.required]],\r\n          state:  [this.patient.state,[Validators.required]],\r\n          phoneNumber:  [this.patient.phoneNumber,[Validators.required]],\r\n          upin:  [this.patient.upin,[Validators.required,Validators.minLength(13),Validators.maxLength(13)]]\r\n        });\r\n        this.change=true;\r\n      },\r\n      (error) => {\r\n        alert(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  enableChangeInfo(){\r\n    this.change=!this.change;\r\n  }\r\n\r\n  cancelChanges(){\r\n    this.change=!this.change;\r\n    this.getPatientInfo();\r\n  }\r\n\r\n  showChangePasswordForm(){\r\n    this.router.navigate(['../change-password']);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted = true;\r\n\t\tif (this.form.invalid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar patient = {\r\n      id: this.patient.id,\r\n\t\t\temail: this.form.controls.email.value,\r\n      name: this.form.controls.name.value,\r\n      surname: this.form.controls.surname.value,\r\n      address: this.form.controls.address.value,\r\n      city: this.form.controls.city.value,\r\n      state: this.form.controls.state.value,\r\n      phoneNumber: this.form.controls.phoneNumber.value,\r\n      upin: this.form.controls.upin.value\r\n\t\t}\r\n\r\n    this.patientService.changePatient(patient).subscribe(\r\n      (data) => {this.change=!this.change; return;},\r\n      (error) => { alert(error);}\r\n    );\r\n\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1wcm9maWxlL3BhdGllbnQtcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-patient-profile',\r\n  templateUrl: './patient-profile.component.html',\r\n  styleUrls: ['./patient-profile.component.css']\r\n})\r\nexport class PatientProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { MustMatch } from './must-match.validator';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\tloading = false;\r\n\tsubmitted = false;\r\n\treturnUrl: string = '';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t\tprivate userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, ]],\r\n      surname: ['', [Validators.required]],\r\n      email:  ['',[Validators.required, Validators.email]],\r\n      address:  ['',[Validators.required]],\r\n      city:  ['',[Validators.required]],\r\n      state:  ['',[Validators.required]],\r\n      phoneNumber:  ['',[Validators.required]],\r\n      upin:  ['',[Validators.required,Validators.minLength(13),Validators.maxLength(13)]],\r\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(24)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    var registerRequest = {\r\n\t\t\temail: this.loginForm.controls.email.value,\r\n      password: this.loginForm.controls.password.value,\r\n      name: this.loginForm.controls.name.value,\r\n      surname: this.loginForm.controls.surname.value,\r\n      address: this.loginForm.controls.address.value,\r\n      city: this.loginForm.controls.city.value,\r\n      state: this.loginForm.controls.state.value,\r\n      phoneNumber: this.loginForm.controls.phoneNumber.value,\r\n      upin: this.loginForm.controls.upin.value\r\n\t\t}\r\n\r\n    this.loading = true;\r\n    this.userService.register(registerRequest)\r\n      .pipe()\r\n      .subscribe(\r\n        data => {\r\n          //this.router.navigate([this.returnUrl]);\r\n        },\r\n        error => {\r\n          this.loading = false;\r\n          alert(error);\r\n        });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from '../services/user.service';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n\tconstructor(private userService: UserService,\r\n\t\tprivate router: Router) { }\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\t\tconst currentUser = this.userService.checkLoggedIn();\r\n        if (currentUser) {\r\n            // check if route is restricted by role\r\n            if (route.data.roles){\r\n                currentUser.roles.forEach(role => {\r\n                    if (route.data.roles.indexOf(role) === -1) {\r\n                        // role not authorised so redirect to home page\r\n                        alert('Not authorised!')\r\n                        if (currentUser.roles.indexOf('PATIENT')!= -1){\r\n\t\t\t\t\t\t\tthis.router.navigate(['/patient']);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.router.navigate(['/']);\r\n\t\t\t\t\t\t}\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            \r\n\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n\t\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanDeactivate, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ChangePasswordComponent } from '../components/change-password/change-password.component';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ChangePasswordDeactivateService implements CanDeactivate<ChangePasswordComponent>\r\n{\r\n    component: Object;\r\n    route: ActivatedRouteSnapshot;\r\n \r\n   constructor(){\r\n   }\r\n \r\n   canDeactivate(component: ChangePasswordComponent,\r\n                route: ActivatedRouteSnapshot, \r\n                state: RouterStateSnapshot,\r\n                nextState: RouterStateSnapshot) : Observable<boolean> | Promise<boolean> | boolean {\r\n        \r\n        return component.canExit();\r\n \r\n  }\r\n  \r\n}","import { Injectable } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n\tconstructor(private userService: UserService,\r\n\t\tprivate http: HttpClient) { }\r\n\r\n\tstartAppointment(appointment) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/appointment/startAppointment', appointment, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tcreateAvailableAppointment(appointment) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/appointment/createAvailableAppointment', appointment, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tgetClinicAvailableAppointments(clinic_id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/appointment/getClinicAvailableAppointments/${clinic_id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tdeleteAvailableAppointment(appointment_id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/appointment/deleteAvailableAppointment/${appointment_id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from './user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClinicAdminService {\r\n\r\n  constructor(private cookieService: CookieService,\r\n    private userService: UserService,\r\n    private http: HttpClient,\r\n    private router: Router) { }\r\n\r\n  getAdminC() {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/clinicAdmin/getAdminC/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  changeAdminC(adminC){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.put(`/api/clinicAdmin/change`, JSON.stringify(adminC), { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  getClinic(clinicID){\r\n    let headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/admin/getClinic/${clinicID}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n\r\n  getVacationRequests(){\r\n    let user = this.userService.getUser();\r\n    let clinic_id = user[\"clinic_id\"];\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n    return this.http.get(`/api/vacations/requests/${clinic_id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n\r\n  approveVacationRequest(request){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.put(`/api/vacations/approve/${request.id}`, JSON.stringify(request), { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n\r\n  rejectVacationRequest(request,message){\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.put(`/api/vacations/deny/${request.id}`,JSON.stringify(message), { headers: headers, observe: 'response' })\r\n    .pipe(\r\n      map(response => {\r\n        return response.body;\r\n      }),\r\n      catchError((response) => {\r\n        return throwError(response.error);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { map, catchError } from 'rxjs/operators'\r\nimport { throwError } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClinicCenterAdminService {\r\n\r\n  constructor(private cookieService: CookieService,\r\n              private userService: UserService,\r\n              private http: HttpClient,\r\n              private router: Router) { }\r\n\r\n  getAdminKc() {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n    return this.http.get(`/api/admin/getAdminKc/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  changeAdminKc(admin) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.put(`/api/admin/change`, JSON.stringify(admin), { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteClinicAdmin(admin){\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n    return this.http.delete(`/api/clinicAdmin/delete/${admin.id}`, { headers: headers, observe: 'response' })\r\n    .pipe(\r\n      map(response => {\r\n        return response.body;\r\n      }),\r\n      catchError((response) => {\r\n        return throwError(response.error);\r\n      })\r\n    );\r\n  }\r\n  getRegistrationRequests(){\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n    return this.http.get(`/api/admin/getRegistrationRequests`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  approveRequest(request){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.put(`/api/admin/approveRequest`, JSON.stringify(request), { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  deleteRequest(request,message){\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.put(`/api/admin/deleteRequest/${request.id}`,JSON.stringify(message), { headers: headers, observe: 'response' })\r\n    .pipe(\r\n      map(response => {\r\n        return response.body;\r\n      }),\r\n      catchError((response) => {\r\n        return throwError(response.error);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { map, catchError } from 'rxjs/operators'\r\nimport { throwError } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ClinicService {\r\n\r\n\tconstructor(private cookieService: CookieService,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router) { }\r\n\r\n\r\n\taddOrdination(ordination: any, clinic_id: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post(`/api/ordinations/${clinic_id}`, ordination, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\teditOrdination(ordination: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.put(`/api/ordinations/change`, ordination, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tdeleteOrdination(id: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/ordinations/delete/${id}`, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tapprovePrescription(prescription: any) {\r\n\t\tlet user = JSON.parse(this.cookieService.get('user'));\r\n    \tlet id = user[\"id\"];\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.put(`/api/prescriptions/approve/${id}`, JSON.stringify(prescription), { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t  }\r\n\tgetOrdinations(clinicID: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/ordinations/${clinicID}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\tgetPrescriptions(clinicID: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/prescriptions/${clinicID}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t  }\r\n\tsearchOrdinations(ordination: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\tvar searchParamsString = \"\";\r\n\t\tsearchParamsString += `name=${ordination.name}&number=${ordination.number}&clinic_id=${ordination.clinic_id}`\r\n\t\treturn this.http.get(`/api/ordinations/search_ordinations?${searchParamsString}`,\r\n\t\t\t\t\t\t\t{ headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tsearchPrescriptions(prescription: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\tvar searchParamsString = \"\";\r\n\t\tsearchParamsString += `name=${prescription.name}&surname=${prescription.surname}&medication=${prescription.medication}&clinic_id=${prescription.clinic_id}`\r\n\t\treturn this.http.get(`/api/prescriptions/search_prescriptions?${searchParamsString}`,\r\n\t\t\t\t\t\t\t{ headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\taddClinic(clinic: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/admin/addClinic', JSON.stringify(clinic), { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\tgetClinics() {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get('/api/admin/getClinics', { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\tgetClinic(id: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/admin/getClinic/${id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tchangeClinicInfo(changedClinic: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.put(`/api/admin/editClinic`, changedClinic, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tgetClinicAdmins(id: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/admin/getClinicAdmins/${id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\taddDoctor(doctor) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/doctor', JSON.stringify(doctor), { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\taddNurse(nurse) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/nurse', JSON.stringify(nurse), { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tdeleteNurse(id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/nurse/delete/${id}`, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tdeleteDoctor(id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/doctor/delete/${id}`, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\taddAdmin(admin) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/clinicAdmin/add', JSON.stringify(admin), { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tdeleteClinic(clinic) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/admin/deleteClinic/${clinic.id}`, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tgetDoctors(clinic_id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/doctor/getClinicDoctors/${clinic_id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tgetNurses(clinic_id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/nurse/getClinicNurses/${clinic_id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tsearchDoctors(doctor: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\tvar searchParamsString = \"\";\r\n\t\tsearchParamsString += `name=${doctor.name}&surname=${doctor.surname}&clinic_id=${doctor.clinic_id}`\r\n\t\treturn this.http.get(`/api/doctor/search_doctors?${searchParamsString}`,\r\n\t\t\t\t\t\t\t{ headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tsearchNurses(nurse: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\tvar searchParamsString = \"\";\r\n\t\tsearchParamsString += `name=${nurse.name}&surname=${nurse.surname}&clinic_id=${nurse.clinic_id}`\r\n\t\treturn this.http.get(`/api/nurse/search_nurse?${searchParamsString}`,\r\n\t\t\t\t\t\t\t{ headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tgetTypesOfExamination(clinic_id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get(`/api/examinationTypes/${clinic_id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tsearchTypesOfExamination(type: any) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\tvar searchParamsString = \"\";\r\n\t\tsearchParamsString += `name=${type.name}&clinic_id=${type.clinic_id}`\r\n\t\tif (type.minPrice !== \"\"){\r\n\t\t\tsearchParamsString += `&min_price=${type.minPrice}`\r\n\t\t}\r\n\t\tif (type.maxPrice !== \"\"){\r\n\t\t\tsearchParamsString += `&max_price=${type.maxPrice}`\r\n\t\t}\r\n\t\treturn this.http.get(`/api/examinationTypes/search_types?${searchParamsString}`,\r\n\t\t\t\t\t\t\t{ headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tdeleteTypeOfExamination(typeOfExamination_id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/examinationTypes/delete/${typeOfExamination_id}`, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\teditTypeOfExamination(typeOfExamination) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.put(`/api/examinationTypes/change`, typeOfExamination, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\taddTypeOfExamination(typeOfExamination, clinic_id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post(`/api/examinationTypes/${clinic_id}`, typeOfExamination, { headers: headers, observe: 'response' }).pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { map, catchError } from 'rxjs/operators'\r\nimport { throwError } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ClinicalCenterService {\r\n\r\n\tconstructor(private cookieService: CookieService,\r\n\t\tprivate userService: UserService,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router) { }\r\n\r\n\r\n\tgetMedications(){\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get('/api/medication', { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n\r\n\taddMedication(medication){\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/medication', medication, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n\r\n\teditMedication(changedMedication) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.put(`/api/medication/change`, changedMedication, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n\r\n\tdeleteMedication(id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/medication/delete/${id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n\r\n\tgetDiagnosis(){\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.get('/api/diagnosis', { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n\r\n\taddDiagnosis(diagnosis){\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/api/diagnosis', diagnosis, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n\r\n\teditDiagnosis(changedDiagnosis) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.put(`/api/diagnosis/change`, changedDiagnosis, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n\r\n\tdeleteDiagnosis(id) {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.delete(`/api/diagnosis/delete/${id}`, { headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n                catchError((response) => {\r\n                    return throwError(response.error);\r\n                })\r\n\t\t\t);\r\n\t}\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DialogComponent } from '../components/helperComponents/dialog/dialog.component';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    title: string,\r\n    message: string,\r\n    userInput: boolean,\r\n    btnOkText: string = 'OK',\r\n    btnCancelText: string = 'Cancel',\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<any> {\r\n    const modalRef = this.modalService.open(DialogComponent, { size: dialogSize });\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n    modalRef.componentInstance.userInput = userInput;\r\n    return modalRef.result;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from './user.service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorService {\r\n\r\nconstructor(private cookieService: CookieService,\r\n            private userService: UserService,\r\n            private http: HttpClient) { }\r\n            \r\ngetAppointments(){\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${JSON.parse(this.cookieService.get('token')).accessToken}`\r\n    });\r\n    return this.http.get(`/api/doctor/appointments/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n}\r\ngetOneAppointment(appID){\r\n  let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${JSON.parse(this.cookieService.get('token')).accessToken}`\r\n    });\r\n    return this.http.get(`/api/doctor/oneAppointment/${id}/${appID}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n          console.log(response.body);\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n}\r\n\r\ngetVacations(){\r\n  let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${JSON.parse(this.cookieService.get('token')).accessToken}`\r\n    });\r\n    return this.http.get(`/api/vacations/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n}\r\n\r\ngetDoctor() {\r\n  let user = JSON.parse(this.cookieService.get('user'));\r\n  let id = user[\"id\"];\r\n  let headers = new HttpHeaders({\r\n    'Authorization': `Bearer ${this.userService.getToken()}`\r\n  });\r\n  return this.http.get(`/api/doctor/getDoctor/${id}`, { headers: headers, observe: 'response' })\r\n    .pipe(\r\n      map(response => {\r\n        return response.body;\r\n      }),\r\n      catchError((response) => {\r\n        return throwError(response.error);\r\n      })\r\n    );\r\n}\r\nchangeDoctor(doctor){\r\n  let headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${this.userService.getToken()}`\r\n  });\r\n  return this.http.put(`/api/doctor/change`, JSON.stringify(doctor), { headers: headers, observe: 'response' })\r\n    .pipe(\r\n      map(response => {\r\n        return response.body;\r\n      }),\r\n      catchError((response) => {\r\n        return throwError(response.error);\r\n      })\r\n    );\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from './user.service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NurseService {\r\n\r\n  constructor(private cookieService: CookieService,\r\n    private userService: UserService,\r\n    private http: HttpClient) { }\r\n\r\ngetNurse() {\r\n  let user = JSON.parse(this.cookieService.get('user'));\r\n  let id = user[\"id\"];\r\n  let headers = new HttpHeaders({\r\n    'Authorization': `Bearer ${this.userService.getToken()}`\r\n  });\r\n  return this.http.get(`/api/nurse/${id}`, { headers: headers, observe: 'response' })\r\n    .pipe(\r\n      map(response => {\r\n        return response.body;\r\n      }),\r\n      catchError((response) => {\r\n        return throwError(response.error);\r\n      })\r\n    );\r\n}\r\n\r\nchangeNurse(nurse) {\r\n  let headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${this.userService.getToken()}`\r\n  });\r\n  return this.http.put(`/api/nurse/change`, JSON.stringify(nurse), { headers: headers, observe: 'response' })\r\n    .pipe(\r\n      map(response => {\r\n        return response.body;\r\n      }),\r\n      catchError((response) => {\r\n        return throwError(response.error);\r\n      })\r\n    );\r\n}\r\n\r\ngetVacations(){\r\n  let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${JSON.parse(this.cookieService.get('token')).accessToken}`\r\n    });\r\n    return this.http.get(`/api/vacations/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UserService } from './user.service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n  constructor(private cookieService: CookieService,\r\n    private userService: UserService,\r\n    private http: HttpClient) { }\r\n\r\n  getPatient() {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/patient/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  getPatientById(patient_id) {\r\n    let headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/patient/${patient_id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  changePatient(patient) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.put(`/api/patient/change`, JSON.stringify(patient), { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n\r\n  getClinics() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/admin/getClinics`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n\r\n  getClinic(clinic_id: any) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/admin/getClinic/${clinic_id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n\r\n  getPendingAppointments(){\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"id\"];\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/patient/getPendingAppointments/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  getClinicPatients(){\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    let id = user[\"clinic_id\"];\r\n    let headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/patient/getClinicPatients/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  getMedicalRecord(id){\r\n    if(!id){\r\n      let user = JSON.parse(this.cookieService.get('user'));\r\n      id = user.id;\r\n    }\r\n    \r\n    let headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/patient/getMedicalRecord/${id}`, { headers: headers, observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        }),\r\n        catchError((response) => {\r\n          return throwError(response.error);\r\n        })\r\n      );\r\n  }\r\n  searchPatients(patient: any){\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t\t});\r\n\t\tvar searchParamsString = \"\";\r\n\t\tsearchParamsString += `name=${patient.name}&surname=${patient.surname}&upin=${patient.upin}`\r\n\t\treturn this.http.get(`/api/patient/search_patients?${searchParamsString}`,\r\n\t\t\t\t\t\t\t{ headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n  }\r\n\r\n  checkAuthorityToViewMedicalRecord(patient_id){\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    let headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n    });\r\n    return this.http.get(`/api/doctor/canViewMedicalRecord/${patient_id}/${user.id}`,\r\n\t\t\t\t\t\t\t{ headers: headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => {\r\n\t\t\t\t\treturn response.body;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { map, catchError, flatMap } from 'rxjs/operators'\r\nimport { throwError, interval, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UserService {\r\n\tprivate user: any = null;\r\n\tprivate token: any = null;\r\n\tpasswordChanged = true;\r\n\tprivate get router() { return this.injector.get(Router); }\r\n\r\n\tconstructor(private cookieService: CookieService,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate injector: Injector) {\r\n\t\tinterval(200000)\r\n\t\t\t.pipe(\r\n\t\t\t\tflatMap(() => this.refreshToken())\r\n\t\t\t).subscribe(() => { })\r\n\t}\r\n\r\n\t/*\r\n\t*  Check if there is a logged in user\r\n\t*/\r\n\tcheckLoggedIn() {\r\n\t\tif (this.cookieService.get('user')) {\r\n\t\t\tthis.user = JSON.parse(this.cookieService.get('user'));\r\n\t\t\tthis.token = JSON.parse(this.cookieService.get('token'));\r\n\t\t}\r\n\t\treturn this.user;\r\n\t}\r\n\r\n\t/*\r\n\t*  Stores user in memory and cookieservice\r\n\t*/\r\n\tsetUser(user: any) {\r\n\t\tthis.user = user;\r\n\t\tthis.cookieService.set('user', JSON.stringify(user));\r\n\t}\r\n\r\n\tsetToken(token: any) {\r\n\t\tthis.token = token;\r\n\t\tthis.cookieService.set('token', JSON.stringify(token));\r\n\t}\r\n\r\n\tgetToken() {\r\n\t\treturn JSON.parse(this.cookieService.get('token')).accessToken;\r\n\t}\r\n\r\n\tgetUser() {\r\n\t\treturn JSON.parse(this.cookieService.get('user'));\r\n\t}\r\n\r\n\t/*\r\n\t*  Removes user from memory and cookieservice\r\n\t*/\r\n\tremoveUser() {\r\n\t\tthis.user = null;\r\n\t\tthis.cookieService.delete('user');\r\n\t}\r\n\r\n\tremoveToken() {\r\n\t\tthis.token = null;\r\n\t\tthis.cookieService.delete('token');\r\n\t}\r\n\r\n\ttokenIsPresent() {\r\n\t\treturn this.token != undefined && this.token != null;\r\n\t}\r\n\t/* \r\n\t*  Sends http request to server\r\n\t*  Calls setUser to store it in memory and cookieservice\r\n\t*  Prints error to console \r\n\t*/\r\n\tlogin(email: string, password: string) {\r\n\t\tvar user = {\r\n\t\t\temail,\r\n\t\t\tpassword\r\n\t\t}\r\n\t\tconst headers = new HttpHeaders({\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\t\treturn this.http.post('/auth/login', user, { headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((response) => {\r\n\t\t\t\t\tconst userState = response.body;\r\n\t\t\t\t\tthis.setUser(userState['user']);\r\n\t\t\t\t\tthis.setToken(userState['token']);\r\n\t\t\t\t\tthis.passwordChanged = userState['passwordChanged'];\r\n\t\t\t\t\tif (!this.passwordChanged) {\r\n\t\t\t\t\t\tthis.router.navigate(['/change-password']);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (this.checkLoggedIn().roles.indexOf('PATIENT') != -1) {\r\n\t\t\t\t\t\t\tthis.router.navigate(['/patient']);\r\n\t\t\t\t\t\t} else if (this.checkLoggedIn().roles.indexOf('DOCTOR') != -1) {\r\n\t\t\t\t\t\t\tthis.router.navigate(['/doctor']);\r\n\t\t\t\t\t\t} else if (this.checkLoggedIn().roles.indexOf('NURSE') != -1) {\r\n\t\t\t\t\t\t\tthis.router.navigate(['/nurse']);\r\n\t\t\t\t\t\t} else if(this.checkLoggedIn().roles.indexOf('ADMINCC') != -1){\r\n\t\t\t\t\t\t\tthis.router.navigate(['/adminCC']);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.router.navigate(['/']);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this.user;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tregister(registerRequest: any) {\r\n\t\tconst headers = new HttpHeaders({\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\t\treturn this.http.post('/auth/signup', registerRequest, { headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((response) => {\r\n\t\t\t\t\tconst userState = response.body;\r\n\t\t\t\t\talert(\"Your request has been sent. Check your email.\")\r\n\t\t\t\t\tthis.router.navigate(['/login']);\r\n\r\n\t\t\t\t\treturn this.user;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.removeUser();\r\n\t\tthis.removeToken();\r\n\t\tthis.router.navigate(['/login']);\r\n\t}\r\n\r\n\tchangePassowrd(passwordChanger) {\r\n\t\tconst headers = new HttpHeaders({\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${this.getToken()}`\r\n\t\t});\r\n\t\treturn this.http.post('/auth/change-password', JSON.stringify(passwordChanger), { headers, observe: 'response' })\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((response) => {\r\n\t\t\t\t\tthis.passwordChanged = true;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\trefreshToken() {\r\n\t\tif (!(this.cookieService.get('token') === '')) {\r\n\t\t\tconst headers = new HttpHeaders({\r\n\t\t\t\t'Authorization': `Bearer ${this.getToken()}`\r\n\t\t\t});\r\n\t\t\treturn this.http.post('/auth/refresh', {}, { headers, observe: 'response' })\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap((response) => {\r\n\t\t\t\t\t\tconst userState = response.body;\r\n\t\t\t\t\t\tthis.setUser(userState['user']);\r\n\t\t\t\t\t\tthis.setToken(userState['token']);\r\n\t\t\t\t\t\tthis.passwordChanged = userState['passwordChanged'];\r\n\t\t\t\t\t\tif (!this.passwordChanged) {\r\n\t\t\t\t\t\t\tthis.router.navigate(['/change-password']);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.user;\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcatchError((response) => {\r\n\t\t\t\t\t\tthis.removeUser();\r\n\t\t\t\t\t\tthis.removeToken();\r\n\t\t\t\t\t\treturn throwError(response.error);\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.removeUser();\r\n\t\t\tthis.removeToken();\r\n\t\t\treturn new Observable();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VacationService {\r\n  \r\n\r\n  constructor(private userService: UserService,\r\n\tprivate cookieService: CookieService,\r\n    private http: HttpClient) { }\r\n\r\n  sendRequest(vacation: any) {\r\n\tlet headers = new HttpHeaders({\r\n\t\t'Authorization': `Bearer ${this.userService.getToken()}`\r\n\t});\r\n\treturn this.http.post(`/api/vacations/request`, vacation, { headers: headers, observe: 'response' })\r\n\t\t.pipe(\r\n\t\t\tmap(response => {\r\n\t\t\t\treturn response.body;\r\n\t\t\t}),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\treturn throwError(response.error);\r\n\t\t\t})\r\n\t\t);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}